{"repository_name":"github.com/crystal-data/num.cr","body":"![num.cr](https://raw.githubusercontent.com/crystal-data/bottle/rename/static/numcr_logo.png)\n\n[![Join the chat at https://gitter.im/crystal-data/bottle](https://badges.gitter.im/crystal-data/bottle.svg)](https://gitter.im/crystal-data/bottle?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://travis-ci.com/crystal-data/num.cr.svg?branch=master)](https://travis-ci.com/crystal-data/num.cr)\n\nNum.cr is the core shard needed for scientific computing with Crystal\n\n- **Website:** https://crystal-data.github.io/num.cr\n- **API Documentation:** https://crystal-data.github.io/num.cr/\n- **Source code:** https://github.com/crystal-data/num.cr\n- **Bug reports:** https://github.com/crystal-data/num.cr/issues\n\nIt provides:\n\n- An n-dimensional `Tensor` data structure\n- sophisticated reduction and accumulation routines\n- data structures that can easily be passed to C libraries\n- powerful linear algebra routines backed by LAPACK and BLAS\n\n## Prerequisites\n\nNum.cr relies on various BLAS and LAPACK implementations to provide performant linear\nalgebra routines.  The defaults are OpenBLAS and Lapacke.  On Darwin, the Accelerate\nframework is used by default.  Num.cr also allows for computing run on a GPU, backed\nby OpenCL, with BLAS operations backed by ClBlast.  Please review the relevant installation\ninstructions for these libraries if you would like to take advantage of their features.\n\n## Usage\n\nNum.cr provides data structures that facilitate element-wise operations,\naccumulations, and reductions.  While some operations are backed by BLAS\nand LaPACK, many vectorized operations use iteration written in Crystal.\nThe primary goal of this library was to provide a NumPy like interface in\nCrystal, and performance will be revisited constantly as the library is\nimproved.\n\nContributing\n------------\nNum.cr requires help in many different ways to continue to grow as a shard.\nContributions such as high level documentation and code quality checks are needed just\nas much as API enhancements.  If you are considering larger scale contributions\nthat extend beyond minor enhancements and bug fixes, contact Crystal Data\nin order to be added to the organization to gain access to review and merge\npermissions.\n\n## Installation\n\nAdd this to your applications `shard.yml`\n\n```\ndependencies:\n  num:\n    github: crystal-data/num.cr\n```\n\n## Getting started with Num.cr\n\nThe core data structure of Num.cr is the `Tensor`, a flexible N-dimensional data structure.\nThere are many ways to initialize a `Tensor`, or a `ClTensor` if you need GPU accelerated\noperations.\n\n```crystal\n[1, 2, 3].to_tensor\nTensor.from_array [1, 2, 3]\nTensor(UInt8).zeros([3, 3, 2])\nTensor.random(0.0...1.0, [2, 2, 2])\n\nClTensor(Float32).zeros_like(some_tensor)\nClTensor(Float64).full([3, 4, 5], 3.8)\n```\n\nTensors support numerous mathematical operations and manipulation routines, including\noperations requiring broadcasting to other shapes.\n\n```crystal\na = [1, 2, 3, 4].to_tensor\nb = [[3, 4, 5, 6], [5, 6, 7, 8]].to_tensor\n\n# Convert a Tensor to a GPU backed Tensor\nacl = a.astype(Float64).opencl\n\nputs Num.add(a, b)\n\n# a is broadcast to b's shape\n# [[ 4,  6,  8, 10],\n#  [ 6,  8, 10, 12]]\n\nputs a.reshape(2, 2)\n\n# [[1, 2],\n#  [3, 4]]\n\nputs b.transpose\n\n# [[3, 5],\n#  [4, 6],\n#  [5, 7],\n#  [6, 8]]\n\nputs Num.cos(acl).cpu\n\n# [0.540302 , -0.416147, -0.989992, -0.653644]\n```\n\nBoth CPU backed Tensors and GPU backed Tensors support linear algebra routines\nbacked by optimized BLAS libraries.\n\n```crystal\na = [[1, 2], [3, 4]].to_tensor.astype(Float32)\nb = [[3, 4], [5, 6]].to_tensor.astype(Float32)\n\nacl = a.opencl\nbcl = b.opencl\n\nputs a.inv\n\n# [[-2  , 1   ],\n#  [1.5 , -0.5]]\n\nputs acl.matmul(bcl).cpu\n\n# [[13, 16],\n#  [29, 36]]\n```\n\nReview the documentation for full implementation details, and if something is missing,\nopen an issue to add it!\n","program":{"html_id":"github.com/crystal-data/num.cr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/crystal-data/num.cr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[{"id":"extend_crystal_arithmetic(dtypes,operators)-macro","html_id":"extend_crystal_arithmetic(dtypes,operators)-macro","name":"extend_crystal_arithmetic","doc":null,"summary":null,"abstract":false,"args":[{"name":"dtypes","doc":null,"default_value":"","external_name":"dtypes","restriction":""},{"name":"operators","doc":null,"default_value":"","external_name":"operators","restriction":""}],"args_string":"(dtypes, operators)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L27","def":{"name":"extend_crystal_arithmetic","args":[{"name":"dtypes","doc":null,"default_value":"","external_name":"dtypes","restriction":""},{"name":"operators","doc":null,"default_value":"","external_name":"operators","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"  \n{% for dtype in dtypes %}\n  struct {{ dtype }}\n    {% for operator in operators %}\n      def {{ operator[:sym].id }}(other : Tensor)\n        Num.{{ operator[:name] }}(self, other)\n      end\n    {% end %}\n  end\n  {% end %}\n\n\n"}}],"types":[{"html_id":"github.com/crystal-data/num.cr/AnyArray","path":"AnyArray.html","kind":"class","full_name":"AnyArray(T)","name":"AnyArray","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","kind":"class","full_name":"NumInternal::AnyTensor","name":"AnyTensor"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","kind":"class","full_name":"NumInternal::AnyTensor","name":"AnyTensor"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"array/array.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-data/num.cr/Tensor","kind":"class","full_name":"Tensor(T)","name":"Tensor"}],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"from_array(array:Array)-class-method","html_id":"from_array(array:Array)-class-method","name":"from_array","doc":null,"summary":null,"abstract":false,"args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array"}],"args_string":"(array : Array)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L196","def":{"name":"from_array","args":[{"name":"array","doc":null,"default_value":"","external_name":"array","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"newshape = calculate_shape(array)\nnewstrides = NumInternal.shape_to_strides(newshape)\nptr = array.flatten.to_unsafe\nnew(ptr, newshape, newstrides)\n"}},{"id":"from_json(string_or_io,shape:Array(Int32))-class-method","html_id":"from_json(string_or_io,shape:Array(Int32))-class-method","name":"from_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(string_or_io, shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L203","def":{"name":"from_json","args":[{"name":"string_or_io","doc":null,"default_value":"","external_name":"string_or_io","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = new(shape)\nret_iter = NumInternal::UnsafeContigFlatIter.new(ret)\nparser = JSON::PullParser.new(string_or_io)\nparser.read_array do\n  ret_iter.next.value = T.new(parser)\nend\nret\n"}}],"constructors":[{"id":"new(buffer:Pointer(T),shape,strides,flags=Num::ArrayFlags::All)-class-method","html_id":"new(buffer:Pointer(T),shape,strides,flags=Num::ArrayFlags::All)-class-method","name":"new","doc":"Initialization method for a generic buffer, shape and strides.\nThis method updates flags on the passed array, if the array\nis read only, its flags need to be updated later","summary":"<p>Initialization method for a generic buffer, shape and strides.</p>","abstract":false,"args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Pointer(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":""},{"name":"flags","doc":null,"default_value":"Num::ArrayFlags::All","external_name":"flags","restriction":""}],"args_string":"(buffer : Pointer(T), shape, strides, flags = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">ArrayFlags</span><span class=\"t\">::</span><span class=\"t\">All</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L144","def":{"name":"new","args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Pointer(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":""},{"name":"flags","doc":null,"default_value":"Num::ArrayFlags::All","external_name":"flags","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyArray(T).allocate\n_.initialize(buffer, shape, strides, flags)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor)-class-method","html_id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor)-class-method","name":"new","doc":"Initializes an ndarray from a provided shape and memory layout.\nFlags will be auto-computed","summary":"<p>Initializes an ndarray from a provided shape and memory layout.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L109","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyArray(T).allocate\n_.initialize(shape, order)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),value:T,order:Num::OrderType=Num::RowMajor)-class-method","html_id":"new(shape:Array(Int32),value:T,order:Num::OrderType=Num::RowMajor)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), value : T, order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L125","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyArray(T).allocate\n_.initialize(shape, value, order)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(scalar:T)-class-method","html_id":"new(scalar:T)-class-method","name":"new","doc":"Crates a scalar tensor, that acts like a scalar while still being\na Tensor.  This was primarily added so that indexing operations\ncould return single elements without having a union return type.","summary":"<p>Crates a scalar tensor, that acts like a scalar while still being a Tensor.</p>","abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"T"}],"args_string":"(scalar : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L155","def":{"name":"new","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyArray(T).allocate\n_.initialize(scalar)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor,&block:Int32->T)-class-method","html_id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor,&amp;block:Int32-&gt;T)-class-method","name":"new","doc":"Yields an array from a provided shape and a block.  The block only\nprovides the absolute index, not an index dependent on the shape,\nso if a user wants to handle an arbitrary shape inside the block\nthey need to do that themselves.","summary":"<p>Yields an array from a provided shape and a block.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>, &block : Int32 -> T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L168","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> T)"},"return_type":"","visibility":"Public","body":"size = shape.product\nptr = Pointer(T).malloc(size) do |i|\n  yield i\nend\nstrides = NumInternal.shape_to_strides(shape, order)\nnew(ptr, shape, strides)\n"}},{"id":"new(nrows:Int32,ncols:Int32,&block:Int32,Int32->T)-class-method","html_id":"new(nrows:Int32,ncols:Int32,&amp;block:Int32,Int32-&gt;T)-class-method","name":"new","doc":"Yields an array from a provided number of rows and columns.\nThis can quickly create matrices, useful for several `Tensor` creattion\nmethods such as the underlying implementation of `eye`, and `diag`.\n\nThis method does provide *i* and *j* variables for the passed block,\nso no offset calculations need to be done by the user.","summary":"<p>Yields an array from a provided number of rows and columns.</p>","abstract":false,"args":[{"name":"nrows","doc":null,"default_value":"","external_name":"nrows","restriction":"Int32"},{"name":"ncols","doc":null,"default_value":"","external_name":"ncols","restriction":"Int32"}],"args_string":"(nrows : Int32, ncols : Int32, &block : Int32, Int32 -> T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L183","def":{"name":"new","args":[{"name":"nrows","doc":null,"default_value":"","external_name":"nrows","restriction":"Int32"},{"name":"ncols","doc":null,"default_value":"","external_name":"ncols","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32, Int32 -> T)"},"return_type":"","visibility":"Public","body":"data = Pointer(T).malloc(nrows * ncols) do |idx|\n  i = idx // ncols\n  j = idx % ncols\n  yield i, j\nend\nif (nrows == 0) || (ncols == 0)\n  raise(NumInternal::ShapeError.new(\"Cannot initialize an empty matrix\"))\nend\nstrides = NumInternal.shape_to_strides([nrows, ncols], Num::RowMajor)\nnew(data, [nrows, ncols], strides)\n"}}],"instance_methods":[{"id":"[](idx:Array)-instance-method","html_id":"[](idx:Array)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Array"}],"args_string":"(idx : Array)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L258","def":{"name":"[]","args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"slice_internal(idx)"}},{"id":"[](*args)-instance-method","html_id":"[](*args)-instance-method","name":"[]","doc":"Returns a view of an ndarray from a list of indexers.\nValid indexers are integers, such as `1` or `2`, ranges, such\nas `...` or `1...`, and tuples of a range, and an integer representing\nthe step of the index operation, such as `{..., -1}`","summary":"<p>Returns a view of an ndarray from a list of indexers.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L254","def":{"name":"[]","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"slice_internal(args.to_a)"}},{"id":"[]=(idx:Array,assign:AnyArray(T))-instance-method","html_id":"[]=(idx:Array,assign:AnyArray(T))-instance-method","name":"[]=","doc":"Writes to a view of an ndarray given a list of indexers and a value to\nmap across the array.  This is equivalent to the variadic method in\nactual functionality","summary":"<p>Writes to a view of an ndarray given a list of indexers and a value to map across the array.</p>","abstract":false,"args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Array"},{"name":"assign","doc":null,"default_value":"","external_name":"assign","restriction":"AnyArray(T)"}],"args_string":"(idx : Array, assign : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L281","def":{"name":"[]=","args":[{"name":"idx","doc":null,"default_value":"","external_name":"idx","restriction":"Array"},{"name":"assign","doc":null,"default_value":"","external_name":"assign","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write?\nold = self[idx]\nold.map2!(assign) do |_, j|\n  {% if T == String %}\n        j.to_s\n      {% else %}{% if T == Bool %}\n        j != 0 ? true : false\n      {% else %}\n        T.new(j)\n      {% end %}{% end %}\nend\n"}},{"id":"[]=(*args:*U)forallU-instance-method","html_id":"[]=(*args:*U)forallU-instance-method","name":"[]=","doc":"Writes to a view of an ndarray given a variadic tuple of indexers and a value to\nmap across the array.  The value to map will always be the last value\nprovided as args, so with some macro magic we can defer to the correct\nmethod","summary":"<p>Writes to a view of an ndarray given a variadic tuple of indexers and a value to map across the array.</p>","abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"*U"}],"args_string":"(*args : <span class=\"o\">*</span><span class=\"t\">U</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L266","def":{"name":"[]=","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":"*U"}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write?\n{% if true %}\n      aref_set(\n        {% for i in 0...(U.size - 1) %}\n          args[{{ i }}],\n        {% end %}\n        value: args[{{ U.size - 1 }}]\n      )\n    {% end %}\n"}},{"id":"as_strided(shape:Array(Int32),strides:Array(Int32))-instance-method","html_id":"as_strided(shape:Array(Int32),strides:Array(Int32))-instance-method","name":"as_strided","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32), strides : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L452","def":{"name":"as_strided","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal.as_strided(self, shape, strides)"}},{"id":"astype(dtype:U.class)forallU-instance-method","html_id":"astype(dtype:U.class)forallU-instance-method","name":"astype","doc":null,"summary":null,"abstract":false,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"args_string":"(dtype : <span class=\"t\">U</span>.<span class=\"k\">class</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L456","def":{"name":"astype","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = (self.basetype(U)).new(@shape)\n{% if U == Bool %}\n      ret.map2!(self) do |_, j|\n        j != 0\n      end\n    {% else %}\n      ret.map2!(self) do |_, j|\n        U.new(j)\n      end\n    {% end %}\nret\n"}},{"id":"axis(axis=-1,keepdims=false)-instance-method","html_id":"axis(axis=-1,keepdims=false)-instance-method","name":"axis","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(axis = <span class=\"n\">-1</span>, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L368","def":{"name":"axis","args":[{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":""},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal::AxisIter.new(self, axis, keepdims)"}},{"id":"basetype(dtype:U.class)forallU-instance-method","html_id":"basetype(dtype:U.class)forallU-instance-method","name":"basetype","doc":"Returns the basetype of an array with the ability to\noverride the generic type","summary":"<p>Returns the basetype of an array with the ability to override the generic type</p>","abstract":false,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"args_string":"(dtype : <span class=\"t\">U</span>.<span class=\"k\">class</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L77","def":{"name":"basetype","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"AnyArray(U)"}},{"id":"broadcast_to(shape:Array(Int32))-instance-method","html_id":"broadcast_to(shape:Array(Int32))-instance-method","name":"broadcast_to","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L448","def":{"name":"broadcast_to","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal.broadcast_to(self, shape)"}},{"id":"check_type-instance-method","html_id":"check_type-instance-method","name":"check_type","doc":"This should be overwritten by all base classes.\nDetermines if an array is initialized containing\na valid generic type","summary":"<p>This should be overwritten by all base classes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L52","def":{"name":"check_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Clones an array","summary":"<p>Clones an array</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L61","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NumInternal::NotImplementedError.new)"}},{"id":"diag_view-instance-method","html_id":"diag_view-instance-method","name":"diag_view","doc":"Returns a view of the diagonal of an array.  Only valid if\nthe array has two dimensions.  Offsets are not supported.","summary":"<p>Returns a view of the diagonal of an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L309","def":{"name":"diag_view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ndims == 2\nelse\n  raise(NumInternal::ShapeError.new(\"Array must be two-dimensional\"))\nend\nnel = @shape.min\nnewshape = [nel]\nnewstrides = [@strides.sum]\nnewflags = @flags.dup\nnewflags = newflags & (~Num::ArrayFlags::OwnData)\nret = self.class.new(to_unsafe, newshape, newstrides, newflags)\nret.update_flags(Num::ArrayFlags::Fortran | Num::ArrayFlags::Contiguous)\nret\n"}},{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":"Returns the generic type of an array","summary":"<p>Returns the generic type of an array</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L71","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T"}},{"id":"dup(order:Num::OrderType?=nil)-instance-method","html_id":"dup(order:Num::OrderType?=nil)-instance-method","name":"dup","doc":"Duplicates a BaseArray, respecting the passed order of memory\nprovided.  Useful for throwing ndarrays down to LAPACK\nsince they must be in Fortran style order","summary":"<p>Duplicates a BaseArray, respecting the passed order of memory provided.</p>","abstract":false,"args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Num::OrderType | ::Nil"}],"args_string":"(order : Num::OrderType? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L473","def":{"name":"dup","args":[{"name":"order","doc":null,"default_value":"nil","external_name":"order","restriction":"Num::OrderType | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"contig = uninitialized Num::ArrayFlags\ncase order\nwhen Num::RowMajor\n  contig = Num::ArrayFlags::Contiguous\nwhen Num::ColMajor\n  contig = Num::ArrayFlags::Fortran\nwhen nil\n  contig = @flags & (Num::ArrayFlags::Contiguous | Num::ArrayFlags::Fortran)\nelse\n  raise(NumInternal::ValueError.new(\"Invalid argument for order.  Valid options are RowMajor, or ColMajor\"))\nend\ncontig_char = contig.fortran? ? Num::ColMajor : Num::RowMajor\nret = self.class.new(@shape, contig_char)\nif ((contig & @flags) != Num::ArrayFlags::None)\n  self.to_unsafe.copy_to(ret.to_unsafe, @size)\nelse\n  ret.map2!(self) do |_, j|\n    j\n  end\nend\nret.update_flags\nret\n"}},{"id":"dup_view-instance-method","html_id":"dup_view-instance-method","name":"dup_view","doc":"Shallow copies the array.  Shape and strides are copied, but\nthe underlying data is not.  The returned array does\nnot own its own data, and its base reflects that.","summary":"<p>Shallow copies the array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L299","def":{"name":"dup_view","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"newshape = @shape.dup\nnewstrides = @strides.dup\nnewflags = @flags.dup\nnewflags = newflags & (~Num::ArrayFlags::OwnData)\nself.class.new(to_unsafe, newshape, newstrides, newflags)\n"}},{"id":"flags:Num::ArrayFlags-instance-method","html_id":"flags:Num::ArrayFlags-instance-method","name":"flags","doc":"Flags indicating the memory layout of an array","summary":"<p>Flags indicating the memory layout of an array</p>","abstract":false,"args":[],"args_string":" : Num::ArrayFlags","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L44","def":{"name":"flags","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Num::ArrayFlags","visibility":"Public","body":"@flags"}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":"Frees the memory of an array","summary":"<p>Frees the memory of an array</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L56","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@storage.free"}},{"id":"inspect(io)-instance-method","html_id":"inspect(io)-instance-method","name":"inspect","doc":"Adds the string representation of an ndarray to the passed IO, this\nis primarily useful for informing how the array looks when stored\nin an array","summary":"<p>Adds the string representation of an ndarray to the passed IO, this is primarily useful for informing how the array looks when stored in an array</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L94","def":{"name":"inspect","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_s(io)"}},{"id":"iter-instance-method","html_id":"iter-instance-method","name":"iter","doc":"Returns an iterator over the flattened elements of an array.\nThis iterator will always iterate in C-contiguous order, regardless\nof the strides of the array.  It will iterate much faster over\narrays that are c-contiguous","summary":"<p>Returns an iterator over the flattened elements of an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L325","def":{"name":"iter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if flags.contiguous?\n  NumInternal::ContigFlatIter.new(self)\nelse\n  NumInternal::NDFlatIter.new(self)\nend"}},{"id":"iter2(other:AnyArray(U))forallU-instance-method","html_id":"iter2(other:AnyArray(U))forallU-instance-method","name":"iter2","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray(U)"}],"args_string":"(other : AnyArray(U)) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L352","def":{"name":"iter2","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if flags.contiguous? && other.flags.contiguous?\n  NumInternal::ContigFlatIter2.new(self, other)\nelse\n  NumInternal::NDFlatIter2.new(self, other)\nend"}},{"id":"iter3(o1:AnyArray(U),o2:AnyArray(V))forallU,V-instance-method","html_id":"iter3(o1:AnyArray(U),o2:AnyArray(V))forallU,V-instance-method","name":"iter3","doc":null,"summary":null,"abstract":false,"args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray(U)"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray(V)"}],"args_string":"(o1 : AnyArray(U), o2 : AnyArray(V)) forall U, V","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L360","def":{"name":"iter3","args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray(U)"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (flags.contiguous? && o1.flags.contiguous?) && o2.flags.contiguous?\n  NumInternal::ContigFlatIter3.new(self, o1, o2)\nelse\n  NumInternal::NDFlatIter3.new(self, o1, o2)\nend"}},{"id":"iter_flat_indexed(&)-instance-method","html_id":"iter_flat_indexed(&amp;)-instance-method","name":"iter_flat_indexed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L337","def":{"name":"iter_flat_indexed","args":[],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"i = 0\nif flags.contiguous?\n  (NumInternal::ContigFlatIter.new(self)).each do |el|\n    yield el, i\n    i = i + 1\n  end\nelse\n  (NumInternal::NDFlatIter.new(self)).each do |el|\n    yield el, i\n    i = i + 1\n  end\nend\n"}},{"id":"map(&block:T->U)forallU-instance-method","html_id":"map(&amp;block:T-&gt;U)forallU-instance-method","name":"map","doc":"Maps an ndarray and returns a copy, storing the result of the yielded block.\nThis can result in a different return type, since the operation allocates\na new array before returning, so no casting will occur back to the original\ndtype","summary":"<p>Maps an ndarray and returns a copy, storing the result of the yielded block.</p>","abstract":false,"args":[],"args_string":"(&block : T -> U) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L386","def":{"name":"map","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T -> U)"},"return_type":"","visibility":"Public","body":"ret = (basetype(U)).new(shape)\n(ret.iter2(self)).each do |i, j|\n  i.value = yield j.value\nend\nret\n"}},{"id":"map!(&)-instance-method","html_id":"map!(&amp;)-instance-method","name":"map!","doc":"Maps an ndarray in place, storing the result of the yielded block.\nSince this is an in-place operation, the result is cast to the type\nof the input, and information may be lost if the operation otherwise\nwould have required a cast.","summary":"<p>Maps an ndarray in place, storing the result of the yielded block.</p>","abstract":false,"args":[],"args_string":"(&)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L376","def":{"name":"map!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"iter.each do |i|\n  i.value = T.new(yield i.value)\nend"}},{"id":"map2(other:AnyArray(U),&block:T,U->V)forallU,V-instance-method","html_id":"map2(other:AnyArray(U),&amp;block:T,U-&gt;V)forallU,V-instance-method","name":"map2","doc":"Maps a function across two ndarrays.  This returns a copy, so no casting\nwill occur, and the arrays will be broadcast against each other\nbefore returning.","summary":"<p>Maps a function across two ndarrays.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray(U)"}],"args_string":"(other : AnyArray(U), &block : T, U -> V) forall U, V","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L414","def":{"name":"map2","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, U -> V)"},"return_type":"","visibility":"Public","body":"a, b = NumInternal.broadcast2(self, other)\nret = (basetype(V)).new(a.shape)\n(ret.iter3(a, b)).each do |i, j, k|\n  i.value = yield j.value, k.value\nend\nret\n"}},{"id":"map2!(other:AnyArray,&)forallU-instance-method","html_id":"map2!(other:AnyArray,&amp;)forallU-instance-method","name":"map2!","doc":"Maps a function across two ndarrays.  This is an inplace operation, so the\nshape of the other array must be broadcastable to the shape of the input\narray.","summary":"<p>Maps a function across two ndarrays.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray"}],"args_string":"(other : AnyArray, &) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L397","def":{"name":"map2!","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"other = NumInternal.broadcast_to(other, shape)\n(self.iter2(other)).each do |i, j|\n  {% if T == String %}\n        i.value = (yield i.value, j.value).to_s\n      {% else %}{% if T == Bool %}\n        i.value = (yield i.value, j.value) ? true : false\n      {% else %}\n        i.value = T.new(yield(i.value, j.value))\n      {% end %}{% end %}\nend\n"}},{"id":"map3(o1:AnyArray(U),o2:AnyArray(V),&block:T,U,V->W)forallU,V,W-instance-method","html_id":"map3(o1:AnyArray(U),o2:AnyArray(V),&amp;block:T,U,V-&gt;W)forallU,V,W-instance-method","name":"map3","doc":"Maps a function across three ndarrays.  The arrays will be broadcast\nagainst each other and a copy will be made.  The result type is based\non the resulting type of the block, and no casting will  occur since\na new array is allocated.","summary":"<p>Maps a function across three ndarrays.</p>","abstract":false,"args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray(U)"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray(V)"}],"args_string":"(o1 : AnyArray(U), o2 : AnyArray(V), &block : T, U, V -> W) forall U, V, W","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L439","def":{"name":"map3","args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray(U)"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(T, U, V -> W)"},"return_type":"","visibility":"Public","body":"a, b, c = NumInternal.broadcast(self, o1, o2)\nret = (basetype(W)).new(a.shape)\n(NumInternal::NDFlatIter4.new(ret, a, b, c)).each do |i, j, k, l|\n  i.value = yield j.value, k.value, l.value\nend\nret\n"}},{"id":"map3!(o1:AnyArray,o2:AnyArray,&)-instance-method","html_id":"map3!(o1:AnyArray,o2:AnyArray,&amp;)-instance-method","name":"map3!","doc":"Maps a function across three ndarrays in place.  The shapes of the\nlast two arrays must be broadcastable to the original two arrays,\nso that the operation can be handled in place.  Casting will\noccur if the result is not of type T","summary":"<p>Maps a function across three ndarrays in place.</p>","abstract":false,"args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray"}],"args_string":"(o1 : AnyArray, o2 : AnyArray, &)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L427","def":{"name":"map3!","args":[{"name":"o1","doc":null,"default_value":"","external_name":"o1","restriction":"AnyArray"},{"name":"o2","doc":null,"default_value":"","external_name":"o2","restriction":"AnyArray"}],"double_splat":null,"splat_index":null,"yields":3,"block_arg":null,"return_type":"","visibility":"Public","body":"o1 = NumInternal.bcast_if(o1, shape)\no2 = NumInternal.bcast_if(o2, shape)\n(NumInternal::NDFlatIter3.new(self, o1, o2)).each do |i, j, k|\n  i.value = T.new(yield i.value, j.value, k.value)\nend\n"}},{"id":"matrix_iter-instance-method","html_id":"matrix_iter-instance-method","name":"matrix_iter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L333","def":{"name":"matrix_iter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal::MatrixIter.new(self)"}},{"id":"ravel-instance-method","html_id":"ravel-instance-method","name":"ravel","doc":"Return a contiguous flattened array.\nA 1-D array, containing the elements of the input, is returned.\nA copy is made only if needed.","summary":"<p>Return a contiguous flattened array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L556","def":{"name":"ravel","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reshape(-1)"}},{"id":"reduce_fast(axis,keepdims=false,&)-instance-method","html_id":"reduce_fast(axis,keepdims=false,&amp;)-instance-method","name":"reduce_fast","doc":"Reduces a tensor along an axis","summary":"<p>Reduces a tensor along an axis</p>","abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(axis, keepdims = <span class=\"n\">false</span>, &)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L616","def":{"name":"reduce_fast","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if axis < 0\n  axis = ndims + axis\nend\nif axis < ndims\nelse\n  raise(\"Axis out of range for this array\")\nend\nnewshape = shape.dup\nnewstrides = strides.dup\nptr = to_unsafe\nif !keepdims\n  newshape.delete_at(axis)\n  newstrides.delete_at(axis)\nelse\n  newshape[axis] = 1\n  newstrides[axis] = 0\nend\nret = (self.class.new(to_unsafe, newshape, newstrides, flags)).dup\n1.step(to: shape[axis] - 1) do |_|\n  ptr = ptr + strides[axis]\n  tmp = self.class.new(ptr, newshape, newstrides, flags)\n  ret.map2!(tmp) do |x, y|\n    yield x, y\n  end\nend\nret\n"}},{"id":"reshape(newshape:Array(Int32))-instance-method","html_id":"reshape(newshape:Array(Int32))-instance-method","name":"reshape","doc":"Gives a new shape to an array without changing its data.","summary":"<p>Gives a new shape to an array without changing its data.</p>","abstract":false,"args":[{"name":"newshape","doc":null,"default_value":"","external_name":"newshape","restriction":"Array(Int32)"}],"args_string":"(newshape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L501","def":{"name":"reshape","args":[{"name":"newshape","doc":null,"default_value":"","external_name":"newshape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if newshape == shape\n  return self\nend\nnewsize = 1\ncur_size = size\nautosize = -1\nnewshape.each_with_index do |val, i|\n  if val < 0\n    if autosize >= 0\n      raise(NumInternal::ValueError.new(\"Only shape dimension can be automatic\"))\n    end\n    autosize = i\n  else\n    newsize = newsize * val\n  end\nend\nif autosize >= 0\n  newshape = newshape.dup\n  newshape[autosize] = cur_size // newsize\n  newsize = newsize * newshape[autosize]\nend\nif newsize != cur_size\n  raise(NumInternal::ShapeError.new(\"Shapes #{shape} cannot be reshaped to #{newshape}\"))\nend\nif flags & Num::ArrayFlags::Contiguous\n  newstrides = NumInternal.shape_to_strides(newshape, Num::RowMajor)\nelse\n  newstrides = NumInternal.shape_to_strides(newshape, Num::ColMajor)\nend\nif flags.fortran? || flags.contiguous?\n  newflags = flags.dup\n  newflags = newflags & (~Num::ArrayFlags::OwnData)\n  ret = self.class.new(to_unsafe, newshape, newstrides, newflags)\n  ret.update_flags(Num::ArrayFlags::Fortran | Num::ArrayFlags::Contiguous)\n  ret\nelse\n  tmp = dup\n  ret = self.class.new(tmp.to_unsafe, newshape, newstrides, tmp.flags.dup)\n  ret.update_flags(Num::ArrayFlags::Fortran | Num::ArrayFlags::Contiguous)\n  ret\nend\n"}},{"id":"reshape(*args)-instance-method","html_id":"reshape(*args)-instance-method","name":"reshape","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L549","def":{"name":"reshape","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"reshape(args.to_a)"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Number of elements in an array","summary":"<p>Number of elements in an array</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L47","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"storage:NumInternal::CpuStorage(T)-instance-method","html_id":"storage:NumInternal::CpuStorage(T)-instance-method","name":"storage","doc":"Stores an arrays data buffer","summary":"<p>Stores an arrays data buffer</p>","abstract":false,"args":[],"args_string":" : NumInternal::CpuStorage(T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L41","def":{"name":"storage","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NumInternal::CpuStorage(T)","visibility":"Public","body":"@storage"}},{"id":"swapaxes(arr:BaseArray,axis1:Int32,axis2:Int32)-instance-method","html_id":"swapaxes(arr:BaseArray,axis1:Int32,axis2:Int32)-instance-method","name":"swapaxes","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"BaseArray"},{"name":"axis1","doc":null,"default_value":"","external_name":"axis1","restriction":"Int32"},{"name":"axis2","doc":null,"default_value":"","external_name":"axis2","restriction":"Int32"}],"args_string":"(arr : BaseArray, axis1 : Int32, axis2 : Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L608","def":{"name":"swapaxes","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"BaseArray"},{"name":"axis1","doc":null,"default_value":"","external_name":"axis1","restriction":"Int32"},{"name":"axis2","doc":null,"default_value":"","external_name":"axis2","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"order = (0...arr.ndims).to_a\norder[axis1] = axis2\norder[axis2] = axis1\ntranspose(arr, order)\n"}},{"id":"to_a-instance-method","html_id":"to_a-instance-method","name":"to_a","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L213","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"arr = Array(T).new(@size)\niter.each do |el|\n  arr << el.value\nend\narr\n"}},{"id":"to_json(json:JSON::Builder)-instance-method","html_id":"to_json(json:JSON::Builder)-instance-method","name":"to_json","doc":null,"summary":null,"abstract":false,"args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"args_string":"(json : JSON::Builder)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L221","def":{"name":"to_json","args":[{"name":"json","doc":null,"default_value":"","external_name":"json","restriction":"JSON::Builder"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"json.array do\n  iter.each do |__arg0|\n    __arg0.value.to_json(json)\n  end\nend"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of an ndarray","summary":"<p>Returns a string representation of an ndarray</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L87","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal.array_to_string(self)"}},{"id":"to_s(io)-instance-method","html_id":"to_s(io)-instance-method","name":"to_s","doc":"Adds the string representation of an ndarray to the passed IO","summary":"<p>Adds the string representation of an ndarray to the passed IO</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"args_string":"(io)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L82","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io << to_s"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":"Returns the raw memory information of an array","summary":"<p>Returns the raw memory information of an array</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L66","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@storage.to_unsafe"}},{"id":"transpose(order:Array(Int32)=[]ofInt32)-instance-method","html_id":"transpose(order:Array(Int32)=[]ofInt32)-instance-method","name":"transpose","doc":"Permute the dimensions of a `Tensor`.  If no order is provided,\nthe dimensions will be reversed, a \"true transpose\".  Otherwise,\nthe dimensions will be permutated in the order provided.","summary":"<p>Permute the dimensions of a <code><a href=\"Tensor.html\">Tensor</a></code>.</p>","abstract":false,"args":[{"name":"order","doc":null,"default_value":"[] of Int32","external_name":"order","restriction":"Array(Int32)"}],"args_string":"(order : Array(Int32) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Int32</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L563","def":{"name":"transpose","args":[{"name":"order","doc":null,"default_value":"[] of Int32","external_name":"order","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"newshape = shape.dup\nnewstrides = strides.dup\nif order.size == 0\n  order = (0...ndims).to_a.reverse\nend\nn = order.size\nif n != ndims\n  raise(NumInternal::AxisError.new(\"Axes don't match array\"))\nend\npermutation = [0] * 32\nreverse_permutation = [0] * 32\nn.times do |i|\n  reverse_permutation[i] = -1\nend\nn.times do |i|\n  axis = order[i]\n  if axis < 0\n    axis = ndims + axis\n  end\n  if axis < 0 || axis >= ndims\n    raise(NumInternal::AxisError.new(\"Invalid axis for this array\"))\n  end\n  if reverse_permutation[axis] != -1\n    raise(NumInternal::AxisError.new(\"Repeated axis in transpose\"))\n  end\n  reverse_permutation[axis] = i\n  permutation[i] = axis\nend\nn.times do |i|\n  newshape[i] = shape[permutation[i]]\n  newstrides[i] = strides[permutation[i]]\nend\nret = self.class.new(to_unsafe, newshape, newstrides, flags.dup)\nret.update_flags(Num::ArrayFlags::Contiguous | Num::ArrayFlags::Fortran)\nret\n"}},{"id":"transpose(arr:BaseArray,*args)-instance-method","html_id":"transpose(arr:BaseArray,*args)-instance-method","name":"transpose","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"BaseArray"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(arr : BaseArray, *args)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L604","def":{"name":"transpose","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"BaseArray"},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"transpose(arr, args.to_a)"}},{"id":"value-instance-method","html_id":"value-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L246","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"to_unsafe.value"}},{"id":"write?-instance-method","html_id":"write?-instance-method","name":"write?","doc":"Checks the write flag on an array, raising a WriteError\nif the array is read-only, such as an array returned\nfrom a method like as_strided","summary":"<p>Checks the write flag on an array, raising a WriteError if the array is read-only, such as an array returned from a method like as_strided</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L101","def":{"name":"write?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !flags.write?\n  raise(NumInternal::WriteError.new(\"Array is read only\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Array","path":"Array.html","kind":"class","full_name":"Array(T)","name":"Array","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Iterable","kind":"module","full_name":"Iterable","name":"Iterable"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/array.cr","line_number":26,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/array.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Indexable","kind":"module","full_name":"Indexable","name":"Indexable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"An `Array` is an ordered, integer-indexed collection of objects of type T.\n\nArray indexing starts at 0. A negative index is assumed to be\nrelative to the end of the array: -1 indicates the last element,\n-2 is the next to last element, and so on.\n\nAn `Array` can be created using the usual `new` method (several are provided), or with an array literal:\n\n```\nArray(Int32).new  # => []\n[1, 2, 3]         # Array(Int32)\n[1, \"hello\", 'x'] # Array(Int32 | String | Char)\n```\n\nAn `Array` can have mixed types, meaning T will be a union of types, but these are determined\nwhen the array is created, either by specifying T or by using an array literal. In the latter\ncase, T will be set to the union of the array literal elements' types.\n\nWhen creating an empty array you must always specify T:\n\n```\n[] of Int32 # same as Array(Int32)\n[]          # syntax error\n```\n\nAn `Array` is implemented using an internal buffer of some capacity\nand is reallocated when elements are pushed to it when more capacity\nis needed. This is normally known as a [dynamic array](http://en.wikipedia.org/wiki/Dynamic_array).\n\nYou can use a special array literal syntax with other types too, as long as they define an argless\n`new` method and a `<<` method. `Set` is one such type:\n\n```\nset = Set{1, 2, 3} # => Set{1, 2, 3}\nset.class          # => Set(Int32)\n```\n\nThe above is the same as this:\n\n```\nset = Set(typeof(1, 2, 3)).new\nset << 1\nset << 2\nset << 3\n```","summary":"<p>An <code><a href=\"Array.html\">Array</a></code> is an ordered, integer-indexed collection of objects of type T.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"to_tensor-instance-method","html_id":"to_tensor-instance-method","name":"to_tensor","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/array.cr#L27","def":{"name":"to_tensor","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.from_array(self)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/ClTensor","path":"ClTensor.html","kind":"class","full_name":"ClTensor(T)","name":"ClTensor","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","kind":"class","full_name":"NumInternal::AnyTensor","name":"AnyTensor"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","kind":"class","full_name":"NumInternal::AnyTensor","name":"AnyTensor"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cltensor/cltensor.cr","line_number":31,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr"},{"filename":"cltensor/linalg.cr","line_number":4,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr"},{"filename":"cltensor/creation.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"full(shape:Array(Int32),value:Number)-class-method","html_id":"full(shape:Array(Int32),value:Number)-class-method","name":"full","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"args_string":"(shape : Array(Int32), value : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L44","def":{"name":"full","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(shape, T.new(value))"}},{"id":"full_like(other:NumInternal::AnyTensor,value:Number)-class-method","html_id":"full_like(other:NumInternal::AnyTensor,value:Number)-class-method","name":"full_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"args_string":"(other : NumInternal::AnyTensor, value : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L48","def":{"name":"full_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(other.shape, T.new(value))"}},{"id":"ones(shape:Array(Int32))-class-method","html_id":"ones(shape:Array(Int32))-class-method","name":"ones","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L36","def":{"name":"ones","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(shape, T.new(1))"}},{"id":"ones_like(other:NumInternal::AnyTensor)-class-method","html_id":"ones_like(other:NumInternal::AnyTensor)-class-method","name":"ones_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"args_string":"(other : NumInternal::AnyTensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L40","def":{"name":"ones_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(other.shape, T.new(1))"}},{"id":"zeros(shape:Array(Int32))-class-method","html_id":"zeros(shape:Array(Int32))-class-method","name":"zeros","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L28","def":{"name":"zeros","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(shape, T.new(0))"}},{"id":"zeros_like(other:NumInternal::AnyTensor)-class-method","html_id":"zeros_like(other:NumInternal::AnyTensor)-class-method","name":"zeros_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"args_string":"(other : NumInternal::AnyTensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/creation.cr#L32","def":{"name":"zeros_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(T).new(other.shape, T.new(0))"}}],"constructors":[{"id":"new(storage:NumInternal::ClStorage(T),shape:Array(Int32))-class-method","html_id":"new(storage:NumInternal::ClStorage(T),shape:Array(Int32))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"storage","doc":null,"default_value":"","external_name":"storage","restriction":"NumInternal::ClStorage(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(storage : NumInternal::ClStorage(T), shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L65","def":{"name":"new","args":[{"name":"storage","doc":null,"default_value":"","external_name":"storage","restriction":"NumInternal::ClStorage(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClTensor(T).allocate\n_.initialize(storage, shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),value:T)-class-method","html_id":"new(shape:Array(Int32),value:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"args_string":"(shape : Array(Int32), value : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L72","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClTensor(T).allocate\n_.initialize(shape, value)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32))-class-method","html_id":"new(shape:Array(Int32))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L57","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClTensor(T).allocate\n_.initialize(shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L106","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L98","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L102","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other)-instance-method","html_id":"/(other)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L110","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"amax(ret:ClTensor(Int32)?=nil)-instance-method","html_id":"amax(ret:ClTensor(Int32)?=nil)-instance-method","name":"amax","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"args_string":"(ret : ClTensor(Int32)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L69","def":{"name":"amax","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(Int32).new([1])\nelse\n  back = ret\nend\nblast(amax, size, back.to_unsafe, 0, to_unsafe, 0, 1, prefix: i)\nback\n"}},{"id":"amin(ret:ClTensor(Int32)?=nil)-instance-method","html_id":"amin(ret:ClTensor(Int32)?=nil)-instance-method","name":"amin","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"args_string":"(ret : ClTensor(Int32)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L79","def":{"name":"amin","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(Int32).new([1])\nelse\n  back = ret\nend\nblast(amin, size, back.to_unsafe, 0, to_unsafe, 0, 1, prefix: i)\nback\n"}},{"id":"argmax(ret:ClTensor(Int32)?=nil)-instance-method","html_id":"argmax(ret:ClTensor(Int32)?=nil)-instance-method","name":"argmax","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"args_string":"(ret : ClTensor(Int32)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L89","def":{"name":"argmax","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(Int32).new([1])\nelse\n  back = ret\nend\nblast(max, size, back.to_unsafe, 0, to_unsafe, 0, 1, prefix: i)\nback\n"}},{"id":"argmin(ret:ClTensor(Int32)?=nil)-instance-method","html_id":"argmin(ret:ClTensor(Int32)?=nil)-instance-method","name":"argmin","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"args_string":"(ret : ClTensor(Int32)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L99","def":{"name":"argmin","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(Int32) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(Int32).new([1])\nelse\n  back = ret\nend\nblast(min, size, back.to_unsafe, 0, to_unsafe, 0, 1, prefix: i)\nback\n"}},{"id":"asum(ret:ClTensor(T)?=nil)-instance-method","html_id":"asum(ret:ClTensor(T)?=nil)-instance-method","name":"asum","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"args_string":"(ret : ClTensor(T)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L49","def":{"name":"asum","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(T).new([1])\nelse\n  back = ret\nend\nblast(asum, size, back.to_unsafe, 0, to_unsafe, 0, 1)\nback\n"}},{"id":"axpy!(a:T,x:ClTensor(T))-instance-method","html_id":"axpy!(a:T,x:ClTensor(T))-instance-method","name":"axpy!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"ClTensor(T)"}],"args_string":"(a : T, x : ClTensor(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L25","def":{"name":"axpy!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"ClTensor(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"blast(axpy, size, a, x.to_unsafe, 0, 1, to_unsafe, 0, 1)"}},{"id":"basetype(dtype:U.class)forallU-instance-method","html_id":"basetype(dtype:U.class)forallU-instance-method","name":"basetype","doc":null,"summary":null,"abstract":false,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"args_string":"(dtype : <span class=\"t\">U</span>.<span class=\"k\">class</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L43","def":{"name":"basetype","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ClTensor(U)"}},{"id":"check_type-instance-method","html_id":"check_type-instance-method","name":"check_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L51","def":{"name":"check_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if (T == Float32) || (T == Float64) %}{% else %}\n      {% raise(\"Bad dtype: #{T}. #{T} is not supported for ClTensors\") %}\n    {% end %}"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L80","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(NumInternal::NotImplementedError.new)"}},{"id":"cpu-instance-method","html_id":"cpu-instance-method","name":"cpu","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L84","def":{"name":"cpu","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ptr = Pointer(T).malloc(size, 0)\nLibCL.cl_enqueue_read_buffer(Num::ClContext.instance.queue, to_unsafe, LibCL::CL_TRUE, 0_u64, UInt64.new(size * (sizeof(T))), ptr, 0_u32, nil, nil)\nTensor(T).new(ptr, @shape, @strides)\n"}},{"id":"dot(other:ClTensor(T),ret:ClTensor(T)?=nil)-instance-method","html_id":"dot(other:ClTensor(T),ret:ClTensor(T)?=nil)-instance-method","name":"dot","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"ClTensor(T)"},{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"args_string":"(other : ClTensor(T), ret : ClTensor(T)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L29","def":{"name":"dot","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"ClTensor(T)"},{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(T).new([1])\nelse\n  back = ret\nend\nblast(dot, size, back.to_unsafe, 0, to_unsafe, 0, 1, other.to_unsafe, 0, 1)\nback\n"}},{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L47","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T"}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L35","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@storage.free"}},{"id":"matmul(other:ClTensor(T),ret:ClTensor(T)?=nil)-instance-method","html_id":"matmul(other:ClTensor(T),ret:ClTensor(T)?=nil)-instance-method","name":"matmul","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"ClTensor(T)"},{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"args_string":"(other : ClTensor(T), ret : ClTensor(T)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L109","def":{"name":"matmul","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"ClTensor(T)"},{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(T).new([shape[0], other.shape[1]])\nelse\n  back = ret\nend\nblast(gemm, LibBlast::CLBlastLayout::CLBlastLayoutRowMajor, LibBlast::CLBlastTranspose::CLBlastTransposeNo, LibBlast::CLBlastTranspose::CLBlastTransposeNo, shape[0], other.shape[1], shape[1], 1.0, to_unsafe, 0, shape[1], other.to_unsafe, 0, other.shape[1], 1.0, back.to_unsafe, 0, back.shape[1])\nback\n"}},{"id":"nrm2(ret:ClTensor(T)?=nil)-instance-method","html_id":"nrm2(ret:ClTensor(T)?=nil)-instance-method","name":"nrm2","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"args_string":"(ret : ClTensor(T)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L39","def":{"name":"nrm2","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(T).new([1])\nelse\n  back = ret\nend\nblast(nrm2, size, back.to_unsafe, 0, to_unsafe, 0, 1)\nback\n"}},{"id":"scal!(a:T)-instance-method","html_id":"scal!(a:T)-instance-method","name":"scal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"T"}],"args_string":"(a : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L21","def":{"name":"scal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"blast(scal, size, a, self.to_unsafe, 0, 1)"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L33","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"storage:NumInternal::ClStorage(T)-instance-method","html_id":"storage:NumInternal::ClStorage(T)-instance-method","name":"storage","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NumInternal::ClStorage(T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L32","def":{"name":"storage","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NumInternal::ClStorage(T)","visibility":"Public","body":"@storage"}},{"id":"sum(ret:ClTensor(T)?=nil)-instance-method","html_id":"sum(ret:ClTensor(T)?=nil)-instance-method","name":"sum","doc":null,"summary":null,"abstract":false,"args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"args_string":"(ret : ClTensor(T)? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L59","def":{"name":"sum","args":[{"name":"ret","doc":null,"default_value":"nil","external_name":"ret","restriction":"ClTensor(T) | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ret.nil?\n  back = ClTensor(T).new([1])\nelse\n  back = ret\nend\nblast(sum, size, back.to_unsafe, 0, to_unsafe, 0, 1)\nback\n"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/cltensor.cr#L39","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@storage.to_unsafe"}}],"macros":[{"id":"blast(name,*args,prefix=&quot;&quot;)-macro","html_id":"blast(name,*args,prefix=&amp;quot;&amp;quot;)-macro","name":"blast","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"prefix","doc":null,"default_value":"\"\"","external_name":"prefix","restriction":""}],"args_string":"(name, *args, prefix = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/linalg.cr#L5","def":{"name":"blast","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"prefix","doc":null,"default_value":"\"\"","external_name":"prefix","restriction":""}],"double_splat":null,"splat_index":1,"block_arg":null,"visibility":"Public","body":"    \n{% if T == Float32\n  typ = (:S).id\nelse\n  if T == Float64\n    typ = (:D).id\n  end\nend %}\n\n    \nevent = Pointer(Void).malloc(1).unsafe_as(LibCL::ClEvent)\n    queue = Num::ClContext.instance.queue\n\n    LibBlast.clblast_\n{{ prefix.id }}\n{{ typ }}\n{{ name }}\n(\n{{ *args }}\n, pointerof(queue), pointerof(\nevent))\n    Cl.check LibCL.cl_wait_for_events(1, pointerof(\nevent))\n    Cl.check LibCL.cl_release_event(\nevent)\n  \n"}}],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Complex","path":"Complex.html","kind":"struct","full_name":"Complex","name":"Complex","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A complex number is a number represented in the form a + bi. In this form,\na and b are real numbers, and i is an imaginary number such as i² = -1.\nThe a is the real part of the number, and the b is the imaginary part of\nthe number.\n\n```\nrequire \"complex\"\n\nComplex.new(1, 0)   # => 1.0 + 0.0i\nComplex.new(5, -12) # => 5.0 - 12.0i\n\n1.to_c # => 1.0 + 0.0i\n1.i    # => 0.0 + 1.0i\n```","summary":"<p>A complex number is a number represented in the form a + bi.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Float32","path":"Float32.html","kind":"struct","full_name":"Float32","name":"Float32","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Float64","path":"Float64.html","kind":"struct","full_name":"Float64","name":"Float64","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Float","kind":"struct","full_name":"Float","name":"Float"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Float","kind":"struct","full_name":"Float","name":"Float"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Int16","path":"Int16.html","kind":"struct","full_name":"Int16","name":"Int16","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Int32","path":"Int32.html","kind":"struct","full_name":"Int32","name":"Int32","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Int8","path":"Int8.html","kind":"struct","full_name":"Int8","name":"Int8","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Num","path":"Num.html","kind":"module","full_name":"Num","name":"Num","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"base/constants.cr","line_number":24,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr"},{"filename":"num/cl_builtin.cr","line_number":26,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr"},{"filename":"num/math.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr"},{"filename":"tensor/work.cr","line_number":1,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr"},{"filename":"num/build.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr"},{"filename":"num/comparison.cr","line_number":26,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/comparison.cr"},{"filename":"num/converters.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/converters.cr"},{"filename":"num/reductions.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr"},{"filename":"nn/activation.cr","line_number":5,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation.cr"},{"filename":"nn/activation_cl.cr","line_number":28,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr"},{"filename":"num.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ColMajor","name":"ColMajor","value":"OrderType::ColMajor","doc":null,"summary":null},{"id":"CPU","name":"CPU","value":"StorageType::CPU","doc":null,"summary":null},{"id":"GPU","name":"GPU","value":"StorageType::GPU","doc":null,"summary":null},{"id":"RowMajor","name":"RowMajor","value":"OrderType::RowMajor","doc":null,"summary":null},{"id":"VERSION","name":"VERSION","value":"\"0.3.0\"","doc":null,"summary":null},{"id":"WORK_POOL","name":"WORK_POOL","value":"WorkPool.new","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"acos(a:Tensor)-instance-method","html_id":"acos(a:Tensor)-instance-method","name":"acos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L89","def":{"name":"acos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.acos(i)\nend"}},{"id":"acos(a:Number)-instance-method","html_id":"acos(a:Number)-instance-method","name":"acos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L89","def":{"name":"acos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.acos(a)"}},{"id":"acos(a:ClTensor(Float32))-instance-method","html_id":"acos(a:ClTensor(Float32))-instance-method","name":"acos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L195","def":{"name":"acos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acos_vector\", \"float\", \"acos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acos_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acos(a:ClTensor(Float64))-instance-method","html_id":"acos(a:ClTensor(Float64))-instance-method","name":"acos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L194","def":{"name":"acos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acos_vector\", \"double\", \"acos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acos_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acos!(a:ClTensor(Float64))-instance-method","html_id":"acos!(a:ClTensor(Float64))-instance-method","name":"acos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L194","def":{"name":"acos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acos_vector\", \"double\", \"acos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acos_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"acos!(a:ClTensor(Float32))-instance-method","html_id":"acos!(a:ClTensor(Float32))-instance-method","name":"acos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L195","def":{"name":"acos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acos_vector\", \"float\", \"acos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acos_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"acos!(a:Tensor)-instance-method","html_id":"acos!(a:Tensor)-instance-method","name":"acos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L89","def":{"name":"acos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.acos(i)\nend"}},{"id":"acosh(a:Tensor)-instance-method","html_id":"acosh(a:Tensor)-instance-method","name":"acosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L90","def":{"name":"acosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.acosh(i)\nend"}},{"id":"acosh(a:Number)-instance-method","html_id":"acosh(a:Number)-instance-method","name":"acosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L90","def":{"name":"acosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.acosh(a)"}},{"id":"acosh(a:ClTensor(Float32))-instance-method","html_id":"acosh(a:ClTensor(Float32))-instance-method","name":"acosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L198","def":{"name":"acosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acosh_vector\", \"float\", \"acosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acosh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acosh(a:ClTensor(Float64))-instance-method","html_id":"acosh(a:ClTensor(Float64))-instance-method","name":"acosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L197","def":{"name":"acosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acosh_vector\", \"double\", \"acosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acosh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acosh!(a:ClTensor(Float64))-instance-method","html_id":"acosh!(a:ClTensor(Float64))-instance-method","name":"acosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L197","def":{"name":"acosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acosh_vector\", \"double\", \"acosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acosh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"acosh!(a:ClTensor(Float32))-instance-method","html_id":"acosh!(a:ClTensor(Float32))-instance-method","name":"acosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L198","def":{"name":"acosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acosh_vector\", \"float\", \"acosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acosh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"acosh!(a:Tensor)-instance-method","html_id":"acosh!(a:Tensor)-instance-method","name":"acosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L90","def":{"name":"acosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.acosh(i)\nend"}},{"id":"acospi(a:ClTensor(Float64))-instance-method","html_id":"acospi(a:ClTensor(Float64))-instance-method","name":"acospi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L200","def":{"name":"acospi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acospi_vector\", \"double\", \"acospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acospi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acospi(a:ClTensor(Float32))-instance-method","html_id":"acospi(a:ClTensor(Float32))-instance-method","name":"acospi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L201","def":{"name":"acospi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"acospi_vector\", \"float\", \"acospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acospi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"acospi!(a:ClTensor(Float64))-instance-method","html_id":"acospi!(a:ClTensor(Float64))-instance-method","name":"acospi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L200","def":{"name":"acospi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acospi_vector\", \"double\", \"acospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acospi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"acospi!(a:ClTensor(Float32))-instance-method","html_id":"acospi!(a:ClTensor(Float32))-instance-method","name":"acospi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L201","def":{"name":"acospi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"acospi_vector\", \"float\", \"acospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"acospi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"activate(cl:ClTensor(Float32),name:String)-instance-method","html_id":"activate(cl:ClTensor(Float32),name:String)-instance-method","name":"activate","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(cl : ClTensor(Float32), name : String)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L68","def":{"name":"activate","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_proc = compile_activation(name)\nCl.args(cl_proc, cl.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, cl.size)\ncl\n"}},{"id":"add(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"add(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L182","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply3(\"add_vector\", \"double\", \"+\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(a:Tensor,b:Number)-instance-method","html_id":"add(a:Tensor,b:Number)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i + b\nend"}},{"id":"add(a:Tensor,b:Tensor)-instance-method","html_id":"add(a:Tensor,b:Tensor)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i + j\nend"}},{"id":"add(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"add(a:ClTensor(Float64),b:Float64)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L182","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2(\"add_vector\", \"double\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(b:Float64,a:ClTensor(Float64))-instance-method","html_id":"add(b:Float64,a:ClTensor(Float64))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(b : Float64, a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L182","def":{"name":"add","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"add_vector\", \"double\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"add(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L183","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply3(\"add_vector\", \"float\", \"+\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"add(a:ClTensor(Float32),b:Float32)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L183","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2(\"add_vector\", \"float\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(b:Float32,a:ClTensor(Float32))-instance-method","html_id":"add(b:Float32,a:ClTensor(Float32))-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(b : Float32, a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L183","def":{"name":"add","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"add_vector\", \"float\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"add(a:Number,b:Number)-instance-method","html_id":"add(a:Number,b:Number)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a + b"}},{"id":"add(a:Number,b:Tensor)-instance-method","html_id":"add(a:Number,b:Tensor)-instance-method","name":"add","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a + i\nend"}},{"id":"add!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"add!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L182","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"add_vector\", \"double\", \"+\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"add!(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"add!(a:ClTensor(Float64),b:Float64)-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L182","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"add_vector\", \"double\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"add!(a:Tensor,b:Tensor)-instance-method","html_id":"add!(a:Tensor,b:Tensor)-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i + j\nend"}},{"id":"add!(a:Tensor,b:Number)-instance-method","html_id":"add!(a:Tensor,b:Number)-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L56","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i + b\nend"}},{"id":"add!(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"add!(a:ClTensor(Float32),b:Float32)-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L183","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"add_vector\", \"float\", \"+\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"add!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"add!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"add!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L183","def":{"name":"add!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"add_vector\", \"float\", \"+\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"add_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"all(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"all(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"all","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L50","def":{"name":"all","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(a.astype(Bool)).reduce_fast(axis, keepdims) do |i, j|\n  i & j\nend"}},{"id":"all(a:Tensor)-instance-method","html_id":"all(a:Tensor)-instance-method","name":"all","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L46","def":{"name":"all","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(a.astype(Bool)).iter.reduce(true) do |i, j|\n  i & j.value\nend"}},{"id":"allclose(a:AnyArray(Bool),b:AnyArray(Bool))-instance-method","html_id":"allclose(a:AnyArray(Bool),b:AnyArray(Bool))-instance-method","name":"allclose","doc":"Asserts that two boolean arrays are the same","summary":"<p>Asserts that two boolean arrays are the same</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(Bool)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(Bool)"}],"args_string":"(a : AnyArray(Bool), b : AnyArray(Bool))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/comparison.cr#L60","def":{"name":"allclose","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(Bool)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(Bool)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.shape != b.shape\n  raise(\"Shape of arguments must match\")\nend\n(a.iter.zip(b.iter)).each do |i, j|\n  if i.value == j.value\n  else\n    return false\n  end\nend\ntrue\n"}},{"id":"allclose(a:AnyArray(U),b:AnyArray(U),rtol=1e-5,atol=1e-8)forallU-instance-method","html_id":"allclose(a:AnyArray(U),b:AnyArray(U),rtol=1e-5,atol=1e-8)forallU-instance-method","name":"allclose","doc":"Asserts that two equally shaped `Tensor`s are equal within a provided\ntolerance.  Useful for floating point comparison where direct equality might\nnot work\n\n```\nt = Tensor.new([2, 2, 3]) { |i| i * 1.0 }\ntf = t + 0.00000000001\nallclose(t, tf) # => true\n```","summary":"<p>Asserts that two equally shaped <code><a href=\"Tensor.html\">Tensor</a></code>s are equal within a provided tolerance.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"rtol","doc":null,"default_value":"1e-5","external_name":"rtol","restriction":""},{"name":"atol","doc":null,"default_value":"1e-8","external_name":"atol","restriction":""}],"args_string":"(a : AnyArray(U), b : AnyArray(U), rtol = <span class=\"n\">1e-5</span>, atol = <span class=\"n\">1e-8</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/comparison.cr#L38","def":{"name":"allclose","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"rtol","doc":null,"default_value":"1e-5","external_name":"rtol","restriction":""},{"name":"atol","doc":null,"default_value":"1e-8","external_name":"atol","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.shape != b.shape\n  raise(NumInternal::ShapeError.new(\"Shape of arguments must match\"))\nend\niter_a = a.iter\niter_b = b.iter\nif (rtol > 0)\n  (iter_a.zip(iter_b)).each do |i, j|\n    c = !((i.value - j.value).abs > (atol + (rtol * j.value.abs)))\n    if c\n    else\n      return false\n    end\n  end\nelse\n  (iter_a.zip(iter_b)).each do |i, j|\n    c = (i.value - j.value).abs > atol\n    if c\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"id":"any(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"any(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"any","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L58","def":{"name":"any","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(a.astype(Bool)).reduce_fast(axis, keepdims) do |i, j|\n  i | j\nend"}},{"id":"any(a:Tensor)-instance-method","html_id":"any(a:Tensor)-instance-method","name":"any","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L54","def":{"name":"any","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(a.astype(Bool)).iter.reduce(false) do |i, j|\n  i | j.value\nend"}},{"id":"asin(a:ClTensor(Float64))-instance-method","html_id":"asin(a:ClTensor(Float64))-instance-method","name":"asin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L203","def":{"name":"asin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asin_vector\", \"double\", \"asin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asin_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asin(a:ClTensor(Float32))-instance-method","html_id":"asin(a:ClTensor(Float32))-instance-method","name":"asin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L204","def":{"name":"asin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asin_vector\", \"float\", \"asin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asin_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asin(a:Number)-instance-method","html_id":"asin(a:Number)-instance-method","name":"asin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L91","def":{"name":"asin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.asin(a)"}},{"id":"asin(a:Tensor)-instance-method","html_id":"asin(a:Tensor)-instance-method","name":"asin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L91","def":{"name":"asin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.asin(i)\nend"}},{"id":"asin!(a:ClTensor(Float64))-instance-method","html_id":"asin!(a:ClTensor(Float64))-instance-method","name":"asin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L203","def":{"name":"asin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asin_vector\", \"double\", \"asin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asin_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"asin!(a:ClTensor(Float32))-instance-method","html_id":"asin!(a:ClTensor(Float32))-instance-method","name":"asin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L204","def":{"name":"asin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asin_vector\", \"float\", \"asin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asin_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"asin!(a:Tensor)-instance-method","html_id":"asin!(a:Tensor)-instance-method","name":"asin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L91","def":{"name":"asin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.asin(i)\nend"}},{"id":"asinh(a:ClTensor(Float64))-instance-method","html_id":"asinh(a:ClTensor(Float64))-instance-method","name":"asinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L206","def":{"name":"asinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asinh_vector\", \"double\", \"asinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asinh(a:ClTensor(Float32))-instance-method","html_id":"asinh(a:ClTensor(Float32))-instance-method","name":"asinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L207","def":{"name":"asinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asinh_vector\", \"float\", \"asinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asinh(a:Number)-instance-method","html_id":"asinh(a:Number)-instance-method","name":"asinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L92","def":{"name":"asinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.asinh(a)"}},{"id":"asinh(a:Tensor)-instance-method","html_id":"asinh(a:Tensor)-instance-method","name":"asinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L92","def":{"name":"asinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.asinh(i)\nend"}},{"id":"asinh!(a:ClTensor(Float64))-instance-method","html_id":"asinh!(a:ClTensor(Float64))-instance-method","name":"asinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L206","def":{"name":"asinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asinh_vector\", \"double\", \"asinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"asinh!(a:Tensor)-instance-method","html_id":"asinh!(a:Tensor)-instance-method","name":"asinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L92","def":{"name":"asinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.asinh(i)\nend"}},{"id":"asinh!(a:ClTensor(Float32))-instance-method","html_id":"asinh!(a:ClTensor(Float32))-instance-method","name":"asinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L207","def":{"name":"asinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asinh_vector\", \"float\", \"asinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"asinpi(a:ClTensor(Float64))-instance-method","html_id":"asinpi(a:ClTensor(Float64))-instance-method","name":"asinpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L209","def":{"name":"asinpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asinpi_vector\", \"double\", \"asinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asinpi(a:ClTensor(Float32))-instance-method","html_id":"asinpi(a:ClTensor(Float32))-instance-method","name":"asinpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L210","def":{"name":"asinpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"asinpi_vector\", \"float\", \"asinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"asinpi!(a:ClTensor(Float64))-instance-method","html_id":"asinpi!(a:ClTensor(Float64))-instance-method","name":"asinpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L209","def":{"name":"asinpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asinpi_vector\", \"double\", \"asinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"asinpi!(a:ClTensor(Float32))-instance-method","html_id":"asinpi!(a:ClTensor(Float32))-instance-method","name":"asinpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L210","def":{"name":"asinpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"asinpi_vector\", \"float\", \"asinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"asinpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"assert_array_equal(a,b)-instance-method","html_id":"assert_array_equal(a,b)-instance-method","name":"assert_array_equal","doc":"Makes an actual assertion about two arrays","summary":"<p>Makes an actual assertion about two arrays</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"args_string":"(a, b)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/comparison.cr#L71","def":{"name":"assert_array_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(allclose(a, b)).should(be_true)"}},{"id":"assert_compatible_shape(a:Array(Int32),b:Int32)-instance-method","html_id":"assert_compatible_shape(a:Array(Int32),b:Int32)-instance-method","name":"assert_compatible_shape","doc":"Asserts that two arrays are compatible to be compared","summary":"<p>Asserts that two arrays are compatible to be compared</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int32"}],"args_string":"(a : Array(Int32), b : Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/comparison.cr#L76","def":{"name":"assert_compatible_shape","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array(Int32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"toraise = false\nif a.size == 0\n  if b != 0\n    toraise = true\n  end\nelse\n  sz = a.reduce do |i, j|\n    i * j\n  end\n  if b == sz\n  else\n    toraise = true\n  end\nend\nif toraise\n  raise(NumInternal::ShapeError.new(\"An array of size #{b} cannot go\\n        into a Tensor of shape #{a}\"))\nend\n"}},{"id":"astensor(a:AnyArray(U))forallU-instance-method","html_id":"astensor(a:AnyArray(U))forallU-instance-method","name":"astensor","doc":"Converts input data, in any form that can be converted to a tensor,\ninto a tensor.\n\nThis includes arrays, nested arrays, scalars, and tensors.\nData will not be copied unless necessary.  Base classes will not\nbe maintained, all inputs will be coerced to Tensors or raise.","summary":"<p>Converts input data, in any form that can be converted to a tensor, into a tensor.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"}],"args_string":"(a : AnyArray(U)) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/converters.cr#L20","def":{"name":"astensor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(U).new(a.to_unsafe, a.shape, a.strides, a.flags)"}},{"id":"astensor(a:Tensor)-instance-method","html_id":"astensor(a:Tensor)-instance-method","name":"astensor","doc":"Converts input data, in any form that can be converted to a tensor,\ninto a tensor.\n\nThis includes arrays, nested arrays, scalars, and tensors.\nData will not be copied unless necessary.  Base classes will not\nbe maintained, all inputs will be coerced to Tensors or raise.","summary":"<p>Converts input data, in any form that can be converted to a tensor, into a tensor.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/converters.cr#L10","def":{"name":"astensor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a"}},{"id":"astensor(a:Array)-instance-method","html_id":"astensor(a:Array)-instance-method","name":"astensor","doc":"Converts input data, in any form that can be converted to a tensor,\ninto a tensor.\n\nThis includes arrays, nested arrays, scalars, and tensors.\nData will not be copied unless necessary.  Base classes will not\nbe maintained, all inputs will be coerced to Tensors or raise.","summary":"<p>Converts input data, in any form that can be converted to a tensor, into a tensor.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array"}],"args_string":"(a : Array)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/converters.cr#L30","def":{"name":"astensor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.from_array(a)"}},{"id":"astensor(a:Number)-instance-method","html_id":"astensor(a:Number)-instance-method","name":"astensor","doc":"Converts input data, in any form that can be converted to a tensor,\ninto a tensor.\n\nThis includes arrays, nested arrays, scalars, and tensors.\nData will not be copied unless necessary.  Base classes will not\nbe maintained, all inputs will be coerced to Tensors or raise.","summary":"<p>Converts input data, in any form that can be converted to a tensor, into a tensor.</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/converters.cr#L40","def":{"name":"astensor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.new(a)"}},{"id":"atan(a:Tensor)-instance-method","html_id":"atan(a:Tensor)-instance-method","name":"atan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L93","def":{"name":"atan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.atan(i)\nend"}},{"id":"atan(a:Number)-instance-method","html_id":"atan(a:Number)-instance-method","name":"atan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L93","def":{"name":"atan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.atan(a)"}},{"id":"atan(a:ClTensor(Float32))-instance-method","html_id":"atan(a:ClTensor(Float32))-instance-method","name":"atan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L213","def":{"name":"atan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atan_vector\", \"float\", \"atan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atan_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atan(a:ClTensor(Float64))-instance-method","html_id":"atan(a:ClTensor(Float64))-instance-method","name":"atan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L212","def":{"name":"atan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atan_vector\", \"double\", \"atan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atan_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atan!(a:ClTensor(Float64))-instance-method","html_id":"atan!(a:ClTensor(Float64))-instance-method","name":"atan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L212","def":{"name":"atan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atan_vector\", \"double\", \"atan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atan_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atan!(a:Tensor)-instance-method","html_id":"atan!(a:Tensor)-instance-method","name":"atan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L93","def":{"name":"atan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.atan(i)\nend"}},{"id":"atan!(a:ClTensor(Float32))-instance-method","html_id":"atan!(a:ClTensor(Float32))-instance-method","name":"atan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L213","def":{"name":"atan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atan_vector\", \"float\", \"atan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atan_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atan2(a:Tensor,b:Tensor)-instance-method","html_id":"atan2(a:Tensor,b:Tensor)-instance-method","name":"atan2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.atan2(i, j)\nend"}},{"id":"atan2(a:Tensor,b:Number)-instance-method","html_id":"atan2(a:Tensor,b:Number)-instance-method","name":"atan2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.atan2(i, b)\nend"}},{"id":"atan2(a:Number,b:Number)-instance-method","html_id":"atan2(a:Number,b:Number)-instance-method","name":"atan2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.atan2(a, b)"}},{"id":"atan2(a:Number,b:Tensor)-instance-method","html_id":"atan2(a:Number,b:Tensor)-instance-method","name":"atan2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.atan2(a, i)\nend"}},{"id":"atan2!(a:Tensor,b:Number)-instance-method","html_id":"atan2!(a:Tensor,b:Number)-instance-method","name":"atan2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.atan2(i, b)\nend"}},{"id":"atan2!(a:Tensor,b:Tensor)-instance-method","html_id":"atan2!(a:Tensor,b:Tensor)-instance-method","name":"atan2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L147","def":{"name":"atan2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.atan2(i, j)\nend"}},{"id":"atanh(a:ClTensor(Float64))-instance-method","html_id":"atanh(a:ClTensor(Float64))-instance-method","name":"atanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L215","def":{"name":"atanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atanh_vector\", \"double\", \"atanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atanh(a:ClTensor(Float32))-instance-method","html_id":"atanh(a:ClTensor(Float32))-instance-method","name":"atanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L216","def":{"name":"atanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atanh_vector\", \"float\", \"atanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atanh(a:Tensor)-instance-method","html_id":"atanh(a:Tensor)-instance-method","name":"atanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L94","def":{"name":"atanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.atanh(i)\nend"}},{"id":"atanh(a:Number)-instance-method","html_id":"atanh(a:Number)-instance-method","name":"atanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L94","def":{"name":"atanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.atanh(a)"}},{"id":"atanh!(a:ClTensor(Float64))-instance-method","html_id":"atanh!(a:ClTensor(Float64))-instance-method","name":"atanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L215","def":{"name":"atanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atanh_vector\", \"double\", \"atanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atanh!(a:ClTensor(Float32))-instance-method","html_id":"atanh!(a:ClTensor(Float32))-instance-method","name":"atanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L216","def":{"name":"atanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atanh_vector\", \"float\", \"atanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atanh!(a:Tensor)-instance-method","html_id":"atanh!(a:Tensor)-instance-method","name":"atanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L94","def":{"name":"atanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.atanh(i)\nend"}},{"id":"atanpi(a:ClTensor(Float32))-instance-method","html_id":"atanpi(a:ClTensor(Float32))-instance-method","name":"atanpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L219","def":{"name":"atanpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atanpi_vector\", \"float\", \"atanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atanpi(a:ClTensor(Float64))-instance-method","html_id":"atanpi(a:ClTensor(Float64))-instance-method","name":"atanpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L218","def":{"name":"atanpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"atanpi_vector\", \"double\", \"atanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"atanpi!(a:ClTensor(Float64))-instance-method","html_id":"atanpi!(a:ClTensor(Float64))-instance-method","name":"atanpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L218","def":{"name":"atanpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atanpi_vector\", \"double\", \"atanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atanpi!(a:ClTensor(Float32))-instance-method","html_id":"atanpi!(a:ClTensor(Float32))-instance-method","name":"atanpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L219","def":{"name":"atanpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"atanpi_vector\", \"float\", \"atanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"atanpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"atleast_1d(inp:Number)-instance-method","html_id":"atleast_1d(inp:Number)-instance-method","name":"atleast_1d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"args_string":"(inp : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L146","def":{"name":"atleast_1d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.new([1]) do |_|\n  inp\nend"}},{"id":"atleast_1d(inp:Array)-instance-method","html_id":"atleast_1d(inp:Array)-instance-method","name":"atleast_1d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Array"}],"args_string":"(inp : Array)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L150","def":{"name":"atleast_1d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.from_array(inp)"}},{"id":"atleast_1d(inp:Tensor)-instance-method","html_id":"atleast_1d(inp:Tensor)-instance-method","name":"atleast_1d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"args_string":"(inp : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L154","def":{"name":"atleast_1d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if inp.ndims == 0\n  Tensor.new([1]) do |_|\n    inp.value\n  end\nelse\n  inp\nend"}},{"id":"atleast_2d(inp:Number)-instance-method","html_id":"atleast_2d(inp:Number)-instance-method","name":"atleast_2d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"args_string":"(inp : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L162","def":{"name":"atleast_2d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.new([1, 1]) do |_|\n  inp\nend"}},{"id":"atleast_2d(inp:Array)-instance-method","html_id":"atleast_2d(inp:Array)-instance-method","name":"atleast_2d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Array"}],"args_string":"(inp : Array)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L166","def":{"name":"atleast_2d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Array"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = Tensor.from_array(inp)\natleast_2d(t)\n"}},{"id":"atleast_2d(inp:Tensor)-instance-method","html_id":"atleast_2d(inp:Tensor)-instance-method","name":"atleast_2d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"args_string":"(inp : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L171","def":{"name":"atleast_2d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if inp.ndims > 1\n  inp\nelse\n  if inp.ndims == 0\n    Tensor.new([1, 1]) do |_|\n      inp.value\n    end\n  else\n    inp.reshape([1, inp.size])\n  end\nend"}},{"id":"atleast_3d(inp:Tensor)-instance-method","html_id":"atleast_3d(inp:Tensor)-instance-method","name":"atleast_3d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"args_string":"(inp : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L185","def":{"name":"atleast_3d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if inp.ndims > 2\n  inp\nelse\n  dim = 3 - inp.ndims\n  newshape = ([1] * dim) + inp.shape\n  inp.reshape(newshape)\nend"}},{"id":"atleast_3d(inp:Number)-instance-method","html_id":"atleast_3d(inp:Number)-instance-method","name":"atleast_3d","doc":null,"summary":null,"abstract":false,"args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"args_string":"(inp : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L181","def":{"name":"atleast_3d","args":[{"name":"inp","doc":null,"default_value":"","external_name":"inp","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.new([1, 1, 1]) do |_|\n  inp\nend"}},{"id":"besselj(a:Number,b:Number)-instance-method","html_id":"besselj(a:Number,b:Number)-instance-method","name":"besselj","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.besselj(a, b)"}},{"id":"besselj(a:Tensor,b:Number)-instance-method","html_id":"besselj(a:Tensor,b:Number)-instance-method","name":"besselj","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.besselj(i, b)\nend"}},{"id":"besselj(a:Number,b:Tensor)-instance-method","html_id":"besselj(a:Number,b:Tensor)-instance-method","name":"besselj","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.besselj(a, i)\nend"}},{"id":"besselj(a:Tensor,b:Tensor)-instance-method","html_id":"besselj(a:Tensor,b:Tensor)-instance-method","name":"besselj","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.besselj(i, j)\nend"}},{"id":"besselj!(a:Tensor,b:Number)-instance-method","html_id":"besselj!(a:Tensor,b:Number)-instance-method","name":"besselj!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.besselj(i, b)\nend"}},{"id":"besselj!(a:Tensor,b:Tensor)-instance-method","html_id":"besselj!(a:Tensor,b:Tensor)-instance-method","name":"besselj!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L148","def":{"name":"besselj!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.besselj(i, j)\nend"}},{"id":"besselj0(a:Tensor)-instance-method","html_id":"besselj0(a:Tensor)-instance-method","name":"besselj0","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L95","def":{"name":"besselj0","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.besselj0(i)\nend"}},{"id":"besselj0(a:Number)-instance-method","html_id":"besselj0(a:Number)-instance-method","name":"besselj0","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L95","def":{"name":"besselj0","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.besselj0(a)"}},{"id":"besselj0!(a:Tensor)-instance-method","html_id":"besselj0!(a:Tensor)-instance-method","name":"besselj0!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L95","def":{"name":"besselj0!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.besselj0(i)\nend"}},{"id":"besselj1(a:Tensor)-instance-method","html_id":"besselj1(a:Tensor)-instance-method","name":"besselj1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L96","def":{"name":"besselj1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.besselj1(i)\nend"}},{"id":"besselj1(a:Number)-instance-method","html_id":"besselj1(a:Number)-instance-method","name":"besselj1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L96","def":{"name":"besselj1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.besselj1(a)"}},{"id":"besselj1!(a:Tensor)-instance-method","html_id":"besselj1!(a:Tensor)-instance-method","name":"besselj1!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L96","def":{"name":"besselj1!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.besselj1(i)\nend"}},{"id":"bessely(a:Tensor,b:Tensor)-instance-method","html_id":"bessely(a:Tensor,b:Tensor)-instance-method","name":"bessely","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.bessely(i, j)\nend"}},{"id":"bessely(a:Number,b:Tensor)-instance-method","html_id":"bessely(a:Number,b:Tensor)-instance-method","name":"bessely","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.bessely(a, i)\nend"}},{"id":"bessely(a:Tensor,b:Number)-instance-method","html_id":"bessely(a:Tensor,b:Number)-instance-method","name":"bessely","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.bessely(i, b)\nend"}},{"id":"bessely(a:Number,b:Number)-instance-method","html_id":"bessely(a:Number,b:Number)-instance-method","name":"bessely","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.bessely(a, b)"}},{"id":"bessely!(a:Tensor,b:Number)-instance-method","html_id":"bessely!(a:Tensor,b:Number)-instance-method","name":"bessely!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.bessely(i, b)\nend"}},{"id":"bessely!(a:Tensor,b:Tensor)-instance-method","html_id":"bessely!(a:Tensor,b:Tensor)-instance-method","name":"bessely!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L149","def":{"name":"bessely!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.bessely(i, j)\nend"}},{"id":"bessely0(a:Tensor)-instance-method","html_id":"bessely0(a:Tensor)-instance-method","name":"bessely0","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L97","def":{"name":"bessely0","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.bessely0(i)\nend"}},{"id":"bessely0(a:Number)-instance-method","html_id":"bessely0(a:Number)-instance-method","name":"bessely0","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L97","def":{"name":"bessely0","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.bessely0(a)"}},{"id":"bessely0!(a:Tensor)-instance-method","html_id":"bessely0!(a:Tensor)-instance-method","name":"bessely0!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L97","def":{"name":"bessely0!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.bessely0(i)\nend"}},{"id":"bessely1(a:Tensor)-instance-method","html_id":"bessely1(a:Tensor)-instance-method","name":"bessely1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L98","def":{"name":"bessely1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.bessely1(i)\nend"}},{"id":"bessely1(a:Number)-instance-method","html_id":"bessely1(a:Number)-instance-method","name":"bessely1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L98","def":{"name":"bessely1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.bessely1(a)"}},{"id":"bessely1!(a:Tensor)-instance-method","html_id":"bessely1!(a:Tensor)-instance-method","name":"bessely1!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L98","def":{"name":"bessely1!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.bessely1(i)\nend"}},{"id":"bitwise_and(a:Number,b:Tensor)-instance-method","html_id":"bitwise_and(a:Number,b:Tensor)-instance-method","name":"bitwise_and","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a & i\nend"}},{"id":"bitwise_and(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_and(a:Tensor,b:Tensor)-instance-method","name":"bitwise_and","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i & j\nend"}},{"id":"bitwise_and(a:Number,b:Number)-instance-method","html_id":"bitwise_and(a:Number,b:Number)-instance-method","name":"bitwise_and","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a & b"}},{"id":"bitwise_and(a:Tensor,b:Number)-instance-method","html_id":"bitwise_and(a:Tensor,b:Number)-instance-method","name":"bitwise_and","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i & b\nend"}},{"id":"bitwise_and!(a:Tensor,b:Number)-instance-method","html_id":"bitwise_and!(a:Tensor,b:Number)-instance-method","name":"bitwise_and!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i & b\nend"}},{"id":"bitwise_and!(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_and!(a:Tensor,b:Tensor)-instance-method","name":"bitwise_and!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L65","def":{"name":"bitwise_and!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i & j\nend"}},{"id":"bitwise_or(a:Number,b:Number)-instance-method","html_id":"bitwise_or(a:Number,b:Number)-instance-method","name":"bitwise_or","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a | b"}},{"id":"bitwise_or(a:Tensor,b:Number)-instance-method","html_id":"bitwise_or(a:Tensor,b:Number)-instance-method","name":"bitwise_or","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i | b\nend"}},{"id":"bitwise_or(a:Number,b:Tensor)-instance-method","html_id":"bitwise_or(a:Number,b:Tensor)-instance-method","name":"bitwise_or","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a | i\nend"}},{"id":"bitwise_or(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_or(a:Tensor,b:Tensor)-instance-method","name":"bitwise_or","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i | j\nend"}},{"id":"bitwise_or!(a:Tensor,b:Number)-instance-method","html_id":"bitwise_or!(a:Tensor,b:Number)-instance-method","name":"bitwise_or!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i | b\nend"}},{"id":"bitwise_or!(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_or!(a:Tensor,b:Tensor)-instance-method","name":"bitwise_or!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L66","def":{"name":"bitwise_or!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i | j\nend"}},{"id":"bitwise_xor(a:Number,b:Number)-instance-method","html_id":"bitwise_xor(a:Number,b:Number)-instance-method","name":"bitwise_xor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a ^ b"}},{"id":"bitwise_xor(a:Tensor,b:Number)-instance-method","html_id":"bitwise_xor(a:Tensor,b:Number)-instance-method","name":"bitwise_xor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i ^ b\nend"}},{"id":"bitwise_xor(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_xor(a:Tensor,b:Tensor)-instance-method","name":"bitwise_xor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i ^ j\nend"}},{"id":"bitwise_xor(a:Number,b:Tensor)-instance-method","html_id":"bitwise_xor(a:Number,b:Tensor)-instance-method","name":"bitwise_xor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a ^ i\nend"}},{"id":"bitwise_xor!(a:Tensor,b:Number)-instance-method","html_id":"bitwise_xor!(a:Tensor,b:Number)-instance-method","name":"bitwise_xor!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i ^ b\nend"}},{"id":"bitwise_xor!(a:Tensor,b:Tensor)-instance-method","html_id":"bitwise_xor!(a:Tensor,b:Tensor)-instance-method","name":"bitwise_xor!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L67","def":{"name":"bitwise_xor!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i ^ j\nend"}},{"id":"cbrt(a:Tensor)-instance-method","html_id":"cbrt(a:Tensor)-instance-method","name":"cbrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L99","def":{"name":"cbrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.cbrt(i)\nend"}},{"id":"cbrt(a:ClTensor(Float64))-instance-method","html_id":"cbrt(a:ClTensor(Float64))-instance-method","name":"cbrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L221","def":{"name":"cbrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cbrt_vector\", \"double\", \"cbrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cbrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cbrt(a:ClTensor(Float32))-instance-method","html_id":"cbrt(a:ClTensor(Float32))-instance-method","name":"cbrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L222","def":{"name":"cbrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cbrt_vector\", \"float\", \"cbrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cbrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cbrt(a:Number)-instance-method","html_id":"cbrt(a:Number)-instance-method","name":"cbrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L99","def":{"name":"cbrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.cbrt(a)"}},{"id":"cbrt!(a:ClTensor(Float64))-instance-method","html_id":"cbrt!(a:ClTensor(Float64))-instance-method","name":"cbrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L221","def":{"name":"cbrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cbrt_vector\", \"double\", \"cbrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cbrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cbrt!(a:ClTensor(Float32))-instance-method","html_id":"cbrt!(a:ClTensor(Float32))-instance-method","name":"cbrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L222","def":{"name":"cbrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cbrt_vector\", \"float\", \"cbrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cbrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cbrt!(a:Tensor)-instance-method","html_id":"cbrt!(a:Tensor)-instance-method","name":"cbrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L99","def":{"name":"cbrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.cbrt(i)\nend"}},{"id":"ceil(a:ClTensor(Float64))-instance-method","html_id":"ceil(a:ClTensor(Float64))-instance-method","name":"ceil","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L224","def":{"name":"ceil","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"ceil_vector\", \"double\", \"ceil\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"ceil_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"ceil(a:ClTensor(Float32))-instance-method","html_id":"ceil(a:ClTensor(Float32))-instance-method","name":"ceil","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L225","def":{"name":"ceil","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"ceil_vector\", \"float\", \"ceil\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"ceil_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"ceil!(a:ClTensor(Float64))-instance-method","html_id":"ceil!(a:ClTensor(Float64))-instance-method","name":"ceil!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L224","def":{"name":"ceil!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"ceil_vector\", \"double\", \"ceil\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"ceil_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"ceil!(a:ClTensor(Float32))-instance-method","html_id":"ceil!(a:ClTensor(Float32))-instance-method","name":"ceil!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L225","def":{"name":"ceil!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"ceil_vector\", \"float\", \"ceil\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"ceil_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"column_stack(alist:Array(AnyArray(U)))forallU-instance-method","html_id":"column_stack(alist:Array(AnyArray(U)))forallU-instance-method","name":"column_stack","doc":null,"summary":null,"abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"args_string":"(alist : Array(AnyArray(U))) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L115","def":{"name":"column_stack","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alist = alist.map do |e|\n  Num.atleast_1d(e)\nend\nfirst = alist[0]\nshape = first.shape\nNumInternal.assert_shape(shape, alist)\ncase first.ndims\nwhen 1\n  alist = alist.map do |a|\n    a.reshape([a.size, 1])\n  end\n  concatenate(alist, 1)\nwhen 2\n  concatenate(alist, 1)\nelse\n  raise(NumInternal::ShapeError.new(\"dstack was given arrays with more than two dimensions\"))\nend\n"}},{"id":"compile_activation(name:String)-instance-method","html_id":"compile_activation(name:String)-instance-method","name":"compile_activation","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L75","def":{"name":"compile_activation","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = kernel_source(name)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"activate\")\n"}},{"id":"concatenate(alist:Array(AnyArray(U)),axis:Int32)forallU-instance-method","html_id":"concatenate(alist:Array(AnyArray(U)),axis:Int32)forallU-instance-method","name":"concatenate","doc":"Join a sequence of arrays along an existing axis.\nThe arrays must have the same shape, except in the dimension corresponding\nto axis (the first, by default).","summary":"<p>Join a sequence of arrays along an existing axis.</p>","abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"}],"args_string":"(alist : Array(AnyArray(U)), axis : Int32) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L33","def":{"name":"concatenate","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal.raise_zerod(alist)\nnewshape = alist[0].shape.dup\naxis = NumInternal.clip_axis(axis, newshape.size)\nnewshape[axis] = 0\nshape = NumInternal.assert_shape_off_axis(alist, axis, newshape)\nret = alist[0].class.new(newshape)\nlo = [0] * newshape.size\nhi = shape.dup\nhi[axis] = 0\nalist.each do |a|\n  if a.shape[axis] != 0\n    __temp_47 = axis\n    hi[__temp_47] = hi[__temp_47] + a.shape[axis]\n    ranges = (lo.zip(hi)).map do |i, j|\n      i...j\n    end\n    ret[ranges] = a\n    lo[axis] = hi[axis]\n  end\nend\nret\n"}},{"id":"concatenate(alist:Array(AnyArray(U)))forallU-instance-method","html_id":"concatenate(alist:Array(AnyArray(U)))forallU-instance-method","name":"concatenate","doc":"Concatenates an array of one dimensional tensors.","summary":"<p>Concatenates an array of one dimensional tensors.</p>","abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"args_string":"(alist : Array(AnyArray(U))) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L65","def":{"name":"concatenate","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"totalsize = alist.reduce(0) do |i, j|\n  i + j.size\nend\nret = alist[0].class.new([totalsize])\noffset = 0\nalist.each do |a|\n  ret[offset...(offset + a.size)] = a\n  offset = offset + a.size\nend\nret\n"}},{"id":"copysign(a:Number,b:Number)-instance-method","html_id":"copysign(a:Number,b:Number)-instance-method","name":"copysign","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.copysign(a, b)"}},{"id":"copysign(a:Tensor,b:Number)-instance-method","html_id":"copysign(a:Tensor,b:Number)-instance-method","name":"copysign","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.copysign(i, b)\nend"}},{"id":"copysign(a:Number,b:Tensor)-instance-method","html_id":"copysign(a:Number,b:Tensor)-instance-method","name":"copysign","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.copysign(a, i)\nend"}},{"id":"copysign(a:Tensor,b:Tensor)-instance-method","html_id":"copysign(a:Tensor,b:Tensor)-instance-method","name":"copysign","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.copysign(i, j)\nend"}},{"id":"copysign!(a:Tensor,b:Number)-instance-method","html_id":"copysign!(a:Tensor,b:Number)-instance-method","name":"copysign!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.copysign(i, b)\nend"}},{"id":"copysign!(a:Tensor,b:Tensor)-instance-method","html_id":"copysign!(a:Tensor,b:Tensor)-instance-method","name":"copysign!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L150","def":{"name":"copysign!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.copysign(i, j)\nend"}},{"id":"cos(a:ClTensor(Float64))-instance-method","html_id":"cos(a:ClTensor(Float64))-instance-method","name":"cos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L227","def":{"name":"cos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cos_vector\", \"double\", \"cos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cos_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cos(a:ClTensor(Float32))-instance-method","html_id":"cos(a:ClTensor(Float32))-instance-method","name":"cos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L228","def":{"name":"cos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cos_vector\", \"float\", \"cos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cos_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cos(a:Number)-instance-method","html_id":"cos(a:Number)-instance-method","name":"cos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L100","def":{"name":"cos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.cos(a)"}},{"id":"cos(a:Tensor)-instance-method","html_id":"cos(a:Tensor)-instance-method","name":"cos","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L100","def":{"name":"cos","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.cos(i)\nend"}},{"id":"cos!(a:ClTensor(Float64))-instance-method","html_id":"cos!(a:ClTensor(Float64))-instance-method","name":"cos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L227","def":{"name":"cos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cos_vector\", \"double\", \"cos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cos_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cos!(a:ClTensor(Float32))-instance-method","html_id":"cos!(a:ClTensor(Float32))-instance-method","name":"cos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L228","def":{"name":"cos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cos_vector\", \"float\", \"cos\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cos_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cos!(a:Tensor)-instance-method","html_id":"cos!(a:Tensor)-instance-method","name":"cos!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L100","def":{"name":"cos!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.cos(i)\nend"}},{"id":"cosh(a:Number)-instance-method","html_id":"cosh(a:Number)-instance-method","name":"cosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L101","def":{"name":"cosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.cosh(a)"}},{"id":"cosh(a:ClTensor(Float64))-instance-method","html_id":"cosh(a:ClTensor(Float64))-instance-method","name":"cosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L230","def":{"name":"cosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cosh_vector\", \"double\", \"cosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cosh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cosh(a:ClTensor(Float32))-instance-method","html_id":"cosh(a:ClTensor(Float32))-instance-method","name":"cosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L231","def":{"name":"cosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cosh_vector\", \"float\", \"cosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cosh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cosh(a:Tensor)-instance-method","html_id":"cosh(a:Tensor)-instance-method","name":"cosh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L101","def":{"name":"cosh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.cosh(i)\nend"}},{"id":"cosh!(a:ClTensor(Float64))-instance-method","html_id":"cosh!(a:ClTensor(Float64))-instance-method","name":"cosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L230","def":{"name":"cosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cosh_vector\", \"double\", \"cosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cosh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cosh!(a:ClTensor(Float32))-instance-method","html_id":"cosh!(a:ClTensor(Float32))-instance-method","name":"cosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L231","def":{"name":"cosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cosh_vector\", \"float\", \"cosh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cosh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cosh!(a:Tensor)-instance-method","html_id":"cosh!(a:Tensor)-instance-method","name":"cosh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L101","def":{"name":"cosh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.cosh(i)\nend"}},{"id":"cospi(a:ClTensor(Float64))-instance-method","html_id":"cospi(a:ClTensor(Float64))-instance-method","name":"cospi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L233","def":{"name":"cospi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cospi_vector\", \"double\", \"cospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cospi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cospi(a:ClTensor(Float32))-instance-method","html_id":"cospi(a:ClTensor(Float32))-instance-method","name":"cospi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L234","def":{"name":"cospi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"cospi_vector\", \"float\", \"cospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cospi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"cospi!(a:ClTensor(Float64))-instance-method","html_id":"cospi!(a:ClTensor(Float64))-instance-method","name":"cospi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L233","def":{"name":"cospi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cospi_vector\", \"double\", \"cospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cospi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"cospi!(a:ClTensor(Float32))-instance-method","html_id":"cospi!(a:ClTensor(Float32))-instance-method","name":"cospi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L234","def":{"name":"cospi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"cospi_vector\", \"float\", \"cospi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"cospi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"divide(b:Float64,a:ClTensor(Float64))-instance-method","html_id":"divide(b:Float64,a:ClTensor(Float64))-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(b : Float64, a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L191","def":{"name":"divide","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"divide_vector\", \"double\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"divide(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L192","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply3(\"divide_vector\", \"float\", \"/\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"divide(a:ClTensor(Float32),b:Float32)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L192","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2(\"divide_vector\", \"float\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"divide(a:ClTensor(Float64),b:Float64)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L191","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2(\"divide_vector\", \"double\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(b:Float32,a:ClTensor(Float32))-instance-method","html_id":"divide(b:Float32,a:ClTensor(Float32))-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(b : Float32, a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L192","def":{"name":"divide","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"divide_vector\", \"float\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(a:Number,b:Number)-instance-method","html_id":"divide(a:Number,b:Number)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a / b"}},{"id":"divide(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"divide(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L191","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply3(\"divide_vector\", \"double\", \"/\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"divide(a:Number,b:Tensor)-instance-method","html_id":"divide(a:Number,b:Tensor)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a / i\nend"}},{"id":"divide(a:Tensor,b:Tensor)-instance-method","html_id":"divide(a:Tensor,b:Tensor)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i / j\nend"}},{"id":"divide(a:Tensor,b:Number)-instance-method","html_id":"divide(a:Tensor,b:Number)-instance-method","name":"divide","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i / b\nend"}},{"id":"divide!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"divide!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L191","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"divide_vector\", \"double\", \"/\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"divide!(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"divide!(a:ClTensor(Float64),b:Float64)-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L191","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"divide_vector\", \"double\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"divide!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"divide!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L192","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"divide_vector\", \"float\", \"/\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"divide!(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"divide!(a:ClTensor(Float32),b:Float32)-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L192","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"divide_vector\", \"float\", \"/\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"divide_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"divide!(a:Tensor,b:Number)-instance-method","html_id":"divide!(a:Tensor,b:Number)-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i / b\nend"}},{"id":"divide!(a:Tensor,b:Tensor)-instance-method","html_id":"divide!(a:Tensor,b:Tensor)-instance-method","name":"divide!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L59","def":{"name":"divide!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i / j\nend"}},{"id":"dstack(alist:Array(AnyArray(U)))forallU-instance-method","html_id":"dstack(alist:Array(AnyArray(U)))forallU-instance-method","name":"dstack","doc":null,"summary":null,"abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"args_string":"(alist : Array(AnyArray(U))) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L93","def":{"name":"dstack","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alist = alist.map do |e|\n  Num.atleast_1d(e)\nend\nfirst = alist[0]\nshape = first.shape\nNumInternal.assert_shape(shape, alist)\ncase first.ndims\nwhen 1\n  alist = alist.map do |a|\n    a.reshape([1, a.size, 1])\n  end\n  concatenate(alist, 2)\nwhen 2\n  alist = alist.map do |a|\n    a.reshape(a.shape + [1])\n  end\n  concatenate(alist, 2)\nelse\n  raise(NumInternal::ShapeError.new(\"dstack was given arrays with more than two dimensions\"))\nend\n"}},{"id":"elu(z:Tensor)-instance-method","html_id":"elu(z:Tensor)-instance-method","name":"elu","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"args_string":"(z : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation.cr#L20","def":{"name":"elu","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z.map do |el|\n  el > 0 ? el : (Num.exp(el)) - 1\nend"}},{"id":"elu(cl:ClTensor(Float32))-instance-method","html_id":"elu(cl:ClTensor(Float32))-instance-method","name":"elu","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L103","def":{"name":"elu","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"ELU\")"}},{"id":"equal(a:Number,b:Number)-instance-method","html_id":"equal(a:Number,b:Number)-instance-method","name":"equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a == b"}},{"id":"equal(a:Tensor,b:Number)-instance-method","html_id":"equal(a:Tensor,b:Number)-instance-method","name":"equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i == b\nend"}},{"id":"equal(a:Number,b:Tensor)-instance-method","html_id":"equal(a:Number,b:Tensor)-instance-method","name":"equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a == i\nend"}},{"id":"equal(a:Tensor,b:Tensor)-instance-method","html_id":"equal(a:Tensor,b:Tensor)-instance-method","name":"equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i == j\nend"}},{"id":"equal!(a:Tensor,b:Number)-instance-method","html_id":"equal!(a:Tensor,b:Number)-instance-method","name":"equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i == b\nend"}},{"id":"equal!(a:Tensor,b:Tensor)-instance-method","html_id":"equal!(a:Tensor,b:Tensor)-instance-method","name":"equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L68","def":{"name":"equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i == j\nend"}},{"id":"erf(a:ClTensor(Float64))-instance-method","html_id":"erf(a:ClTensor(Float64))-instance-method","name":"erf","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L239","def":{"name":"erf","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"erf_vector\", \"double\", \"erf\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erf_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"erf(a:ClTensor(Float32))-instance-method","html_id":"erf(a:ClTensor(Float32))-instance-method","name":"erf","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L240","def":{"name":"erf","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"erf_vector\", \"float\", \"erf\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erf_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"erf(a:Number)-instance-method","html_id":"erf(a:Number)-instance-method","name":"erf","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L102","def":{"name":"erf","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.erf(a)"}},{"id":"erf(a:Tensor)-instance-method","html_id":"erf(a:Tensor)-instance-method","name":"erf","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L102","def":{"name":"erf","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.erf(i)\nend"}},{"id":"erf!(a:ClTensor(Float64))-instance-method","html_id":"erf!(a:ClTensor(Float64))-instance-method","name":"erf!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L239","def":{"name":"erf!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"erf_vector\", \"double\", \"erf\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erf_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"erf!(a:ClTensor(Float32))-instance-method","html_id":"erf!(a:ClTensor(Float32))-instance-method","name":"erf!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L240","def":{"name":"erf!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"erf_vector\", \"float\", \"erf\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erf_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"erf!(a:Tensor)-instance-method","html_id":"erf!(a:Tensor)-instance-method","name":"erf!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L102","def":{"name":"erf!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.erf(i)\nend"}},{"id":"erfc(a:Tensor)-instance-method","html_id":"erfc(a:Tensor)-instance-method","name":"erfc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L103","def":{"name":"erfc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.erfc(i)\nend"}},{"id":"erfc(a:ClTensor(Float64))-instance-method","html_id":"erfc(a:ClTensor(Float64))-instance-method","name":"erfc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L236","def":{"name":"erfc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"erfc_vector\", \"double\", \"erfc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erfc_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"erfc(a:ClTensor(Float32))-instance-method","html_id":"erfc(a:ClTensor(Float32))-instance-method","name":"erfc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L237","def":{"name":"erfc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"erfc_vector\", \"float\", \"erfc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erfc_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"erfc(a:Number)-instance-method","html_id":"erfc(a:Number)-instance-method","name":"erfc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L103","def":{"name":"erfc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.erfc(a)"}},{"id":"erfc!(a:Tensor)-instance-method","html_id":"erfc!(a:Tensor)-instance-method","name":"erfc!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L103","def":{"name":"erfc!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.erfc(i)\nend"}},{"id":"erfc!(a:ClTensor(Float64))-instance-method","html_id":"erfc!(a:ClTensor(Float64))-instance-method","name":"erfc!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L236","def":{"name":"erfc!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"erfc_vector\", \"double\", \"erfc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erfc_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"erfc!(a:ClTensor(Float32))-instance-method","html_id":"erfc!(a:ClTensor(Float32))-instance-method","name":"erfc!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L237","def":{"name":"erfc!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"erfc_vector\", \"float\", \"erfc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"erfc_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp(a:Tensor)-instance-method","html_id":"exp(a:Tensor)-instance-method","name":"exp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L104","def":{"name":"exp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.exp(i)\nend"}},{"id":"exp(a:Number)-instance-method","html_id":"exp(a:Number)-instance-method","name":"exp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L104","def":{"name":"exp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.exp(a)"}},{"id":"exp(a:ClTensor(Float32))-instance-method","html_id":"exp(a:ClTensor(Float32))-instance-method","name":"exp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L243","def":{"name":"exp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp_vector\", \"float\", \"exp\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp(a:ClTensor(Float64))-instance-method","html_id":"exp(a:ClTensor(Float64))-instance-method","name":"exp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L242","def":{"name":"exp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp_vector\", \"double\", \"exp\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp!(a:ClTensor(Float32))-instance-method","html_id":"exp!(a:ClTensor(Float32))-instance-method","name":"exp!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L243","def":{"name":"exp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp_vector\", \"float\", \"exp\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp!(a:ClTensor(Float64))-instance-method","html_id":"exp!(a:ClTensor(Float64))-instance-method","name":"exp!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L242","def":{"name":"exp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp_vector\", \"double\", \"exp\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp!(a:Tensor)-instance-method","html_id":"exp!(a:Tensor)-instance-method","name":"exp!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L104","def":{"name":"exp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.exp(i)\nend"}},{"id":"exp10(a:ClTensor(Float32))-instance-method","html_id":"exp10(a:ClTensor(Float32))-instance-method","name":"exp10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L249","def":{"name":"exp10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp10_vector\", \"float\", \"exp10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp10_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp10(a:ClTensor(Float64))-instance-method","html_id":"exp10(a:ClTensor(Float64))-instance-method","name":"exp10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L248","def":{"name":"exp10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp10_vector\", \"double\", \"exp10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp10_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp10!(a:ClTensor(Float64))-instance-method","html_id":"exp10!(a:ClTensor(Float64))-instance-method","name":"exp10!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L248","def":{"name":"exp10!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp10_vector\", \"double\", \"exp10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp10_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp10!(a:ClTensor(Float32))-instance-method","html_id":"exp10!(a:ClTensor(Float32))-instance-method","name":"exp10!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L249","def":{"name":"exp10!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp10_vector\", \"float\", \"exp10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp10_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp2(a:Tensor)-instance-method","html_id":"exp2(a:Tensor)-instance-method","name":"exp2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L105","def":{"name":"exp2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.exp2(i)\nend"}},{"id":"exp2(a:ClTensor(Float32))-instance-method","html_id":"exp2(a:ClTensor(Float32))-instance-method","name":"exp2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L246","def":{"name":"exp2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp2_vector\", \"float\", \"exp2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp2_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp2(a:ClTensor(Float64))-instance-method","html_id":"exp2(a:ClTensor(Float64))-instance-method","name":"exp2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L245","def":{"name":"exp2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"exp2_vector\", \"double\", \"exp2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp2_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"exp2(a:Number)-instance-method","html_id":"exp2(a:Number)-instance-method","name":"exp2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L105","def":{"name":"exp2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.exp2(a)"}},{"id":"exp2!(a:ClTensor(Float64))-instance-method","html_id":"exp2!(a:ClTensor(Float64))-instance-method","name":"exp2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L245","def":{"name":"exp2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp2_vector\", \"double\", \"exp2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp2_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp2!(a:ClTensor(Float32))-instance-method","html_id":"exp2!(a:ClTensor(Float32))-instance-method","name":"exp2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L246","def":{"name":"exp2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"exp2_vector\", \"float\", \"exp2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"exp2_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"exp2!(a:Tensor)-instance-method","html_id":"exp2!(a:Tensor)-instance-method","name":"exp2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L105","def":{"name":"exp2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.exp2(i)\nend"}},{"id":"expm1(a:ClTensor(Float64))-instance-method","html_id":"expm1(a:ClTensor(Float64))-instance-method","name":"expm1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L251","def":{"name":"expm1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"expm1_vector\", \"double\", \"expm1\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"expm1_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"expm1(a:ClTensor(Float32))-instance-method","html_id":"expm1(a:ClTensor(Float32))-instance-method","name":"expm1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L252","def":{"name":"expm1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"expm1_vector\", \"float\", \"expm1\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"expm1_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"expm1(a:Number)-instance-method","html_id":"expm1(a:Number)-instance-method","name":"expm1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L106","def":{"name":"expm1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.expm1(a)"}},{"id":"expm1(a:Tensor)-instance-method","html_id":"expm1(a:Tensor)-instance-method","name":"expm1","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L106","def":{"name":"expm1","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.expm1(i)\nend"}},{"id":"expm1!(a:ClTensor(Float64))-instance-method","html_id":"expm1!(a:ClTensor(Float64))-instance-method","name":"expm1!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L251","def":{"name":"expm1!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"expm1_vector\", \"double\", \"expm1\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"expm1_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"expm1!(a:ClTensor(Float32))-instance-method","html_id":"expm1!(a:ClTensor(Float32))-instance-method","name":"expm1!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L252","def":{"name":"expm1!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"expm1_vector\", \"float\", \"expm1\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"expm1_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"expm1!(a:Tensor)-instance-method","html_id":"expm1!(a:Tensor)-instance-method","name":"expm1!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L106","def":{"name":"expm1!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.expm1(i)\nend"}},{"id":"fabs(a:ClTensor(Float64))-instance-method","html_id":"fabs(a:ClTensor(Float64))-instance-method","name":"fabs","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L254","def":{"name":"fabs","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"fabs_vector\", \"double\", \"fabs\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"fabs_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"fabs(a:ClTensor(Float32))-instance-method","html_id":"fabs(a:ClTensor(Float32))-instance-method","name":"fabs","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L255","def":{"name":"fabs","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"fabs_vector\", \"float\", \"fabs\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"fabs_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"fabs!(a:ClTensor(Float32))-instance-method","html_id":"fabs!(a:ClTensor(Float32))-instance-method","name":"fabs!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L255","def":{"name":"fabs!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"fabs_vector\", \"float\", \"fabs\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"fabs_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"fabs!(a:ClTensor(Float64))-instance-method","html_id":"fabs!(a:ClTensor(Float64))-instance-method","name":"fabs!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L254","def":{"name":"fabs!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"fabs_vector\", \"double\", \"fabs\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"fabs_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"floor(a:ClTensor(Float32))-instance-method","html_id":"floor(a:ClTensor(Float32))-instance-method","name":"floor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L258","def":{"name":"floor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"floor_vector\", \"float\", \"floor\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"floor_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"floor(a:ClTensor(Float64))-instance-method","html_id":"floor(a:ClTensor(Float64))-instance-method","name":"floor","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L257","def":{"name":"floor","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"floor_vector\", \"double\", \"floor\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"floor_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"floor!(a:ClTensor(Float32))-instance-method","html_id":"floor!(a:ClTensor(Float32))-instance-method","name":"floor!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L258","def":{"name":"floor!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"floor_vector\", \"float\", \"floor\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"floor_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"floor!(a:ClTensor(Float64))-instance-method","html_id":"floor!(a:ClTensor(Float64))-instance-method","name":"floor!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L257","def":{"name":"floor!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"floor_vector\", \"double\", \"floor\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"floor_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"floordiv(a:Tensor,b:Tensor)-instance-method","html_id":"floordiv(a:Tensor,b:Tensor)-instance-method","name":"floordiv","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i // j\nend"}},{"id":"floordiv(a:Number,b:Tensor)-instance-method","html_id":"floordiv(a:Number,b:Tensor)-instance-method","name":"floordiv","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a // i\nend"}},{"id":"floordiv(a:Number,b:Number)-instance-method","html_id":"floordiv(a:Number,b:Number)-instance-method","name":"floordiv","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a // b"}},{"id":"floordiv(a:Tensor,b:Number)-instance-method","html_id":"floordiv(a:Tensor,b:Number)-instance-method","name":"floordiv","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i // b\nend"}},{"id":"floordiv!(a:Tensor,b:Number)-instance-method","html_id":"floordiv!(a:Tensor,b:Number)-instance-method","name":"floordiv!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i // b\nend"}},{"id":"floordiv!(a:Tensor,b:Tensor)-instance-method","html_id":"floordiv!(a:Tensor,b:Tensor)-instance-method","name":"floordiv!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L60","def":{"name":"floordiv!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i // j\nend"}},{"id":"gamma(a:Number)-instance-method","html_id":"gamma(a:Number)-instance-method","name":"gamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L107","def":{"name":"gamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.gamma(a)"}},{"id":"gamma(a:Tensor)-instance-method","html_id":"gamma(a:Tensor)-instance-method","name":"gamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L107","def":{"name":"gamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.gamma(i)\nend"}},{"id":"gamma!(a:Tensor)-instance-method","html_id":"gamma!(a:Tensor)-instance-method","name":"gamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L107","def":{"name":"gamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.gamma(i)\nend"}},{"id":"greater(a:Tensor,b:Tensor)-instance-method","html_id":"greater(a:Tensor,b:Tensor)-instance-method","name":"greater","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i > j\nend"}},{"id":"greater(a:Number,b:Tensor)-instance-method","html_id":"greater(a:Number,b:Tensor)-instance-method","name":"greater","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a > i\nend"}},{"id":"greater(a:Tensor,b:Number)-instance-method","html_id":"greater(a:Tensor,b:Number)-instance-method","name":"greater","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i > b\nend"}},{"id":"greater(a:Number,b:Number)-instance-method","html_id":"greater(a:Number,b:Number)-instance-method","name":"greater","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a > b"}},{"id":"greater!(a:Tensor,b:Tensor)-instance-method","html_id":"greater!(a:Tensor,b:Tensor)-instance-method","name":"greater!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i > j\nend"}},{"id":"greater!(a:Tensor,b:Number)-instance-method","html_id":"greater!(a:Tensor,b:Number)-instance-method","name":"greater!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L70","def":{"name":"greater!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i > b\nend"}},{"id":"greater_equal(a:Tensor,b:Tensor)-instance-method","html_id":"greater_equal(a:Tensor,b:Tensor)-instance-method","name":"greater_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i >= j\nend"}},{"id":"greater_equal(a:Number,b:Tensor)-instance-method","html_id":"greater_equal(a:Number,b:Tensor)-instance-method","name":"greater_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a >= i\nend"}},{"id":"greater_equal(a:Tensor,b:Number)-instance-method","html_id":"greater_equal(a:Tensor,b:Number)-instance-method","name":"greater_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i >= b\nend"}},{"id":"greater_equal(a:Number,b:Number)-instance-method","html_id":"greater_equal(a:Number,b:Number)-instance-method","name":"greater_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a >= b"}},{"id":"greater_equal!(a:Tensor,b:Tensor)-instance-method","html_id":"greater_equal!(a:Tensor,b:Tensor)-instance-method","name":"greater_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i >= j\nend"}},{"id":"greater_equal!(a:Tensor,b:Number)-instance-method","html_id":"greater_equal!(a:Tensor,b:Number)-instance-method","name":"greater_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L71","def":{"name":"greater_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i >= b\nend"}},{"id":"hstack(alist:Array(AnyArray(U)))forallU-instance-method","html_id":"hstack(alist:Array(AnyArray(U)))forallU-instance-method","name":"hstack","doc":"Concatenates a list of `Tensor`s along axis 1","summary":"<p>Concatenates a list of <code><a href=\"Tensor.html\">Tensor</a></code>s along axis 1</p>","abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"args_string":"(alist : Array(AnyArray(U))) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L83","def":{"name":"hstack","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alist = alist.map do |e|\n  Num.atleast_1d(e)\nend\nNumInternal.less_than_3d(alist)\nif alist.all? do |t|\n  t.ndims == 1\nend\n  concatenate(alist)\nelse\n  concatenate(alist, 1)\nend\n"}},{"id":"hypot(a:Number,b:Tensor)-instance-method","html_id":"hypot(a:Number,b:Tensor)-instance-method","name":"hypot","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.hypot(a, i)\nend"}},{"id":"hypot(a:Tensor,b:Number)-instance-method","html_id":"hypot(a:Tensor,b:Number)-instance-method","name":"hypot","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.hypot(i, b)\nend"}},{"id":"hypot(a:Tensor,b:Tensor)-instance-method","html_id":"hypot(a:Tensor,b:Tensor)-instance-method","name":"hypot","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.hypot(i, j)\nend"}},{"id":"hypot(a:Number,b:Number)-instance-method","html_id":"hypot(a:Number,b:Number)-instance-method","name":"hypot","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.hypot(a, b)"}},{"id":"hypot!(a:Tensor,b:Number)-instance-method","html_id":"hypot!(a:Tensor,b:Number)-instance-method","name":"hypot!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.hypot(i, b)\nend"}},{"id":"hypot!(a:Tensor,b:Tensor)-instance-method","html_id":"hypot!(a:Tensor,b:Tensor)-instance-method","name":"hypot!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L151","def":{"name":"hypot!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.hypot(i, j)\nend"}},{"id":"ilogb(a:Number)-instance-method","html_id":"ilogb(a:Number)-instance-method","name":"ilogb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L108","def":{"name":"ilogb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.ilogb(a)"}},{"id":"ilogb(a:Tensor)-instance-method","html_id":"ilogb(a:Tensor)-instance-method","name":"ilogb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L108","def":{"name":"ilogb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.ilogb(i)\nend"}},{"id":"ilogb!(a:Tensor)-instance-method","html_id":"ilogb!(a:Tensor)-instance-method","name":"ilogb!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L108","def":{"name":"ilogb!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.ilogb(i)\nend"}},{"id":"kernel_source(define:String?=nil)-instance-method","html_id":"kernel_source(define:String?=nil)-instance-method","name":"kernel_source","doc":null,"summary":null,"abstract":false,"args":[{"name":"define","doc":null,"default_value":"nil","external_name":"define","restriction":"String | ::Nil"}],"args_string":"(define : String? = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L29","def":{"name":"kernel_source","args":[{"name":"define","doc":null,"default_value":"nil","external_name":"define","restriction":"String | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !define.nil?\n  define = \"#define #{define} 1\"\nend\n\"\\n    // expected defines:\\n    // one of: [ TANH | RELU | LINEAR | SIGMOID | SCALEDTANH | ELU ]\\n    #{define}\\n\\n    #ifdef TANH\\n        #define ACTIVATION_FUNCTION(output) (tanh(output))\\n    #elif defined SCALEDTANH\\n        #define ACTIVATION_FUNCTION(output) (1.7159f * tanh(0.66667f * output))\\n    #elif SIGMOID\\n        #define ACTIVATION_FUNCTION(output) (1.0f / (1 + exp(-output)))\\n    #elif defined RELU\\n        #define ACTIVATION_FUNCTION(output) (output> 0 ? output : 0)\\n    #elif defined ELU\\n        #define ACTIVATION_FUNCTION(output) (output> 0 ? output : exp(output) - 1)\\n    #elif defined LINEAR\\n        #define ACTIVATION_FUNCTION(output) (output)\\n    #endif\\n\\n    #ifdef ACTIVATION_FUNCTION // protect against not defined\\n      __kernel void activate(__global float *inout) {\\n          int gid = get_global_id(0);\\n          inout[gid] = ACTIVATION_FUNCTION(inout[gid]);\\n      }\\n    #endif\\n\\n    #ifdef ACTIVATION_FUNCTION // protect against not defined\\n      __kernel void forwardNaive(__global const float *in, __global float *out) {\\n          int gid = get_global_id(0);\\n          out[gid] = ACTIVATION_FUNCTION(in[gid]);\\n      }\\n    #endif\\n    \"\n"}},{"id":"ldexp(a:Tensor,b:Tensor)-instance-method","html_id":"ldexp(a:Tensor,b:Tensor)-instance-method","name":"ldexp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.ldexp(i, j)\nend"}},{"id":"ldexp(a:Number,b:Tensor)-instance-method","html_id":"ldexp(a:Number,b:Tensor)-instance-method","name":"ldexp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.ldexp(a, i)\nend"}},{"id":"ldexp(a:Number,b:Number)-instance-method","html_id":"ldexp(a:Number,b:Number)-instance-method","name":"ldexp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.ldexp(a, b)"}},{"id":"ldexp(a:Tensor,b:Number)-instance-method","html_id":"ldexp(a:Tensor,b:Number)-instance-method","name":"ldexp","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.ldexp(i, b)\nend"}},{"id":"ldexp!(a:Tensor,b:Number)-instance-method","html_id":"ldexp!(a:Tensor,b:Number)-instance-method","name":"ldexp!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.ldexp(i, b)\nend"}},{"id":"ldexp!(a:Tensor,b:Tensor)-instance-method","html_id":"ldexp!(a:Tensor,b:Tensor)-instance-method","name":"ldexp!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L152","def":{"name":"ldexp!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.ldexp(i, j)\nend"}},{"id":"left_shift(a:Tensor,b:Number)-instance-method","html_id":"left_shift(a:Tensor,b:Number)-instance-method","name":"left_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i << b\nend"}},{"id":"left_shift(a:Number,b:Tensor)-instance-method","html_id":"left_shift(a:Number,b:Tensor)-instance-method","name":"left_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a << i\nend"}},{"id":"left_shift(a:Tensor,b:Tensor)-instance-method","html_id":"left_shift(a:Tensor,b:Tensor)-instance-method","name":"left_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i << j\nend"}},{"id":"left_shift(a:Number,b:Number)-instance-method","html_id":"left_shift(a:Number,b:Number)-instance-method","name":"left_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a << b"}},{"id":"left_shift!(a:Tensor,b:Number)-instance-method","html_id":"left_shift!(a:Tensor,b:Number)-instance-method","name":"left_shift!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i << b\nend"}},{"id":"left_shift!(a:Tensor,b:Tensor)-instance-method","html_id":"left_shift!(a:Tensor,b:Tensor)-instance-method","name":"left_shift!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L63","def":{"name":"left_shift!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i << j\nend"}},{"id":"less(a:Number,b:Number)-instance-method","html_id":"less(a:Number,b:Number)-instance-method","name":"less","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a < b"}},{"id":"less(a:Tensor,b:Number)-instance-method","html_id":"less(a:Tensor,b:Number)-instance-method","name":"less","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i < b\nend"}},{"id":"less(a:Number,b:Tensor)-instance-method","html_id":"less(a:Number,b:Tensor)-instance-method","name":"less","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a < i\nend"}},{"id":"less(a:Tensor,b:Tensor)-instance-method","html_id":"less(a:Tensor,b:Tensor)-instance-method","name":"less","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i < j\nend"}},{"id":"less!(a:Tensor,b:Number)-instance-method","html_id":"less!(a:Tensor,b:Number)-instance-method","name":"less!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i < b\nend"}},{"id":"less!(a:Tensor,b:Tensor)-instance-method","html_id":"less!(a:Tensor,b:Tensor)-instance-method","name":"less!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L72","def":{"name":"less!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i < j\nend"}},{"id":"less_equal(a:Number,b:Number)-instance-method","html_id":"less_equal(a:Number,b:Number)-instance-method","name":"less_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a <= b"}},{"id":"less_equal(a:Tensor,b:Tensor)-instance-method","html_id":"less_equal(a:Tensor,b:Tensor)-instance-method","name":"less_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i <= j\nend"}},{"id":"less_equal(a:Number,b:Tensor)-instance-method","html_id":"less_equal(a:Number,b:Tensor)-instance-method","name":"less_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a <= i\nend"}},{"id":"less_equal(a:Tensor,b:Number)-instance-method","html_id":"less_equal(a:Tensor,b:Number)-instance-method","name":"less_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i <= b\nend"}},{"id":"less_equal!(a:Tensor,b:Number)-instance-method","html_id":"less_equal!(a:Tensor,b:Number)-instance-method","name":"less_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i <= b\nend"}},{"id":"less_equal!(a:Tensor,b:Tensor)-instance-method","html_id":"less_equal!(a:Tensor,b:Tensor)-instance-method","name":"less_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L73","def":{"name":"less_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i <= j\nend"}},{"id":"lgamma(a:ClTensor(Float64))-instance-method","html_id":"lgamma(a:ClTensor(Float64))-instance-method","name":"lgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L260","def":{"name":"lgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"lgamma_vector\", \"double\", \"lgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"lgamma_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"lgamma(a:ClTensor(Float32))-instance-method","html_id":"lgamma(a:ClTensor(Float32))-instance-method","name":"lgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L261","def":{"name":"lgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"lgamma_vector\", \"float\", \"lgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"lgamma_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"lgamma(a:Number)-instance-method","html_id":"lgamma(a:Number)-instance-method","name":"lgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L109","def":{"name":"lgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.lgamma(a)"}},{"id":"lgamma(a:Tensor)-instance-method","html_id":"lgamma(a:Tensor)-instance-method","name":"lgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L109","def":{"name":"lgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.lgamma(i)\nend"}},{"id":"lgamma!(a:ClTensor(Float64))-instance-method","html_id":"lgamma!(a:ClTensor(Float64))-instance-method","name":"lgamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L260","def":{"name":"lgamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"lgamma_vector\", \"double\", \"lgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"lgamma_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"lgamma!(a:ClTensor(Float32))-instance-method","html_id":"lgamma!(a:ClTensor(Float32))-instance-method","name":"lgamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L261","def":{"name":"lgamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"lgamma_vector\", \"float\", \"lgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"lgamma_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"lgamma!(a:Tensor)-instance-method","html_id":"lgamma!(a:Tensor)-instance-method","name":"lgamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L109","def":{"name":"lgamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.lgamma(i)\nend"}},{"id":"linear(cl:ClTensor(Float32))-instance-method","html_id":"linear(cl:ClTensor(Float32))-instance-method","name":"linear","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L107","def":{"name":"linear","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"LINEAR\")"}},{"id":"log(a:Tensor)-instance-method","html_id":"log(a:Tensor)-instance-method","name":"log","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L110","def":{"name":"log","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.log(i)\nend"}},{"id":"log(a:Number)-instance-method","html_id":"log(a:Number)-instance-method","name":"log","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L110","def":{"name":"log","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.log(a)"}},{"id":"log(a:ClTensor(Float32))-instance-method","html_id":"log(a:ClTensor(Float32))-instance-method","name":"log","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L264","def":{"name":"log","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log_vector\", \"float\", \"log\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log(a:ClTensor(Float64))-instance-method","html_id":"log(a:ClTensor(Float64))-instance-method","name":"log","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L263","def":{"name":"log","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log_vector\", \"double\", \"log\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log!(a:Tensor)-instance-method","html_id":"log!(a:Tensor)-instance-method","name":"log!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L110","def":{"name":"log!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.log(i)\nend"}},{"id":"log!(a:ClTensor(Float32))-instance-method","html_id":"log!(a:ClTensor(Float32))-instance-method","name":"log!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L264","def":{"name":"log!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log_vector\", \"float\", \"log\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log!(a:ClTensor(Float64))-instance-method","html_id":"log!(a:ClTensor(Float64))-instance-method","name":"log!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L263","def":{"name":"log!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log_vector\", \"double\", \"log\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log10(a:ClTensor(Float64))-instance-method","html_id":"log10(a:ClTensor(Float64))-instance-method","name":"log10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L269","def":{"name":"log10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log10_vector\", \"double\", \"log10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log10_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log10(a:ClTensor(Float32))-instance-method","html_id":"log10(a:ClTensor(Float32))-instance-method","name":"log10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L270","def":{"name":"log10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log10_vector\", \"float\", \"log10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log10_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log10(a:Number)-instance-method","html_id":"log10(a:Number)-instance-method","name":"log10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L111","def":{"name":"log10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.log10(a)"}},{"id":"log10(a:Tensor)-instance-method","html_id":"log10(a:Tensor)-instance-method","name":"log10","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L111","def":{"name":"log10","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.log10(i)\nend"}},{"id":"log10!(a:ClTensor(Float64))-instance-method","html_id":"log10!(a:ClTensor(Float64))-instance-method","name":"log10!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L269","def":{"name":"log10!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log10_vector\", \"double\", \"log10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log10_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log10!(a:ClTensor(Float32))-instance-method","html_id":"log10!(a:ClTensor(Float32))-instance-method","name":"log10!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L270","def":{"name":"log10!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log10_vector\", \"float\", \"log10\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log10_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log10!(a:Tensor)-instance-method","html_id":"log10!(a:Tensor)-instance-method","name":"log10!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L111","def":{"name":"log10!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.log10(i)\nend"}},{"id":"log1p(a:ClTensor(Float64))-instance-method","html_id":"log1p(a:ClTensor(Float64))-instance-method","name":"log1p","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L272","def":{"name":"log1p","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log1p_vector\", \"double\", \"log1p\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log1p_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log1p(a:ClTensor(Float32))-instance-method","html_id":"log1p(a:ClTensor(Float32))-instance-method","name":"log1p","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L273","def":{"name":"log1p","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log1p_vector\", \"float\", \"log1p\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log1p_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log1p(a:Number)-instance-method","html_id":"log1p(a:Number)-instance-method","name":"log1p","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L112","def":{"name":"log1p","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.log1p(a)"}},{"id":"log1p(a:Tensor)-instance-method","html_id":"log1p(a:Tensor)-instance-method","name":"log1p","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L112","def":{"name":"log1p","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.log1p(i)\nend"}},{"id":"log1p!(a:ClTensor(Float64))-instance-method","html_id":"log1p!(a:ClTensor(Float64))-instance-method","name":"log1p!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L272","def":{"name":"log1p!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log1p_vector\", \"double\", \"log1p\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log1p_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log1p!(a:ClTensor(Float32))-instance-method","html_id":"log1p!(a:ClTensor(Float32))-instance-method","name":"log1p!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L273","def":{"name":"log1p!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log1p_vector\", \"float\", \"log1p\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log1p_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log1p!(a:Tensor)-instance-method","html_id":"log1p!(a:Tensor)-instance-method","name":"log1p!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L112","def":{"name":"log1p!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.log1p(i)\nend"}},{"id":"log2(a:Tensor)-instance-method","html_id":"log2(a:Tensor)-instance-method","name":"log2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L113","def":{"name":"log2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.log2(i)\nend"}},{"id":"log2(a:Number)-instance-method","html_id":"log2(a:Number)-instance-method","name":"log2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L113","def":{"name":"log2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.log2(a)"}},{"id":"log2(a:ClTensor(Float32))-instance-method","html_id":"log2(a:ClTensor(Float32))-instance-method","name":"log2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L267","def":{"name":"log2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log2_vector\", \"float\", \"log2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log2_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log2(a:ClTensor(Float64))-instance-method","html_id":"log2(a:ClTensor(Float64))-instance-method","name":"log2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L266","def":{"name":"log2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"log2_vector\", \"double\", \"log2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log2_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"log2!(a:ClTensor(Float64))-instance-method","html_id":"log2!(a:ClTensor(Float64))-instance-method","name":"log2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L266","def":{"name":"log2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log2_vector\", \"double\", \"log2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log2_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log2!(a:ClTensor(Float32))-instance-method","html_id":"log2!(a:ClTensor(Float32))-instance-method","name":"log2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L267","def":{"name":"log2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"log2_vector\", \"float\", \"log2\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"log2_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"log2!(a:Tensor)-instance-method","html_id":"log2!(a:Tensor)-instance-method","name":"log2!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L113","def":{"name":"log2!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.log2(i)\nend"}},{"id":"logb(a:Tensor)-instance-method","html_id":"logb(a:Tensor)-instance-method","name":"logb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L114","def":{"name":"logb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.logb(i)\nend"}},{"id":"logb(a:Number)-instance-method","html_id":"logb(a:Number)-instance-method","name":"logb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L114","def":{"name":"logb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.logb(a)"}},{"id":"logb(a:ClTensor(Float32))-instance-method","html_id":"logb(a:ClTensor(Float32))-instance-method","name":"logb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L276","def":{"name":"logb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"logb_vector\", \"float\", \"logb\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"logb_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"logb(a:ClTensor(Float64))-instance-method","html_id":"logb(a:ClTensor(Float64))-instance-method","name":"logb","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L275","def":{"name":"logb","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"logb_vector\", \"double\", \"logb\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"logb_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"logb!(a:Tensor)-instance-method","html_id":"logb!(a:Tensor)-instance-method","name":"logb!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L114","def":{"name":"logb!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.logb(i)\nend"}},{"id":"logb!(a:ClTensor(Float32))-instance-method","html_id":"logb!(a:ClTensor(Float32))-instance-method","name":"logb!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L276","def":{"name":"logb!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"logb_vector\", \"float\", \"logb\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"logb_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"logb!(a:ClTensor(Float64))-instance-method","html_id":"logb!(a:ClTensor(Float64))-instance-method","name":"logb!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L275","def":{"name":"logb!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"logb_vector\", \"double\", \"logb\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"logb_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"max(a:Tensor,b:Tensor)-instance-method","html_id":"max(a:Tensor,b:Tensor)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.max(i, j)\nend"}},{"id":"max(a:Tensor(U))forallU-instance-method","html_id":"max(a:Tensor(U))forallU-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor(U)"}],"args_string":"(a : Tensor(U)) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L78","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"mx = uninitialized U\na.iter.each_with_index do |el, i|\n  c = el.value\n  if i == 0\n    mx = c\n  end\n  if c > mx\n    mx = c\n  end\nend\nmx\n"}},{"id":"max(a:Number,b:Tensor)-instance-method","html_id":"max(a:Number,b:Tensor)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.max(a, i)\nend"}},{"id":"max(a:Number,b:Number)-instance-method","html_id":"max(a:Number,b:Number)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.max(a, b)"}},{"id":"max(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"max(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L92","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.reduce_fast(axis, keepdims) do |i, j|\n  Math.max(i, j)\nend"}},{"id":"max(a:Tensor,b:Number)-instance-method","html_id":"max(a:Tensor,b:Number)-instance-method","name":"max","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.max(i, b)\nend"}},{"id":"max!(a:Tensor,b:Number)-instance-method","html_id":"max!(a:Tensor,b:Number)-instance-method","name":"max!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.max(i, b)\nend"}},{"id":"max!(a:Tensor,b:Tensor)-instance-method","html_id":"max!(a:Tensor,b:Tensor)-instance-method","name":"max!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L153","def":{"name":"max!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.max(i, j)\nend"}},{"id":"mean(a:Tensor)-instance-method","html_id":"mean(a:Tensor)-instance-method","name":"mean","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L62","def":{"name":"mean","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"divide(sum(a), a.size)"}},{"id":"mean(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"mean(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"mean","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L66","def":{"name":"mean","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"divide(sum(a, axis, keepdims), a.shape[axis])"}},{"id":"min(a:Tensor,b:Tensor)-instance-method","html_id":"min(a:Tensor,b:Tensor)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  Math.min(i, j)\nend"}},{"id":"min(a:Tensor,b:Number)-instance-method","html_id":"min(a:Tensor,b:Number)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.min(i, b)\nend"}},{"id":"min(a:Number,b:Number)-instance-method","html_id":"min(a:Number,b:Number)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.min(a, b)"}},{"id":"min(a:Number,b:Tensor)-instance-method","html_id":"min(a:Number,b:Tensor)-instance-method","name":"min","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  Math.min(a, i)\nend"}},{"id":"min!(a:Tensor,b:Tensor)-instance-method","html_id":"min!(a:Tensor,b:Tensor)-instance-method","name":"min!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  Math.min(i, j)\nend"}},{"id":"min!(a:Tensor,b:Number)-instance-method","html_id":"min!(a:Tensor,b:Number)-instance-method","name":"min!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L154","def":{"name":"min!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.min(i, b)\nend"}},{"id":"modulo(a:Number,b:Tensor)-instance-method","html_id":"modulo(a:Number,b:Tensor)-instance-method","name":"modulo","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a % i\nend"}},{"id":"modulo(a:Tensor,b:Tensor)-instance-method","html_id":"modulo(a:Tensor,b:Tensor)-instance-method","name":"modulo","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i % j\nend"}},{"id":"modulo(a:Number,b:Number)-instance-method","html_id":"modulo(a:Number,b:Number)-instance-method","name":"modulo","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a % b"}},{"id":"modulo(a:Tensor,b:Number)-instance-method","html_id":"modulo(a:Tensor,b:Number)-instance-method","name":"modulo","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i % b\nend"}},{"id":"modulo!(a:Tensor,b:Number)-instance-method","html_id":"modulo!(a:Tensor,b:Number)-instance-method","name":"modulo!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i % b\nend"}},{"id":"modulo!(a:Tensor,b:Tensor)-instance-method","html_id":"modulo!(a:Tensor,b:Tensor)-instance-method","name":"modulo!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L62","def":{"name":"modulo!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i % j\nend"}},{"id":"multiply(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"multiply(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L188","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply3(\"multiply_vector\", \"double\", \"*\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"multiply(a:ClTensor(Float64),b:Float64)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L188","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2(\"multiply_vector\", \"double\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(b:Float64,a:ClTensor(Float64))-instance-method","html_id":"multiply(b:Float64,a:ClTensor(Float64))-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(b : Float64, a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L188","def":{"name":"multiply","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"multiply_vector\", \"double\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"multiply(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L189","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply3(\"multiply_vector\", \"float\", \"*\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"multiply(a:ClTensor(Float32),b:Float32)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L189","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2(\"multiply_vector\", \"float\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(b:Float32,a:ClTensor(Float32))-instance-method","html_id":"multiply(b:Float32,a:ClTensor(Float32))-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(b : Float32, a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L189","def":{"name":"multiply","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"multiply_vector\", \"float\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"multiply(a:Number,b:Number)-instance-method","html_id":"multiply(a:Number,b:Number)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a * b"}},{"id":"multiply(a:Tensor,b:Number)-instance-method","html_id":"multiply(a:Tensor,b:Number)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i * b\nend"}},{"id":"multiply(a:Number,b:Tensor)-instance-method","html_id":"multiply(a:Number,b:Tensor)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a * i\nend"}},{"id":"multiply(a:Tensor,b:Tensor)-instance-method","html_id":"multiply(a:Tensor,b:Tensor)-instance-method","name":"multiply","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i * j\nend"}},{"id":"multiply!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"multiply!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L188","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"multiply_vector\", \"double\", \"*\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"multiply!(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"multiply!(a:ClTensor(Float64),b:Float64)-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L188","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"multiply_vector\", \"double\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"multiply!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"multiply!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L189","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"multiply_vector\", \"float\", \"*\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"multiply!(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"multiply!(a:ClTensor(Float32),b:Float32)-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L189","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"multiply_vector\", \"float\", \"*\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"multiply_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"multiply!(a:Tensor,b:Tensor)-instance-method","html_id":"multiply!(a:Tensor,b:Tensor)-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i * j\nend"}},{"id":"multiply!(a:Tensor,b:Number)-instance-method","html_id":"multiply!(a:Tensor,b:Number)-instance-method","name":"multiply!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L58","def":{"name":"multiply!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i * b\nend"}},{"id":"not_equal(a:Tensor,b:Tensor)-instance-method","html_id":"not_equal(a:Tensor,b:Tensor)-instance-method","name":"not_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i != j\nend"}},{"id":"not_equal(a:Number,b:Tensor)-instance-method","html_id":"not_equal(a:Number,b:Tensor)-instance-method","name":"not_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a != i\nend"}},{"id":"not_equal(a:Number,b:Number)-instance-method","html_id":"not_equal(a:Number,b:Number)-instance-method","name":"not_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a != b"}},{"id":"not_equal(a:Tensor,b:Number)-instance-method","html_id":"not_equal(a:Tensor,b:Number)-instance-method","name":"not_equal","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i != b\nend"}},{"id":"not_equal!(a:Tensor,b:Number)-instance-method","html_id":"not_equal!(a:Tensor,b:Number)-instance-method","name":"not_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i != b\nend"}},{"id":"not_equal!(a:Tensor,b:Tensor)-instance-method","html_id":"not_equal!(a:Tensor,b:Tensor)-instance-method","name":"not_equal!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L69","def":{"name":"not_equal!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i != j\nend"}},{"id":"power(a:Number,b:Tensor)-instance-method","html_id":"power(a:Number,b:Tensor)-instance-method","name":"power","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a ** i\nend"}},{"id":"power(a:Number,b:Number)-instance-method","html_id":"power(a:Number,b:Number)-instance-method","name":"power","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a ** b"}},{"id":"power(a:Tensor,b:Tensor)-instance-method","html_id":"power(a:Tensor,b:Tensor)-instance-method","name":"power","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i ** j\nend"}},{"id":"power(a:Tensor,b:Number)-instance-method","html_id":"power(a:Tensor,b:Number)-instance-method","name":"power","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i ** b\nend"}},{"id":"power!(a:Tensor,b:Number)-instance-method","html_id":"power!(a:Tensor,b:Number)-instance-method","name":"power!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i ** b\nend"}},{"id":"power!(a:Tensor,b:Tensor)-instance-method","html_id":"power!(a:Tensor,b:Tensor)-instance-method","name":"power!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L61","def":{"name":"power!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i ** j\nend"}},{"id":"prod(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"prod(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"prod","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L42","def":{"name":"prod","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.reduce_fast(axis, keepdims) do |i, j|\n  i * j\nend"}},{"id":"prod(a:Tensor)-instance-method","html_id":"prod(a:Tensor)-instance-method","name":"prod","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L38","def":{"name":"prod","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.iter.reduce(1) do |i, j|\n  i * j.value\nend"}},{"id":"relu(z:Tensor)-instance-method","html_id":"relu(z:Tensor)-instance-method","name":"relu","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"args_string":"(z : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation.cr#L12","def":{"name":"relu","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.max(0, z)"}},{"id":"relu(cl:ClTensor(Float32))-instance-method","html_id":"relu(cl:ClTensor(Float32))-instance-method","name":"relu","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L99","def":{"name":"relu","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"RELU\")"}},{"id":"right_shift(a:Number,b:Number)-instance-method","html_id":"right_shift(a:Number,b:Number)-instance-method","name":"right_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a >> b"}},{"id":"right_shift(a:Tensor,b:Number)-instance-method","html_id":"right_shift(a:Tensor,b:Number)-instance-method","name":"right_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i >> b\nend"}},{"id":"right_shift(a:Number,b:Tensor)-instance-method","html_id":"right_shift(a:Number,b:Tensor)-instance-method","name":"right_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a >> i\nend"}},{"id":"right_shift(a:Tensor,b:Tensor)-instance-method","html_id":"right_shift(a:Tensor,b:Tensor)-instance-method","name":"right_shift","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i >> j\nend"}},{"id":"right_shift!(a:Tensor,b:Tensor)-instance-method","html_id":"right_shift!(a:Tensor,b:Tensor)-instance-method","name":"right_shift!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i >> j\nend"}},{"id":"right_shift!(a:Tensor,b:Number)-instance-method","html_id":"right_shift!(a:Tensor,b:Number)-instance-method","name":"right_shift!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L64","def":{"name":"right_shift!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i >> b\nend"}},{"id":"rint(a:ClTensor(Float32))-instance-method","html_id":"rint(a:ClTensor(Float32))-instance-method","name":"rint","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L279","def":{"name":"rint","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"rint_vector\", \"float\", \"rint\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rint_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"rint(a:ClTensor(Float64))-instance-method","html_id":"rint(a:ClTensor(Float64))-instance-method","name":"rint","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L278","def":{"name":"rint","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"rint_vector\", \"double\", \"rint\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rint_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"rint!(a:ClTensor(Float64))-instance-method","html_id":"rint!(a:ClTensor(Float64))-instance-method","name":"rint!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L278","def":{"name":"rint!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"rint_vector\", \"double\", \"rint\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rint_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"rint!(a:ClTensor(Float32))-instance-method","html_id":"rint!(a:ClTensor(Float32))-instance-method","name":"rint!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L279","def":{"name":"rint!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"rint_vector\", \"float\", \"rint\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rint_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"round(a:ClTensor(Float32))-instance-method","html_id":"round(a:ClTensor(Float32))-instance-method","name":"round","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L282","def":{"name":"round","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"round_vector\", \"float\", \"round\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"round_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"round(a:ClTensor(Float64))-instance-method","html_id":"round(a:ClTensor(Float64))-instance-method","name":"round","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L281","def":{"name":"round","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"round_vector\", \"double\", \"round\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"round_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"round!(a:ClTensor(Float32))-instance-method","html_id":"round!(a:ClTensor(Float32))-instance-method","name":"round!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L282","def":{"name":"round!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"round_vector\", \"float\", \"round\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"round_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"round!(a:ClTensor(Float64))-instance-method","html_id":"round!(a:ClTensor(Float64))-instance-method","name":"round!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L281","def":{"name":"round!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"round_vector\", \"double\", \"round\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"round_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"rsqrt(a:ClTensor(Float64))-instance-method","html_id":"rsqrt(a:ClTensor(Float64))-instance-method","name":"rsqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L287","def":{"name":"rsqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"rsqrt_vector\", \"double\", \"rsqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rsqrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"rsqrt(a:ClTensor(Float32))-instance-method","html_id":"rsqrt(a:ClTensor(Float32))-instance-method","name":"rsqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L288","def":{"name":"rsqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"rsqrt_vector\", \"float\", \"rsqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rsqrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"rsqrt!(a:ClTensor(Float32))-instance-method","html_id":"rsqrt!(a:ClTensor(Float32))-instance-method","name":"rsqrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L288","def":{"name":"rsqrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"rsqrt_vector\", \"float\", \"rsqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rsqrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"rsqrt!(a:ClTensor(Float64))-instance-method","html_id":"rsqrt!(a:ClTensor(Float64))-instance-method","name":"rsqrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L287","def":{"name":"rsqrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"rsqrt_vector\", \"double\", \"rsqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"rsqrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"run_activation(cl:ClTensor(Float32),prok)-instance-method","html_id":"run_activation(cl:ClTensor(Float32),prok)-instance-method","name":"run_activation","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"},{"name":"prok","doc":null,"default_value":"","external_name":"prok","restriction":""}],"args_string":"(cl : ClTensor(Float32), prok)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L81","def":{"name":"run_activation","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"},{"name":"prok","doc":null,"default_value":"","external_name":"prok","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Cl.args(prok, cl.to_unsafe)\nCl.run(Num::ClContext.instance.queue, prok, cl.size)\ncl\n"}},{"id":"sigmoid(z:Tensor)-instance-method","html_id":"sigmoid(z:Tensor)-instance-method","name":"sigmoid","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"args_string":"(z : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation.cr#L6","def":{"name":"sigmoid","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"z.map! do |i|\n  1.0 / (1.0 + (Num.exp(-i)))\nend"}},{"id":"sigmoid(cl:ClTensor(Float32))-instance-method","html_id":"sigmoid(cl:ClTensor(Float32))-instance-method","name":"sigmoid","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L87","def":{"name":"sigmoid","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"SIGMOID\")"}},{"id":"sin(a:ClTensor(Float64))-instance-method","html_id":"sin(a:ClTensor(Float64))-instance-method","name":"sin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L290","def":{"name":"sin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sin_vector\", \"double\", \"sin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sin_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sin(a:ClTensor(Float32))-instance-method","html_id":"sin(a:ClTensor(Float32))-instance-method","name":"sin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L291","def":{"name":"sin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sin_vector\", \"float\", \"sin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sin_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sin(a:Number)-instance-method","html_id":"sin(a:Number)-instance-method","name":"sin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L115","def":{"name":"sin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sin(a)"}},{"id":"sin(a:Tensor)-instance-method","html_id":"sin(a:Tensor)-instance-method","name":"sin","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L115","def":{"name":"sin","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.sin(i)\nend"}},{"id":"sin!(a:Tensor)-instance-method","html_id":"sin!(a:Tensor)-instance-method","name":"sin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L115","def":{"name":"sin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.sin(i)\nend"}},{"id":"sin!(a:ClTensor(Float32))-instance-method","html_id":"sin!(a:ClTensor(Float32))-instance-method","name":"sin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L291","def":{"name":"sin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sin_vector\", \"float\", \"sin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sin_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sin!(a:ClTensor(Float64))-instance-method","html_id":"sin!(a:ClTensor(Float64))-instance-method","name":"sin!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L290","def":{"name":"sin!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sin_vector\", \"double\", \"sin\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sin_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sinh(a:ClTensor(Float64))-instance-method","html_id":"sinh(a:ClTensor(Float64))-instance-method","name":"sinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L293","def":{"name":"sinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sinh_vector\", \"double\", \"sinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sinh(a:ClTensor(Float32))-instance-method","html_id":"sinh(a:ClTensor(Float32))-instance-method","name":"sinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L294","def":{"name":"sinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sinh_vector\", \"float\", \"sinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sinh(a:Number)-instance-method","html_id":"sinh(a:Number)-instance-method","name":"sinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L116","def":{"name":"sinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sinh(a)"}},{"id":"sinh(a:Tensor)-instance-method","html_id":"sinh(a:Tensor)-instance-method","name":"sinh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L116","def":{"name":"sinh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.sinh(i)\nend"}},{"id":"sinh!(a:Tensor)-instance-method","html_id":"sinh!(a:Tensor)-instance-method","name":"sinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L116","def":{"name":"sinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.sinh(i)\nend"}},{"id":"sinh!(a:ClTensor(Float64))-instance-method","html_id":"sinh!(a:ClTensor(Float64))-instance-method","name":"sinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L293","def":{"name":"sinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sinh_vector\", \"double\", \"sinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sinh!(a:ClTensor(Float32))-instance-method","html_id":"sinh!(a:ClTensor(Float32))-instance-method","name":"sinh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L294","def":{"name":"sinh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sinh_vector\", \"float\", \"sinh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sinpi(a:ClTensor(Float64))-instance-method","html_id":"sinpi(a:ClTensor(Float64))-instance-method","name":"sinpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L296","def":{"name":"sinpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sinpi_vector\", \"double\", \"sinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sinpi(a:ClTensor(Float32))-instance-method","html_id":"sinpi(a:ClTensor(Float32))-instance-method","name":"sinpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L297","def":{"name":"sinpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sinpi_vector\", \"float\", \"sinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sinpi!(a:ClTensor(Float32))-instance-method","html_id":"sinpi!(a:ClTensor(Float32))-instance-method","name":"sinpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L297","def":{"name":"sinpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sinpi_vector\", \"float\", \"sinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sinpi!(a:ClTensor(Float64))-instance-method","html_id":"sinpi!(a:ClTensor(Float64))-instance-method","name":"sinpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L296","def":{"name":"sinpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sinpi_vector\", \"double\", \"sinpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sinpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sqrt(a:ClTensor(Float32))-instance-method","html_id":"sqrt(a:ClTensor(Float32))-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L300","def":{"name":"sqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sqrt_vector\", \"float\", \"sqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sqrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sqrt(a:ClTensor(Float64))-instance-method","html_id":"sqrt(a:ClTensor(Float64))-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L299","def":{"name":"sqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"sqrt_vector\", \"double\", \"sqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sqrt_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"sqrt(a:Tensor)-instance-method","html_id":"sqrt(a:Tensor)-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L117","def":{"name":"sqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.sqrt(i)\nend"}},{"id":"sqrt(a:Number)-instance-method","html_id":"sqrt(a:Number)-instance-method","name":"sqrt","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L117","def":{"name":"sqrt","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sqrt(a)"}},{"id":"sqrt!(a:ClTensor(Float32))-instance-method","html_id":"sqrt!(a:ClTensor(Float32))-instance-method","name":"sqrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L300","def":{"name":"sqrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sqrt_vector\", \"float\", \"sqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sqrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sqrt!(a:Tensor)-instance-method","html_id":"sqrt!(a:Tensor)-instance-method","name":"sqrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L117","def":{"name":"sqrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.sqrt(i)\nend"}},{"id":"sqrt!(a:ClTensor(Float64))-instance-method","html_id":"sqrt!(a:ClTensor(Float64))-instance-method","name":"sqrt!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L299","def":{"name":"sqrt!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"sqrt_vector\", \"double\", \"sqrt\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"sqrt_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"stack(alist:Array(AnyArray(U)),axis:Int32=0)forallU-instance-method","html_id":"stack(alist:Array(AnyArray(U)),axis:Int32=0)forallU-instance-method","name":"stack","doc":null,"summary":null,"abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":"Int32"}],"args_string":"(alist : Array(AnyArray(U)), axis : Int32 = <span class=\"n\">0</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L134","def":{"name":"stack","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"0","external_name":"axis","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"first = alist[0]\nshape = first.shape\nassert_shape(shape, alist)\nif alist.all? do |e|\n  e.ndims == 0\nend\n  return concatenate(alist)\nend\nassert_all_1d(alist)\nexpanded_arrays = alist.map do |e|\n  e.bc(axis)\nend\nconcatenate(expanded_arrays, axis)\n"}},{"id":"std(a:Tensor)-instance-method","html_id":"std(a:Tensor)-instance-method","name":"std","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L70","def":{"name":"std","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.sqrt(divide(sum(power(subtract(a, mean(a)), 2)), a.size))"}},{"id":"std(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"std(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"std","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L74","def":{"name":"std","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"sqrt(divide(sum(power(subtract(a, mean(a, axis, keepdims: true)), 2), axis, keepdims), a.shape[axis]))"}},{"id":"subtract(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"subtract(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L185","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply3(\"subtract_vector\", \"double\", \"-\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract(a:Tensor,b:Tensor)-instance-method","html_id":"subtract(a:Tensor,b:Tensor)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2(b) do |i, j|\n  i - j\nend"}},{"id":"subtract(a:Number,b:Tensor)-instance-method","html_id":"subtract(a:Number,b:Tensor)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Number, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"b.map do |i|\n  a - i\nend"}},{"id":"subtract(a:Tensor,b:Number)-instance-method","html_id":"subtract(a:Tensor,b:Number)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  i - b\nend"}},{"id":"subtract(a:Number,b:Number)-instance-method","html_id":"subtract(a:Number,b:Number)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Number, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a - b"}},{"id":"subtract(b:Float32,a:ClTensor(Float32))-instance-method","html_id":"subtract(b:Float32,a:ClTensor(Float32))-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(b : Float32, a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L186","def":{"name":"subtract","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"subtract_vector\", \"float\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"subtract(a:ClTensor(Float32),b:Float32)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L186","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply2(\"subtract_vector\", \"float\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"subtract(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L186","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_apply3(\"subtract_vector\", \"float\", \"-\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract(b:Float64,a:ClTensor(Float64))-instance-method","html_id":"subtract(b:Float64,a:ClTensor(Float64))-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(b : Float64, a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L185","def":{"name":"subtract","args":[{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"},{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2_lhs(\"subtract_vector\", \"double\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"subtract(a:ClTensor(Float64),b:Float64)-instance-method","name":"subtract","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L185","def":{"name":"subtract","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_apply2(\"subtract_vector\", \"double\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"subtract!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","html_id":"subtract!(a:ClTensor(Float64),b:ClTensor(Float64))-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64), b : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L185","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"subtract_vector\", \"double\", \"-\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"subtract!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","html_id":"subtract!(a:ClTensor(Float32),b:ClTensor(Float32))-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32), b : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L186","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply3_inpl(\"subtract_vector\", \"float\", \"-\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe, b.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"subtract!(a:ClTensor(Float32),b:Float32)-instance-method","html_id":"subtract!(a:ClTensor(Float32),b:Float32)-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"args_string":"(a : ClTensor(Float32), b : Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L186","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"subtract_vector\", \"float\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"subtract!(a:Tensor,b:Number)-instance-method","html_id":"subtract!(a:Tensor,b:Number)-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"args_string":"(a : Tensor, b : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  i - b\nend"}},{"id":"subtract!(a:Tensor,b:Tensor)-instance-method","html_id":"subtract!(a:Tensor,b:Tensor)-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"args_string":"(a : Tensor, b : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L57","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map2!(b) do |i, j|\n  i - j\nend"}},{"id":"subtract!(a:ClTensor(Float64),b:Float64)-instance-method","html_id":"subtract!(a:ClTensor(Float64),b:Float64)-instance-method","name":"subtract!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"args_string":"(a : ClTensor(Float64), b : Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L185","def":{"name":"subtract!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_apply2_inpl(\"subtract_vector\", \"double\", \"-\", b)\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"subtract_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"sum(a:Tensor,axis:Int32,keepdims=false)-instance-method","html_id":"sum(a:Tensor,axis:Int32,keepdims=false)-instance-method","name":"sum","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(a : Tensor, axis : Int32, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L34","def":{"name":"sum","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.reduce_fast(axis, keepdims) do |i, j|\n  i + j\nend"}},{"id":"sum(a:Tensor)-instance-method","html_id":"sum(a:Tensor)-instance-method","name":"sum","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/reductions.cr#L30","def":{"name":"sum","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.iter.reduce(0) do |i, j|\n  i + j.value\nend"}},{"id":"tan(a:ClTensor(Float64))-instance-method","html_id":"tan(a:ClTensor(Float64))-instance-method","name":"tan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L302","def":{"name":"tan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tan_vector\", \"double\", \"tan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tan_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tan(a:ClTensor(Float32))-instance-method","html_id":"tan(a:ClTensor(Float32))-instance-method","name":"tan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L303","def":{"name":"tan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tan_vector\", \"float\", \"tan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tan_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tan(a:Number)-instance-method","html_id":"tan(a:Number)-instance-method","name":"tan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L118","def":{"name":"tan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.tan(a)"}},{"id":"tan(a:Tensor)-instance-method","html_id":"tan(a:Tensor)-instance-method","name":"tan","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L118","def":{"name":"tan","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.tan(i)\nend"}},{"id":"tan!(a:ClTensor(Float64))-instance-method","html_id":"tan!(a:ClTensor(Float64))-instance-method","name":"tan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L302","def":{"name":"tan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tan_vector\", \"double\", \"tan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tan_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tan!(a:Tensor)-instance-method","html_id":"tan!(a:Tensor)-instance-method","name":"tan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L118","def":{"name":"tan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.tan(i)\nend"}},{"id":"tan!(a:ClTensor(Float32))-instance-method","html_id":"tan!(a:ClTensor(Float32))-instance-method","name":"tan!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L303","def":{"name":"tan!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tan_vector\", \"float\", \"tan\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tan_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tanh(a:ClTensor(Float64))-instance-method","html_id":"tanh(a:ClTensor(Float64))-instance-method","name":"tanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L305","def":{"name":"tanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tanh_vector\", \"double\", \"tanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanh_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tanh(a:Number)-instance-method","html_id":"tanh(a:Number)-instance-method","name":"tanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"args_string":"(a : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L119","def":{"name":"tanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Math.tanh(a)"}},{"id":"tanh(cl:ClTensor(Float32))-instance-method","html_id":"tanh(cl:ClTensor(Float32))-instance-method","name":"tanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L91","def":{"name":"tanh","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"TANH\")"}},{"id":"tanh(a:Tensor)-instance-method","html_id":"tanh(a:Tensor)-instance-method","name":"tanh","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L119","def":{"name":"tanh","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map do |i|\n  Math.tanh(i)\nend"}},{"id":"tanh!(a:Tensor)-instance-method","html_id":"tanh!(a:Tensor)-instance-method","name":"tanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"args_string":"(a : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L119","def":{"name":"tanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"a.map! do |i|\n  Math.tanh(i)\nend"}},{"id":"tanh!(a:ClTensor(Float32))-instance-method","html_id":"tanh!(a:ClTensor(Float32))-instance-method","name":"tanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L306","def":{"name":"tanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tanh_vector\", \"float\", \"tanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tanh!(a:ClTensor(Float64))-instance-method","html_id":"tanh!(a:ClTensor(Float64))-instance-method","name":"tanh!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L305","def":{"name":"tanh!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tanh_vector\", \"double\", \"tanh\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanh_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tanh_nn(z:Tensor)-instance-method","html_id":"tanh_nn(z:Tensor)-instance-method","name":"tanh_nn","doc":null,"summary":null,"abstract":false,"args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"args_string":"(z : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation.cr#L16","def":{"name":"tanh_nn","args":[{"name":"z","doc":null,"default_value":"","external_name":"z","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.tanh(z)"}},{"id":"tanh_scaled(cl:ClTensor(Float32))-instance-method","html_id":"tanh_scaled(cl:ClTensor(Float32))-instance-method","name":"tanh_scaled","doc":null,"summary":null,"abstract":false,"args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"args_string":"(cl : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/nn/activation_cl.cr#L95","def":{"name":"tanh_scaled","args":[{"name":"cl","doc":null,"default_value":"","external_name":"cl","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"activate(cl, \"SCALEDTANH\")"}},{"id":"tanpi(a:ClTensor(Float64))-instance-method","html_id":"tanpi(a:ClTensor(Float64))-instance-method","name":"tanpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L308","def":{"name":"tanpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tanpi_vector\", \"double\", \"tanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tanpi(a:ClTensor(Float32))-instance-method","html_id":"tanpi(a:ClTensor(Float32))-instance-method","name":"tanpi","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L309","def":{"name":"tanpi","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tanpi_vector\", \"float\", \"tanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanpi_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tanpi!(a:ClTensor(Float64))-instance-method","html_id":"tanpi!(a:ClTensor(Float64))-instance-method","name":"tanpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L308","def":{"name":"tanpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tanpi_vector\", \"double\", \"tanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tanpi!(a:ClTensor(Float32))-instance-method","html_id":"tanpi!(a:ClTensor(Float32))-instance-method","name":"tanpi!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L309","def":{"name":"tanpi!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tanpi_vector\", \"float\", \"tanpi\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tanpi_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tgamma(a:ClTensor(Float64))-instance-method","html_id":"tgamma(a:ClTensor(Float64))-instance-method","name":"tgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L311","def":{"name":"tgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tgamma_vector\", \"double\", \"tgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tgamma_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tgamma(a:ClTensor(Float32))-instance-method","html_id":"tgamma(a:ClTensor(Float32))-instance-method","name":"tgamma","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L312","def":{"name":"tgamma","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"tgamma_vector\", \"float\", \"tgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tgamma_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"tgamma!(a:ClTensor(Float64))-instance-method","html_id":"tgamma!(a:ClTensor(Float64))-instance-method","name":"tgamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L311","def":{"name":"tgamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tgamma_vector\", \"double\", \"tgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tgamma_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"tgamma!(a:ClTensor(Float32))-instance-method","html_id":"tgamma!(a:ClTensor(Float32))-instance-method","name":"tgamma!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L312","def":{"name":"tgamma!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"tgamma_vector\", \"float\", \"tgamma\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"tgamma_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"trunc(a:ClTensor(Float64))-instance-method","html_id":"trunc(a:ClTensor(Float64))-instance-method","name":"trunc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L314","def":{"name":"trunc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float64).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"trunc_vector\", \"double\", \"trunc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"trunc_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"trunc(a:ClTensor(Float32))-instance-method","html_id":"trunc(a:ClTensor(Float32))-instance-method","name":"trunc","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L315","def":{"name":"trunc","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = ClTensor(Float32).new(a.shape)\ncl_kernel = gen_cl_math_fn1(\"trunc_vector\", \"float\", \"trunc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"trunc_vector\")\nCl.args(cl_proc, a.to_unsafe, result.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, result.size)\nresult\n"}},{"id":"trunc!(a:ClTensor(Float32))-instance-method","html_id":"trunc!(a:ClTensor(Float32))-instance-method","name":"trunc!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"args_string":"(a : ClTensor(Float32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L315","def":{"name":"trunc!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"trunc_vector\", \"float\", \"trunc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"trunc_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"trunc!(a:ClTensor(Float64))-instance-method","html_id":"trunc!(a:ClTensor(Float64))-instance-method","name":"trunc!","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"args_string":"(a : ClTensor(Float64))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L314","def":{"name":"trunc!","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"ClTensor(Float64)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"cl_kernel = gen_cl_math_fn1_inpl(\"trunc_vector\", \"double\", \"trunc\")\nprogram = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\ncl_proc = Cl.create_kernel(program, \"trunc_vector\")\nCl.args(cl_proc, a.to_unsafe)\nCl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n"}},{"id":"vstack(alist:Array(AnyArray(U)))forallU-instance-method","html_id":"vstack(alist:Array(AnyArray(U)))forallU-instance-method","name":"vstack","doc":"Concatenates a list of `Tensor`s along axis 0","summary":"<p>Concatenates a list of <code><a href=\"Tensor.html\">Tensor</a></code>s along axis 0</p>","abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"args_string":"(alist : Array(AnyArray(U))) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/build.cr#L77","def":{"name":"vstack","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"alist = alist.map do |t|\n  atleast_2d(t)\nend\nconcatenate(alist, 0)\n"}}],"macros":[{"id":"elementwise(name,operator)-macro","html_id":"elementwise(name,operator)-macro","name":"elementwise","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""}],"args_string":"(name, operator)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L30","def":{"name":"elementwise","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"operator","doc":null,"default_value":"","external_name":"operator","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ name }}\n(a : Tensor, b : Tensor)\n      a.map2(b) \n{ |i, j| i \n{{ operator.id }}\n j }\n    \nend\n\n    def \n{{ name }}\n!(a : Tensor, b : Tensor)\n      a.map2!(b) \n{ |i, j| i \n{{ operator.id }}\n j }\n    \nend\n\n    def \n{{ name }}\n(a : Tensor, b : Number)\n      a.map \n{ |i| i \n{{ operator.id }}\n b }\n    \nend\n\n    def \n{{ name }}\n!(a : Tensor, b : Number)\n      a.map! \n{ |i| i \n{{ operator.id }}\n b }\n    \nend\n\n    def \n{{ name }}\n(a : Number, b : Tensor)\n      b.map \n{ |i| a \n{{ operator.id }}\n i }\n    \nend\n\n    def \n{{ name }}\n(a : Number, b : Number)\n      a \n{{ operator.id }}\n b\n    \nend\n  \n"}},{"id":"gen_cl_infix_op(dtype,ctype,fn,cname,op)-macro","html_id":"gen_cl_infix_op(dtype,ctype,fn,cname,op)-macro","name":"gen_cl_infix_op","doc":null,"summary":null,"abstract":false,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":""},{"name":"ctype","doc":null,"default_value":"","external_name":"ctype","restriction":""},{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""},{"name":"cname","doc":null,"default_value":"","external_name":"cname","restriction":""},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":""}],"args_string":"(dtype, ctype, fn, cname, op)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L101","def":{"name":"gen_cl_infix_op","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":""},{"name":"ctype","doc":null,"default_value":"","external_name":"ctype","restriction":""},{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""},{"name":"cname","doc":null,"default_value":"","external_name":"cname","restriction":""},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ fn.id }}\n(a : ClTensor(\n{{ dtype }}\n), b : ClTensor(\n{{ dtype }}\n))\n      result = ClTensor(\n{{ dtype }}\n).new(a.shape)\n\n      cl_kernel = gen_cl_apply3(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n\n      Cl.args(cl_proc, a.to_unsafe, b.to_unsafe, result.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, result.size)\n      result\n    \nend\n\n    def \n{{ fn.id }}\n!(a : ClTensor(\n{{ dtype }}\n), b : ClTensor(\n{{ dtype }}\n))\n      cl_kernel = gen_cl_apply3_inpl(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n\n      Cl.args(cl_proc, a.to_unsafe, b.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n    \nend\n\n    def \n{{ fn.id }}\n(a : ClTensor(\n{{ dtype }}\n), b : \n{{ dtype }}\n)\n      result = ClTensor(\n{{ dtype }}\n).new(a.shape)\n\n      cl_kernel = gen_cl_apply2(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n, b)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n      Cl.args(cl_proc, a.to_unsafe, result.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, result.size)\n      result\n    \nend\n\n    def \n{{ fn.id }}\n!(a : ClTensor(\n{{ dtype }}\n), b : \n{{ dtype }}\n)\n      cl_kernel = gen_cl_apply2_inpl(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n, b)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n      Cl.args(cl_proc, a.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n    \nend\n\n    def \n{{ fn.id }}\n(b : \n{{ dtype }}\n, a : ClTensor(\n{{ dtype }}\n))\n      result = ClTensor(\n{{ dtype }}\n).new(a.shape)\n\n      cl_kernel = gen_cl_apply2_lhs(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n, b)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n      Cl.args(cl_proc, a.to_unsafe, result.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, result.size)\n      result\n    \nend\n  \n"}},{"id":"gen_cl_math_fn_op(dtype,ctype,fn,cname,op)-macro","html_id":"gen_cl_math_fn_op(dtype,ctype,fn,cname,op)-macro","name":"gen_cl_math_fn_op","doc":null,"summary":null,"abstract":false,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":""},{"name":"ctype","doc":null,"default_value":"","external_name":"ctype","restriction":""},{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""},{"name":"cname","doc":null,"default_value":"","external_name":"cname","restriction":""},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":""}],"args_string":"(dtype, ctype, fn, cname, op)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/cl_builtin.cr#L159","def":{"name":"gen_cl_math_fn_op","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":""},{"name":"ctype","doc":null,"default_value":"","external_name":"ctype","restriction":""},{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""},{"name":"cname","doc":null,"default_value":"","external_name":"cname","restriction":""},{"name":"op","doc":null,"default_value":"","external_name":"op","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ fn.id }}\n(a : ClTensor(\n{{ dtype }}\n))\n      result = ClTensor(\n{{ dtype }}\n).new(a.shape)\n\n      cl_kernel = gen_cl_math_fn1(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n\n      Cl.args(cl_proc, a.to_unsafe, result.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, result.size)\n      result\n    \nend\n\n    def \n{{ fn.id }}\n!(a : ClTensor(\n{{ dtype }}\n))\n      cl_kernel = gen_cl_math_fn1_inpl(\n{{ cname }}\n, \n{{ ctype }}\n, \n{{ op }}\n)\n      program = Cl.create_and_build(Num::ClContext.instance.context, cl_kernel, Num::ClContext.instance.device)\n      cl_proc = Cl.create_kernel(program, \n{{ cname }}\n)\n\n      Cl.args(cl_proc, a.to_unsafe)\n      Cl.run(Num::ClContext.instance.queue, cl_proc, a.size)\n    \nend\n  \n"}},{"id":"stdlibwrap(fn)-macro","html_id":"stdlibwrap(fn)-macro","name":"stdlibwrap","doc":null,"summary":null,"abstract":false,"args":[{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""}],"args_string":"(fn)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L121","def":{"name":"stdlibwrap","args":[{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ fn.id }}\n(a : Tensor, b : Tensor)\n      a.map2(b) \n{ |i, j| Math.\n{{ fn.id }}\n(i, j) }\n    \nend\n\n    def \n{{ fn.id }}\n!(a : Tensor, b : Tensor)\n      a.map2!(b) \n{ |i, j| Math.\n{{ fn.id }}\n(i, j) }\n    \nend\n\n    def \n{{ fn.id }}\n(a : Tensor, b : Number)\n      a.map \n{ |i| Math.\n{{ fn.id }}\n(i, b) }\n    \nend\n\n    def \n{{ fn.id }}\n!(a : Tensor, b : Number)\n      a.map! \n{ |i| Math.\n{{ fn.id }}\n(i, b) }\n    \nend\n\n    def \n{{ fn.id }}\n(a : Number, b : Tensor)\n      b.map \n{ |i| Math.\n{{ fn.id }}\n(a, i) }\n    \nend\n\n    def \n{{ fn.id }}\n(a : Number, b : Number)\n      Math.\n{{ fn.id }}\n(a, b)\n    \nend\n  \n"}},{"id":"stdlibwrap1d(fn)-macro","html_id":"stdlibwrap1d(fn)-macro","name":"stdlibwrap1d","doc":null,"summary":null,"abstract":false,"args":[{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""}],"args_string":"(fn)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/num/math.cr#L75","def":{"name":"stdlibwrap1d","args":[{"name":"fn","doc":null,"default_value":"","external_name":"fn","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def \n{{ fn.id }}\n(a : Tensor)\n      a.map \n{ |i| Math.\n{{ fn.id }}\n(i) }\n    \nend\n\n    def \n{{ fn.id }}\n!(a : Tensor)\n      a.map! \n{ |i| Math.\n{{ fn.id }}\n(i) }\n    \nend\n\n    def \n{{ fn.id }}\n(a : Number)\n      Math.\n{{ fn.id }}\n(a)\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/crystal-data/num.cr/Num/ArrayFlags","path":"Num/ArrayFlags.html","kind":"enum","full_name":"Num::ArrayFlags","name":"ArrayFlags","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/constants.cr","line_number":42,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Contiguous","name":"Contiguous","value":"1","doc":"Contiguous really means C-style contiguious.  The\ncontiguous part means that there are no 'skipped\nelements'.  That is, that a flat_iter over the array will\ntouch every location in memory from the location of the\nfirst element to that of the last element.  The C-style\npart means that the data is laid out such that the last index\nis the fastest varying as one scans though the array's\nmemory.","summary":"<p>Contiguous really means C-style contiguious.</p>"},{"id":"Fortran","name":"Fortran","value":"2","doc":"Fortran really means Fortran-style contiguious.  The\ncontiguous part means that there are no 'skipped\nelements'.  That is, that a flat_iter over the array will\ntouch every location in memory from the location of the\nfirst element to that of the last element.  The Fortran-style\npart means that the data is laid out such that the first index\nis the fastest varying as one scans though the array's\nmemory.","summary":"<p>Fortran really means Fortran-style contiguious.</p>"},{"id":"OwnData","name":"OwnData","value":"4","doc":"OwnData indicates if this array is the owner of the data\npointed to by its .ptr property.  If not then this is a\nview onto some other array's data.","summary":"<p>OwnData indicates if this array is the owner of the data pointed to by its .ptr property.</p>"},{"id":"Write","name":"Write","value":"8","doc":"Some views into arrays are created using stride tricks\nand aren't safe to write to, since many locations may\nbe sharing the same memory","summary":"<p>Some views into arrays are created using stride tricks and aren't safe to write to, since many locations may be sharing the same memory</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"contiguous?-instance-method","html_id":"contiguous?-instance-method","name":"contiguous?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L51","def":{"name":"contiguous?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Contiguous)"}},{"id":"fortran?-instance-method","html_id":"fortran?-instance-method","name":"fortran?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L60","def":{"name":"fortran?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Fortran)"}},{"id":"none?-instance-method","html_id":"none?-instance-method","name":"none?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L42","def":{"name":"none?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value == 0"}},{"id":"own_data?-instance-method","html_id":"own_data?-instance-method","name":"own_data?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L64","def":{"name":"own_data?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(OwnData)"}},{"id":"write?-instance-method","html_id":"write?-instance-method","name":"write?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L68","def":{"name":"write?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.includes?(Write)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Num/ClContext","path":"Num/ClContext.html","kind":"class","full_name":"Num::ClContext","name":"ClContext","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cltensor/global.cr","line_number":33,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"},"doc":null,"summary":null,"class_methods":[{"id":"instance-class-method","html_id":"instance-class-method","name":"instance","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":null,"def":{"name":"instance","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (value = @@instance).nil?\n  @@instance = (NumInternal::ClInfo.new(*Cl.first_gpu_defaults))\nelse\n  value\nend"}},{"id":"set_device(device)-class-method","html_id":"set_device(device)-class-method","name":"set_device","doc":null,"summary":null,"abstract":false,"args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":""}],"args_string":"(device)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr#L40","def":{"name":"set_device","args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context = Cl.create_context([device])\nqueue = Cl.command_queue_for(context, device)\n@@instance = NumInternal::ClInfo.new(device, context, queue)\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Num/OrderType","path":"Num/OrderType.html","kind":"enum","full_name":"Num::OrderType","name":"OrderType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/constants.cr","line_number":25,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"RowMajor","name":"RowMajor","value":"0","doc":null,"summary":null},{"id":"ColMajor","name":"ColMajor","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"col_major?-instance-method","html_id":"col_major?-instance-method","name":"col_major?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L27","def":{"name":"col_major?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ColMajor"}},{"id":"row_major?-instance-method","html_id":"row_major?-instance-method","name":"row_major?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L26","def":{"name":"row_major?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == RowMajor"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Num/StorageType","path":"Num/StorageType.html","kind":"enum","full_name":"Num::StorageType","name":"StorageType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/constants.cr","line_number":33,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"CPU","name":"CPU","value":"0","doc":null,"summary":null},{"id":"GPU","name":"GPU","value":"1","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"cpu?-instance-method","html_id":"cpu?-instance-method","name":"cpu?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L34","def":{"name":"cpu?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == CPU"}},{"id":"gpu?-instance-method","html_id":"gpu?-instance-method","name":"gpu?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/constants.cr#L35","def":{"name":"gpu?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == GPU"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/Num/WorkPool","path":"Num/WorkPool.html","kind":"class","full_name":"Num::WorkPool","name":"WorkPool","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tensor/work.cr","line_number":4,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/Num","kind":"module","full_name":"Num","name":"Num"},"doc":"Work arrays pool for lapack routines\nIt isn't thread safe for now because crystal isn't multithreaded","summary":"<p>Work arrays pool for lapack routines It isn't thread safe for now because crystal isn't multithreaded</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"get(n):Bytes-instance-method","html_id":"get(n):Bytes-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n) : Bytes","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L8","def":{"name":"get","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bytes","visibility":"Public","body":"reallocate(n + @used)\n@area[@used, n].tap do\n  @used = @used + n\nend\n"}},{"id":"get_cmplx(n):Slice(LibCBLAS::ComplexDouble)-instance-method","html_id":"get_cmplx(n):Slice(LibCBLAS::ComplexDouble)-instance-method","name":"get_cmplx","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n) : Slice(LibCBLAS::ComplexDouble)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L21","def":{"name":"get_cmplx","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(LibCBLAS::ComplexDouble)","visibility":"Public","body":"(get(n * (sizeof(LibCblas::ComplexDouble)))).unsafe_as(Slice(LibCblas::ComplexDouble))"}},{"id":"get_f32(n):Slice(Float32)-instance-method","html_id":"get_f32(n):Slice(Float32)-instance-method","name":"get_f32","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n) : Slice(Float32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L13","def":{"name":"get_f32","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(Float32)","visibility":"Public","body":"(get(n * (sizeof(Float32)))).unsafe_as(Slice(Float32))"}},{"id":"get_f64(n):Slice(Float64)-instance-method","html_id":"get_f64(n):Slice(Float64)-instance-method","name":"get_f64","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n) : Slice(Float64)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L17","def":{"name":"get_f64","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(Float64)","visibility":"Public","body":"(get(n * (sizeof(Float64)))).unsafe_as(Slice(Float64))"}},{"id":"get_i32(n):Slice(Int32)-instance-method","html_id":"get_i32(n):Slice(Int32)-instance-method","name":"get_i32","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"args_string":"(n) : Slice(Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L25","def":{"name":"get_i32","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Slice(Int32)","visibility":"Public","body":"(get(n * (sizeof(Int32)))).unsafe_as(Slice(Int32))"}},{"id":"reallocate(required_size)-instance-method","html_id":"reallocate(required_size)-instance-method","name":"reallocate","doc":null,"summary":null,"abstract":false,"args":[{"name":"required_size","doc":null,"default_value":"","external_name":"required_size","restriction":""}],"args_string":"(required_size)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L43","def":{"name":"reallocate","args":[{"name":"required_size","doc":null,"default_value":"","external_name":"required_size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if !(flag?(:release)) %}\n        required_size += 4\n      {% end %}\nn = @area.size\nif n < required_size\n  while n < required_size\n    n = n * 2\n  end\n  @area = Bytes.new(n)\nend\n{% if !(flag?(:release)) %}\n        @area[required_size - 4] = 0xDE\n        @area[required_size - 3] = 0xAD\n        @area[required_size - 2] = 0xBE\n        @area[required_size - 1] = 0xEF\n      {% end %}\n"}},{"id":"release-instance-method","html_id":"release-instance-method","name":"release","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/work.cr#L29","def":{"name":"release","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if flag?(:release) %}\n        @used = 0\n      {% else %}\n        return if @used == 0\n        aused = @used\n        @used = 0\n        raise \"worksize guard failed\" unless @area[aused] == 0xDE &&\n                                             @area[aused + 1] == 0xAD &&\n                                             @area[aused + 2] == 0xBE &&\n                                             @area[aused + 3] == 0xEF\n      {% end %}"}}],"macros":[],"types":[]}]},{"html_id":"github.com/crystal-data/num.cr/NumInternal","path":"NumInternal.html","kind":"module","full_name":"NumInternal","name":"NumInternal","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"base/array.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr"},{"filename":"base/routines.cr","line_number":26,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr"},{"filename":"base/exceptions.cr","line_number":24,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"},{"filename":"iter/macro.cr","line_number":25,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"},{"filename":"array/broadcast.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr"},{"filename":"array/print.cr","line_number":25,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"}],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"array_to_string(a:AnyArray,separator=&quot;,&quot;,prefix=&quot;&quot;,edge_items=3,summary_insert=&quot;...&quot;,line_width=75)-instance-method","html_id":"array_to_string(a:AnyArray,separator=&amp;quot;,&amp;quot;,prefix=&amp;quot;&amp;quot;,edge_items=3,summary_insert=&amp;quot;...&amp;quot;,line_width=75)-instance-method","name":"array_to_string","doc":"Converts an array to its string reprensentation","summary":"<p>Converts an array to its string reprensentation</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray"},{"name":"separator","doc":null,"default_value":"\", \"","external_name":"separator","restriction":""},{"name":"prefix","doc":null,"default_value":"\"\"","external_name":"prefix","restriction":""},{"name":"edge_items","doc":null,"default_value":"3","external_name":"edge_items","restriction":""},{"name":"summary_insert","doc":null,"default_value":"\"...\"","external_name":"summary_insert","restriction":""},{"name":"line_width","doc":null,"default_value":"75","external_name":"line_width","restriction":""}],"args_string":"(a : AnyArray, separator = <span class=\"s\">&quot;, &quot;</span>, prefix = <span class=\"s\">&quot;&quot;</span>, edge_items = <span class=\"n\">3</span>, summary_insert = <span class=\"s\">&quot;...&quot;</span>, line_width = <span class=\"n\">75</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L238","def":{"name":"array_to_string","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray"},{"name":"separator","doc":null,"default_value":"\", \"","external_name":"separator","restriction":""},{"name":"prefix","doc":null,"default_value":"\"\"","external_name":"prefix","restriction":""},{"name":"edge_items","doc":null,"default_value":"3","external_name":"edge_items","restriction":""},{"name":"summary_insert","doc":null,"default_value":"\"...\"","external_name":"summary_insert","restriction":""},{"name":"line_width","doc":null,"default_value":"75","external_name":"line_width","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.size > 1000\n  data = leading_trailing(a, edge_items)\nelse\n  summary_insert = \"\"\n  data = a\nend\npad = max_width(data)\nnext_line_prefix = \" \"\nnext_line_prefix = next_line_prefix + (\" \" * prefix.size)\nformat_array(a, line_width, next_line_prefix, separator, edge_items, summary_insert, pad)\n"}},{"id":"as_strided(arr:AnyArray,shape:Array(Int32),strides:Array(Int32))-instance-method","html_id":"as_strided(arr:AnyArray,shape:Array(Int32),strides:Array(Int32))-instance-method","name":"as_strided","doc":"as_strided creates a view into the array given the exact strides and\nshape. This means it manipulates the internal data structure of\na Tensor and, if done incorrectly, the array elements can point\nto invalid memory and can corrupt results or crash your program.\nIt is advisable to always use the original x.strides when\ncalculating new strides to avoid reliance on a contiguous\nmemory layout.\n\nFurthermore, arrays created with this function often contain self\noverlapping memory, so that two elements are identical.\nVectorized write operations on such arrays will typically be\nunpredictable. They may even give different results for\nsmall, large, or transposed arrays. Since writing to these\narrays has to be tested and done with great care, you may want\nto use writeable=false to avoid accidental write operations.","summary":"<p>as_strided creates a view into the array given the exact strides and shape.</p>","abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"}],"args_string":"(arr : AnyArray, shape : Array(Int32), strides : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L166","def":{"name":"as_strided","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"newflags = arr.flags.dup\nnewflags = newflags & ((~Num::ArrayFlags::Write) & (~Num::ArrayFlags::OwnData))\narr.class.new(arr.to_unsafe, shape, strides, newflags)\n"}},{"id":"assert_shape(shape,ts)-instance-method","html_id":"assert_shape(shape,ts)-instance-method","name":"assert_shape","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"args_string":"(shape, ts)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L69","def":{"name":"assert_shape","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ts.each do |t|\n  if t.shape == shape\n  else\n    raise(ShapeError.new(\"All inputs must be the same shape\"))\n  end\nend"}},{"id":"assert_shape_off_axis(ts,axis,shape)-instance-method","html_id":"assert_shape_off_axis(ts,axis,shape)-instance-method","name":"assert_shape_off_axis","doc":null,"summary":null,"abstract":false,"args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(ts, axis, shape)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L59","def":{"name":"assert_shape_off_axis","args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ts.each do |t|\n  if t.shape.size != shape.size\n    raise(ShapeError.new(\"All inputs must share the same number of axes\"))\n  end\n  shape.size.times do |i|\n    if (i != axis) && (t.shape[i] != shape[i])\n      raise(ShapeError.new(\"All inputs must share a shape off axis\"))\n    end\n  end\n  __temp_38 = axis\n  shape[__temp_38] = shape[__temp_38] + t.shape[axis]\nend\nshape\n"}},{"id":"bcast_if(item:AnyArray,shape:Array(Int32))-instance-method","html_id":"bcast_if(item:AnyArray,shape:Array(Int32))-instance-method","name":"bcast_if","doc":null,"summary":null,"abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"AnyArray"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(item : AnyArray, shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L147","def":{"name":"bcast_if","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"AnyArray"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"shape == item.shape ? item : item.broadcast_to(shape)"}},{"id":"broadcast(a:AnyArray(T),b:AnyArray(U))forallT,U-instance-method","html_id":"broadcast(a:AnyArray(T),b:AnyArray(U))forallT,U-instance-method","name":"broadcast","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U)) forall T, U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L143","def":{"name":"broadcast","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = {a, b}\nif t.all? do |i|\n  i.shape == t[0].shape\nend\n  return t\nend\nnd = t.max_of do |i|\n  i.ndims\nend\nshape = [0] * nd\nt.size.times do |i|\n  diff = nd - t[i].shape.size\n  tshape = ([1] * diff) + t[i].shape\n  shape = shape.map_with_index do |e, i|\n    e > tshape[i] ? e : tshape[i]\n  end\nend\n{bcast_if(a, shape), bcast_if(b, shape)}\n"}},{"id":"broadcast(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))forallT,U,V-instance-method","html_id":"broadcast(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))forallT,U,V-instance-method","name":"broadcast","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V)) forall T, U, V","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L144","def":{"name":"broadcast","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = {a, b, c}\nif t.all? do |i|\n  i.shape == t[0].shape\nend\n  return t\nend\nnd = t.max_of do |i|\n  i.ndims\nend\nshape = [0] * nd\nt.size.times do |i|\n  diff = nd - t[i].shape.size\n  tshape = ([1] * diff) + t[i].shape\n  shape = shape.map_with_index do |e, i|\n    e > tshape[i] ? e : tshape[i]\n  end\nend\n{bcast_if(a, shape), bcast_if(b, shape), bcast_if(c, shape)}\n"}},{"id":"broadcast(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))forallT,U,V,W-instance-method","html_id":"broadcast(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))forallT,U,V,W-instance-method","name":"broadcast","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V), d : AnyArray(W)) forall T, U, V, W","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L145","def":{"name":"broadcast","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = {a, b, c, d}\nif t.all? do |i|\n  i.shape == t[0].shape\nend\n  return t\nend\nnd = t.max_of do |i|\n  i.ndims\nend\nshape = [0] * nd\nt.size.times do |i|\n  diff = nd - t[i].shape.size\n  tshape = ([1] * diff) + t[i].shape\n  shape = shape.map_with_index do |e, i|\n    e > tshape[i] ? e : tshape[i]\n  end\nend\n{bcast_if(a, shape), bcast_if(b, shape), bcast_if(c, shape), bcast_if(d, shape)}\n"}},{"id":"broadcast2(a:AnyArray(U),b:AnyArray(V))forallU,V-instance-method","html_id":"broadcast2(a:AnyArray(U),b:AnyArray(V))forallU,V-instance-method","name":"broadcast2","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(V)"}],"args_string":"(a : AnyArray(U), b : AnyArray(V)) forall U, V","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L123","def":{"name":"broadcast2","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(U)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"t = {a, b}\nif a.shape == b.shape\n  return t\nend\nnd = t.max_of do |i|\n  i.ndims\nend\nshape = [0] * nd\n2.times do |i|\n  diff = nd - t[i].shape.size\n  tshape = ([1] * diff) + t[i].shape\n  shape = shape.map_with_index do |e, j|\n    e > tshape[j] ? e : tshape[j]\n  end\nend\nreturn {bcast_if(t[0], shape), bcast_if(t[1], shape)}\n"}},{"id":"broadcast_to(arr:AnyArray,newshape:Array(Int32))-instance-method","html_id":"broadcast_to(arr:AnyArray,newshape:Array(Int32))-instance-method","name":"broadcast_to","doc":"Broadcasts an array to a new shape. A readonly view on the original array\nwith the given shape. It is typically not contiguous. Furthermore,\nmore than one element of a broadcasted array may refer to a single\nmemory location.","summary":"<p>Broadcasts an array to a new shape.</p>","abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"newshape","doc":null,"default_value":"","external_name":"newshape","restriction":"Array(Int32)"}],"args_string":"(arr : AnyArray, newshape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L81","def":{"name":"broadcast_to","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"newshape","doc":null,"default_value":"","external_name":"newshape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"dim = newshape.size\ndefstrides = [0] * dim\nsz = 1\ndim.times do |i|\n  defstrides[(dim - i) - 1] = sz\n  sz = sz * newshape[(dim - i) - 1]\nend\nnewstrides = broadcast_strides(newshape, arr.shape, defstrides, arr.strides)\nnewflags = arr.flags.dup\nnewflags = newflags & ((~Num::ArrayFlags::Write) & (~Num::ArrayFlags::OwnData))\narr.class.new(arr.to_unsafe, newshape, newstrides, newflags)\n"}},{"id":"broadcastable(arr:AnyArray,other:AnyArray)-instance-method","html_id":"broadcastable(arr:AnyArray,other:AnyArray)-instance-method","name":"broadcastable","doc":"Determines if two shapes are broadcastable against each other.\nThe rules for checking this property are well defined:\n\nTwo dimensions are compatible if:\n  - they are equal\n  - one of them is equal to 1\n\nIf the axes of the array are different lengths, dimensions of\nsize one can be appended to one or the other in order to make\nthe arrays broadcastable against each other and satisfy the\nrules for broadcastable dimensions.","summary":"<p>Determines if two shapes are broadcastable against each other.</p>","abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray"}],"args_string":"(arr : AnyArray, other : AnyArray)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L39","def":{"name":"broadcastable","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyArray"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if arr.shape != other.shape\nelse\n  return [] of Int32\nend\nsz = arr.shape.size\nosz = other.shape.size\nif sz == osz\n  if broadcast_equal(arr.shape, other.shape)\n    return broadcastable_shape(arr.shape, other.shape)\n  end\nelse\n  if sz > osz\n    othershape = ([1] * (sz - osz)) + other.shape\n    if broadcast_equal(arr.shape, othershape)\n      return broadcastable_shape(arr.shape, othershape)\n    end\n  else\n    selfshape = ([1] * (osz - sz)) + arr.shape\n    if broadcast_equal(selfshape, other.shape)\n      return broadcastable_shape(selfshape, other.shape)\n    end\n  end\nend\nraise(ShapeError.new(\"Shapes #{arr.shape} and #{other.shape} are not broadcastable\"))\n"}},{"id":"clip_axis(axis,size)-instance-method","html_id":"clip_axis(axis,size)-instance-method","name":"clip_axis","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(axis, size)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L81","def":{"name":"clip_axis","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if axis < 0\n  axis = axis + size\nend\nif axis < 0 || axis > size\n  raise(AxisError.new(\"Axis out of range\"))\nend\naxis\n"}},{"id":"concatenate(alist:Array(AnyArray(U)),axis:Int32)forallU-instance-method","html_id":"concatenate(alist:Array(AnyArray(U)),axis:Int32)forallU-instance-method","name":"concatenate","doc":null,"summary":null,"abstract":false,"args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"}],"args_string":"(alist : Array(AnyArray(U)), axis : Int32) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L28","def":{"name":"concatenate","args":[{"name":"alist","doc":null,"default_value":"","external_name":"alist","restriction":"Array(AnyArray(U))"},{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"NumInternal.raise_zerod(alist)\nnewshape = alist[0].shape.dup\naxis = NumInternal.clip_axis(axis, newshape.size)\nnewshape[axis] = 0\nshape = NumInternal.assert_shape_off_axis(alist, axis, newshape)\nret = alist[0].class.new(newshape)\nlo = [0] * newshape.size\nhi = shape.dup\nhi[axis] = 0\nalist.each do |a|\n  if a.shape[axis] != 0\n    __temp_36 = axis\n    hi[__temp_36] = hi[__temp_36] + a.shape[axis]\n    ranges = (lo.zip(hi)).map do |i, j|\n      i...j\n    end\n    ret[ranges] = a\n    lo[axis] = hi[axis]\n  end\nend\nret\n"}},{"id":"format(value:Complex,pad:Int32=0)-instance-method","html_id":"format(value:Complex,pad:Int32=0)-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Complex"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"args_string":"(value : Complex, pad : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L99","def":{"name":"format","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Complex"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{format(value.real)}+#{format(value.imag)}j\".ljust(pad)"}},{"id":"format(value:Int,pad:Int32=0)-instance-method","html_id":"format(value:Int,pad:Int32=0)-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"args_string":"(value : Int, pad : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L91","def":{"name":"format","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"#{value}\".rjust(pad)"}},{"id":"format(value:Float,pad:Int32=0)-instance-method","html_id":"format(value:Float,pad:Int32=0)-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"args_string":"(value : Float, pad : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L95","def":{"name":"format","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Float"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(sprintf(\"%g\", value)).ljust(pad)"}},{"id":"format(value:String,pad:Int32=0)-instance-method","html_id":"format(value:String,pad:Int32=0)-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"args_string":"(value : String, pad : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L103","def":{"name":"format","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"String"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.rjust(pad)"}},{"id":"format(value:Bool,pad:Int32=0)-instance-method","html_id":"format(value:Bool,pad:Int32=0)-instance-method","name":"format","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"args_string":"(value : Bool, pad : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L107","def":{"name":"format","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Bool"},{"name":"pad","doc":null,"default_value":"0","external_name":"pad","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"value.to_s.rjust(pad)"}},{"id":"format_array(a,line_width,next_line_prefix,separator,edge_items,summary_insert,pad)-instance-method","html_id":"format_array(a,line_width,next_line_prefix,separator,edge_items,summary_insert,pad)-instance-method","name":"format_array","doc":"Wrapper around recursor","summary":"<p>Wrapper around recursor</p>","abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"line_width","doc":null,"default_value":"","external_name":"line_width","restriction":""},{"name":"next_line_prefix","doc":null,"default_value":"","external_name":"next_line_prefix","restriction":""},{"name":"separator","doc":null,"default_value":"","external_name":"separator","restriction":""},{"name":"edge_items","doc":null,"default_value":"","external_name":"edge_items","restriction":""},{"name":"summary_insert","doc":null,"default_value":"","external_name":"summary_insert","restriction":""},{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":""}],"args_string":"(a, line_width, next_line_prefix, separator, edge_items, summary_insert, pad)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L233","def":{"name":"format_array","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":""},{"name":"line_width","doc":null,"default_value":"","external_name":"line_width","restriction":""},{"name":"next_line_prefix","doc":null,"default_value":"","external_name":"next_line_prefix","restriction":""},{"name":"separator","doc":null,"default_value":"","external_name":"separator","restriction":""},{"name":"edge_items","doc":null,"default_value":"","external_name":"edge_items","restriction":""},{"name":"summary_insert","doc":null,"default_value":"","external_name":"summary_insert","restriction":""},{"name":"pad","doc":null,"default_value":"","external_name":"pad","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"recursor(a, [] of Int32, hanging_indent: next_line_prefix, curr_width: line_width, summary_insert: summary_insert, edge_items: edge_items, separator: separator, pad: pad)"}},{"id":"less_than_2d(ts)-instance-method","html_id":"less_than_2d(ts)-instance-method","name":"less_than_2d","doc":null,"summary":null,"abstract":false,"args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"args_string":"(ts)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L113","def":{"name":"less_than_2d","args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ts.any? do |t|\n  t.ndims > 2\nend\n  raise(NumInternal::ShapeError.new(\"Arrays must have less than 3 dimensions\"))\nend"}},{"id":"less_than_3d(ts)-instance-method","html_id":"less_than_3d(ts)-instance-method","name":"less_than_3d","doc":null,"summary":null,"abstract":false,"args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"args_string":"(ts)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L107","def":{"name":"less_than_3d","args":[{"name":"ts","doc":null,"default_value":"","external_name":"ts","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ts.any? do |t|\n  t.ndims > 3\nend\n  raise(NumInternal::ShapeError.new(\"Arrays must have less than 3 dimensions\"))\nend"}},{"id":"normalize_axies_list(axes,ndims)-instance-method","html_id":"normalize_axies_list(axes,ndims)-instance-method","name":"normalize_axies_list","doc":null,"summary":null,"abstract":false,"args":[{"name":"axes","doc":null,"default_value":"","external_name":"axes","restriction":""},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":""}],"args_string":"(axes, ndims)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L87","def":{"name":"normalize_axies_list","args":[{"name":"axes","doc":null,"default_value":"","external_name":"axes","restriction":""},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"axes.map do |e|\n  normalize_axis(e, ndims)\nend"}},{"id":"normalize_axis(axis,ndims)-instance-method","html_id":"normalize_axis(axis,ndims)-instance-method","name":"normalize_axis","doc":null,"summary":null,"abstract":false,"args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":""}],"args_string":"(axis, ndims)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L77","def":{"name":"normalize_axis","args":[{"name":"axis","doc":null,"default_value":"","external_name":"axis","restriction":""},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if axis < 0\n  axis = axis + ndims\nend\nif axis >= ndims || (axis < 0)\n  raise(ValueError.new(\"Axis out of range for array\"))\nend\naxis\n"}},{"id":"raise_zerod(items)-instance-method","html_id":"raise_zerod(items)-instance-method","name":"raise_zerod","doc":null,"summary":null,"abstract":false,"args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"args_string":"(items)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/print.cr#L75","def":{"name":"raise_zerod","args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if items.any? do |i|\n  i.ndims == 0\nend\n  raise(ShapeError.new(\"Zero dimensional arrays cannot be concatenated\"))\nend"}},{"id":"shape_to_strides(shape:Array(Int32),layout:Num::OrderType=Num::RowMajor):Array(Int32)-instance-method","html_id":"shape_to_strides(shape:Array(Int32),layout:Num::OrderType=Num::RowMajor):Array(Int32)-instance-method","name":"shape_to_strides","doc":"Takes in a shape, and a memory order type, and returns the\nstrides of an array matching the shape and layout.\nNum.cr uses row major memory layout by default, and ClTensors\nhave this enforced, it is not possible to use col major storage\non a ClTensor.","summary":"<p>Takes in a shape, and a memory order type, and returns the strides of an array matching the shape and layout.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"layout","doc":null,"default_value":"Num::RowMajor","external_name":"layout","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), layout : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>) : Array(Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/routines.cr#L34","def":{"name":"shape_to_strides","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"layout","doc":null,"default_value":"Num::RowMajor","external_name":"layout","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"accum = 1\nret = shape.clone\ncase layout\nwhen Num::RowMajor\n  (shape.size - 1).step(to: 0, by: -1) do |i|\n    ret[i] = accum\n    accum = accum * shape[i]\n  end\nelse\n  shape.size.times do |i|\n    ret[i] = accum\n    accum = accum * shape[i]\n  end\nend\nret\n"}}],"macros":[{"id":"broadcast_n(items)-macro","html_id":"broadcast_n(items)-macro","name":"broadcast_n","doc":null,"summary":null,"abstract":false,"args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"args_string":"(items)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/broadcast.cr#L97","def":{"name":"broadcast_n","args":[{"name":"items","doc":null,"default_value":"","external_name":"items","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    def broadcast(\n{% for item in items %}{{ item[:sym].id }} : AnyArray({{ item[:typ] }}),{% end %}\n) forall \n{% for item, index in items %} {{ item[:typ] }} {% if index != (items.size - 1) %},{% end %} {% end %}\n\n      t = \n{\n        \n{% for item in items %} {{ item[:sym].id }}, {% end %}\n\n      }\n      if t.all? \n{ |i| i.shape == t[0].shape }\n        return t\n      \nend\n\n      nd = t.max_of \n{ |i| i.ndims }\n      shape = [0] * nd\n\n      t.size.times do |i|\n        diff = nd - t[i].shape.size\n        tshape = [1] * diff + t[i].shape\n        shape = shape.map_with_index do |e, i|\n          \ne > tshape[i] ? \ne : tshape[i]\n        \nend\n      \nend\n\n      \n{\n        \n{% for item in items %} bcast_if({{ item[:sym].id }}, shape), {% end %}\n\n      }\n    \nend\n  \n"}},{"id":"iter_macro(n,vars)-macro","html_id":"iter_macro(n,vars)-macro","name":"iter_macro","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"vars","doc":null,"default_value":"","external_name":"vars","restriction":""}],"args_string":"(n, vars)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L26","def":{"name":"iter_macro","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":""},{"name":"vars","doc":null,"default_value":"","external_name":"vars","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"    struct ContigFlatIter\n{{ n }}\n(\n{% for v in vars %}{{ v[:typ] }},{% end %}\n)\n      include Iterator(Tuple(\n{% for v in vars %}{{ v[:typ] }}, {% end %}\n))\n\n      @size : Int32\n      @offset : Int32\n\n      \n{% for v in vars %}\n        # tracks a single pointer to a single arrays data\n        @ptr_{{ v[:sym].id }} : Pointer({{ v[:typ] }})\n      {% end %}\n\n\n      def initialize(\n        \n{% for v in vars %}\n          {{ v[:sym].id }} : AnyArray({{ v[:typ] }}),\n        {% end %}\n\n      )\n\n        \n{% for v in vars %}\n          @ptr_{{ v[:sym].id }} = {{ v[:sym].id }}.to_unsafe\n        {% end %}\n\n\n        @offset = 0\n        @size = \n{{ vars[0][:sym].id }}\n.size\n      \nend\n\n      def next\n        \n{% for v in vars %}\n          ret_{{ v[:sym].id }} = @ptr_{{ v[:sym].id }}\n        {% end %}\n\n\n        if @offset < @size\n          @offset += 1\n          \n{% for v in vars %}\n            @ptr_{{ v[:sym].id }} += 1\n          {% end %}\n\n          \n{\n            \n{% for v in vars %}\n              ret_{{ v[:sym].id }},\n            {% end %}\n\n          }\n        \nelse\n          stop\n        \nend\n      \nend\n    \nend\n    \n# The primary N-dimensional iterator through any ndarrays.\n\n    \n# this will always iterate in row-major order, regardless of the\n\n    \n# underlying strides or memory layout of the array.\n\n    struct NDFlatIter\n{{ n }}\n(\n{% for v in vars %}{{ v[:typ] }},{% end %}\n)\n      include Iterator(Tuple(\n{% for v in vars %}{{ v[:typ] }}, {% end %}\n))\n\n      \n# tracks the shape, dimensionality, and current iteration\n\n      \n# of the ndarray, identifying if an ndarray iterator has finished\n\n      \n# its iteration, as well as understanding the strides in each\n\n      \n# dimension\n\n      @shape : Pointer(Int32)\n      @coord : Pointer(Int32)\n      @dim : Int32\n\n      \n{% for v in vars %}\n        # tracks a single pointer to a single arrays data\n        @ptr_{{ v[:sym].id }} : Pointer({{ v[:typ] }})\n        @strides_{{ v[:sym].id }} : Pointer(Int32)\n        @backstrides_{{ v[:sym].id }} : Pointer(Int32)\n      {% end %}\n\n\n      def initialize(\n        \n{% for v in vars %}\n          {{ v[:sym].id }} : AnyArray({{ v[:typ] }}),\n        {% end %}\n\n      )\n        @shape = \n{{ vars[0][:sym].id }}\n.shape.to_unsafe\n        @coord = Pointer(Int32).malloc(\n{{ vars[0][:sym].id }}\n.ndims, 0)\n        @dim = \n{{ vars[0][:sym].id }}\n.ndims - 1\n\n        \n{% for v in vars %}\n          @ptr_{{ v[:sym].id }} = {{ v[:sym].id }}.to_unsafe\n          @strides_{{ v[:sym].id }} = {{ v[:sym].id }}.strides.to_unsafe\n          @backstrides_{{ v[:sym].id }} = Pointer(Int32).malloc(@dim+1) { |i| @strides_{{ v[:sym].id }}[i] * (@shape[i] - 1) }\n        {% end %}\n\n\n        \n# If the strides of an array are negative, the pointer has to\n\n        \n# be offset before iteration starts, otherwise the incorrect\n\n        \n# elements will be yielded\n\n        (@dim + 1).times do |i|\n          \n{% for v in vars %}\n            if @strides_{{ v[:sym].id }}[i] < 0\n              @ptr_{{ v[:sym].id }} += (@shape[i] - 1) * @strides_{{ v[:sym].id }}[i].abs\n            end\n          {% end %}\n\n        \nend\n        @done = false\n      \nend\n\n      \n# The step of the iterator, walks through each step of an ndarray in\n\n      \n# row major order\n\n      def next\n        if @done\n          return stop\n        \nend\n\n        \n# if the iterator has been exhausted, yield, which allows this iterator\n\n        \n# to be zipped and used with each, map, etc.\n\n        \n{% for v in vars %}\n          ret_{{ v[:sym].id }} = @ptr_{{ v[:sym].id }}\n        {% end %}\n\n\n        @dim.step(to: 0, by: -1) do |k|\n          if @coord[k] < @shape[k] - 1\n            @coord[k] += 1\n            \n{% for v in vars %}\n              @ptr_{{ v[:sym].id }} += @strides_{{ v[:sym].id }}[k]\n            {% end %}\n\n            break\n          \nelse\n            if k == 0\n              @done = true\n            \nend\n            @coord[k] = 0\n            \n{% for v in vars %}\n              @ptr_{{ v[:sym].id }} -= @backstrides_{{ v[:sym].id }}[k]\n            {% end %}\n\n          \nend\n        \nend\n        \n{\n          \n{% for v in vars %}\n            ret_{{ v[:sym].id }},\n          {% end %}\n\n        }\n      \nend\n    \nend\n  \n"}}],"types":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","path":"NumInternal/AnyTensor.html","kind":"class","full_name":"NumInternal::AnyTensor(T)","name":"AnyTensor","abstract":true,"superclass":{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/array.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-data/num.cr/AnyArray","kind":"class","full_name":"AnyArray(T)","name":"AnyArray"},{"html_id":"github.com/crystal-data/num.cr/ClTensor","kind":"class","full_name":"ClTensor(T)","name":"ClTensor"}],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":"The abstract class for any Tensor.  Must have storage, be able\nto free its storage, as well as provide information about\nmemory layout and size, and pass itself to low level libraries","summary":"<p>The abstract class for any Tensor.</p>","class_methods":[],"constructors":[{"id":"new(shape:Array(Int32),strides:Array(Int32),ndims:Int32)-class-method","html_id":"new(shape:Array(Int32),strides:Array(Int32),ndims:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":"Int32"}],"args_string":"(shape : Array(Int32), strides : Array(Int32), ndims : Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L32","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":"Array(Int32)"},{"name":"ndims","doc":null,"default_value":"","external_name":"ndims","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AnyTensor(T).allocate\n_.initialize(shape, strides, ndims)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"basetype(dtype:U.class)forallU-instance-method","html_id":"basetype(dtype:U.class)forallU-instance-method","name":"basetype","doc":null,"summary":null,"abstract":true,"args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"args_string":"(dtype : <span class=\"t\">U</span>.<span class=\"k\">class</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L42","def":{"name":"basetype","args":[{"name":"dtype","doc":null,"default_value":"","external_name":"dtype","restriction":"U.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"check_type-instance-method","html_id":"check_type-instance-method","name":"check_type","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L36","def":{"name":"check_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L38","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L41","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L37","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"is_c_contiguous:Bool-instance-method","html_id":"is_c_contiguous:Bool-instance-method","name":"is_c_contiguous","doc":"Checks that a tensor follows row major memory layout","summary":"<p>Checks that a tensor follows row major memory layout</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L45","def":{"name":"is_c_contiguous","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if ndims != 0\nelse\n  return true\nend\nif ndims == 1\n  return (shape[0] == 1) || (strides[0] == 1)\nend\nsd = 1\n(ndims - 1).step(to: 0, by: -1) do |i|\n  dim = shape[i]\n  if dim != 0\n  else\n    return true\n  end\n  if strides[i] == sd\n  else\n    return false\n  end\n  sd = sd * dim\nend\ntrue\n"}},{"id":"is_f_contiguous:Bool-instance-method","html_id":"is_f_contiguous:Bool-instance-method","name":"is_f_contiguous","doc":"Checks that a tensor follows col major memory layout","summary":"<p>Checks that a tensor follows col major memory layout</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L68","def":{"name":"is_f_contiguous","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if ndims != 0\nelse\n  return true\nend\nif ndims == 1\n  return (shape[0] == 1) || (strides[0] == 1)\nend\nsd = 1\nndims.times do |i|\n  dim = shape[i]\n  if dim != 0\n  else\n    return true\n  end\n  if strides[i] == sd\n  else\n    return false\n  end\n  sd = sd * dim\nend\ntrue\n"}},{"id":"ndims:Int32-instance-method","html_id":"ndims:Int32-instance-method","name":"ndims","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L30","def":{"name":"ndims","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@ndims"}},{"id":"shape:Array(Int32)-instance-method","html_id":"shape:Array(Int32)-instance-method","name":"shape","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L28","def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@shape"}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L40","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"storage-instance-method","html_id":"storage-instance-method","name":"storage","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L35","def":{"name":"storage","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"strides:Array(Int32)-instance-method","html_id":"strides:Array(Int32)-instance-method","name":"strides","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L29","def":{"name":"strides","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@strides"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/array.cr#L39","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/AxisError","path":"NumInternal/AxisError.html","kind":"class","full_name":"NumInternal::AxisError","name":"AxisError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":37,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/AxisIter","path":"NumInternal/AxisIter.html","kind":"struct","full_name":"NumInternal::AxisIter(T)","name":"AxisIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/axes.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T),axis:Int32=-1,keepdims=false)-class-method","html_id":"new(arr:AnyArray(T),axis:Int32=-1,keepdims=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(arr : AnyArray(T), axis : Int32 = <span class=\"n\">-1</span>, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr#L14","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = AxisIter(T).allocate\n_.initialize(arr, axis, keepdims)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr#L40","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @yielded >= @total\n  stop\nelse\n  ret = @tmp\n  @yielded = @yielded + 1\n  @ptr = @ptr + @inc\n  @tmp = Tensor.new(@ptr, @shape, @strides)\n  ret\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ClInfo","path":"NumInternal/ClInfo.html","kind":"struct","full_name":"NumInternal::ClInfo","name":"ClInfo","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cltensor/global.cr","line_number":24,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(device:LibCL::ClDeviceId,context:LibCL::ClContext,queue:LibCL::ClCommandQueue)-class-method","html_id":"new(device:LibCL::ClDeviceId,context:LibCL::ClContext,queue:LibCL::ClCommandQueue)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":"LibCL::ClDeviceId"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"LibCL::ClContext"},{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"LibCL::ClCommandQueue"}],"args_string":"(device : LibCL::ClDeviceId, context : LibCL::ClContext, queue : LibCL::ClCommandQueue)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr#L29","def":{"name":"new","args":[{"name":"device","doc":null,"default_value":"","external_name":"device","restriction":"LibCL::ClDeviceId"},{"name":"context","doc":null,"default_value":"","external_name":"context","restriction":"LibCL::ClContext"},{"name":"queue","doc":null,"default_value":"","external_name":"queue","restriction":"LibCL::ClCommandQueue"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(device, context, queue)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"context:LibCL::ClContext-instance-method","html_id":"context:LibCL::ClContext-instance-method","name":"context","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCL::ClContext","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr#L26","def":{"name":"context","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCL::ClContext","visibility":"Public","body":"@context"}},{"id":"device:LibCL::ClDeviceId-instance-method","html_id":"device:LibCL::ClDeviceId-instance-method","name":"device","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCL::ClDeviceId","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr#L25","def":{"name":"device","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCL::ClDeviceId","visibility":"Public","body":"@device"}},{"id":"queue:LibCL::ClCommandQueue-instance-method","html_id":"queue:LibCL::ClCommandQueue-instance-method","name":"queue","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : LibCL::ClCommandQueue","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/global.cr#L27","def":{"name":"queue","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibCL::ClCommandQueue","visibility":"Public","body":"@queue"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ClStorage","path":"NumInternal/ClStorage.html","kind":"struct","full_name":"NumInternal::ClStorage(T)","name":"ClStorage","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/NumInternal/StorageBase","kind":"struct","full_name":"NumInternal::StorageBase","name":"StorageBase"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/StorageBase","kind":"struct","full_name":"NumInternal::StorageBase","name":"StorageBase"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cltensor/storage.cr","line_number":29,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(size:Int32,offset:Int32=0)-class-method","html_id":"new(size:Int32,offset:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"args_string":"(size : Int32, offset : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L34","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClStorage(T).allocate\n_.initialize(size, offset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int32,value:T,offset:Int32=0)-class-method","html_id":"new(size:Int32,value:T,offset:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"args_string":"(size : Int32, value : T, offset : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L38","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ClStorage(T).allocate\n_.initialize(size, value, offset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L43","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T"}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L47","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Cl.release_buffer(@raw)"}},{"id":"offset:Int32-instance-method","html_id":"offset:Int32-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L32","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@offset"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L31","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/cltensor/storage.cr#L51","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ContigFlatIter","path":"NumInternal/ContigFlatIter.html","kind":"struct","full_name":"NumInternal::ContigFlatIter(T)","name":"ContigFlatIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/flat.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T))-class-method","html_id":"new(arr:AnyArray(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"args_string":"(arr : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr#L10","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ContigFlatIter(T).allocate\n_.initialize(arr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr#L17","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = @ptr\nif @offset < @size\n  @offset = @offset + 1\n  @ptr = @ptr + @step\n  return ret\nelse\n  return stop\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ContigFlatIter2","path":"NumInternal/ContigFlatIter2.html","kind":"struct","full_name":"NumInternal::ContigFlatIter2(T, U)","name":"ContigFlatIter2","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":160,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L160","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ContigFlatIter2(T, U).allocate\n_.initialize(a, b)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L160","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret_a = @ptr_a\nret_b = @ptr_b\nif @offset < @size\n  @offset = @offset + 1\n  @ptr_a = @ptr_a + 1\n  @ptr_b = @ptr_b + 1\n  {ret_a, ret_b}\nelse\n  stop\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ContigFlatIter3","path":"NumInternal/ContigFlatIter3.html","kind":"struct","full_name":"NumInternal::ContigFlatIter3(T, U, V)","name":"ContigFlatIter3","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":161,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L161","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ContigFlatIter3(T, U, V).allocate\n_.initialize(a, b, c)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L161","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret_a = @ptr_a\nret_b = @ptr_b\nret_c = @ptr_c\nif @offset < @size\n  @offset = @offset + 1\n  @ptr_a = @ptr_a + 1\n  @ptr_b = @ptr_b + 1\n  @ptr_c = @ptr_c + 1\n  {ret_a, ret_b, ret_c}\nelse\n  stop\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ContigFlatIter4","path":"NumInternal/ContigFlatIter4.html","kind":"struct","full_name":"NumInternal::ContigFlatIter4(T, U, V, W)","name":"ContigFlatIter4","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":162,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V), d : AnyArray(W))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L162","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = ContigFlatIter4(T, U, V, W).allocate\n_.initialize(a, b, c, d)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L162","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret_a = @ptr_a\nret_b = @ptr_b\nret_c = @ptr_c\nret_d = @ptr_d\nif @offset < @size\n  @offset = @offset + 1\n  @ptr_a = @ptr_a + 1\n  @ptr_b = @ptr_b + 1\n  @ptr_c = @ptr_c + 1\n  @ptr_d = @ptr_d + 1\n  {ret_a, ret_b, ret_c, ret_d}\nelse\n  stop\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/CpuStorage","path":"NumInternal/CpuStorage.html","kind":"struct","full_name":"NumInternal::CpuStorage(T)","name":"CpuStorage","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/NumInternal/StorageBase","kind":"struct","full_name":"NumInternal::StorageBase","name":"StorageBase"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/StorageBase","kind":"struct","full_name":"NumInternal::StorageBase","name":"StorageBase"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"array/storage.cr","line_number":26,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(raw:Pointer(T),size:Int32,offset:Int32=0)-class-method","html_id":"new(raw:Pointer(T),size:Int32,offset:Int32=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Pointer(T)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"args_string":"(raw : Pointer(T), size : Int32, offset : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L39","def":{"name":"new","args":[{"name":"raw","doc":null,"default_value":"","external_name":"raw","restriction":"Pointer(T)"},{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"offset","doc":null,"default_value":"0","external_name":"offset","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CpuStorage(T).allocate\n_.initialize(raw, size, offset)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int32,initial:T)-class-method","html_id":"new(size:Int32,initial:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"initial","doc":null,"default_value":"","external_name":"initial","restriction":"T"}],"args_string":"(size : Int32, initial : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L35","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"},{"name":"initial","doc":null,"default_value":"","external_name":"initial","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CpuStorage(T).allocate\n_.initialize(size, initial)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L31","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = CpuStorage(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L46","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"CpuStorage(T).new(@raw.clone, @size, @offset)"}},{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L42","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"T"}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L54","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw.free"}},{"id":"offset:Int32-instance-method","html_id":"offset:Int32-instance-method","name":"offset","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L28","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@offset"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L29","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/storage.cr#L50","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@raw"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/IndexError","path":"NumInternal/IndexError.html","kind":"class","full_name":"NumInternal::IndexError","name":"IndexError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":28,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/LapackHelper","path":"NumInternal/LapackHelper.html","kind":"module","full_name":"NumInternal::LapackHelper","name":"LapackHelper","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"tensor/extension.cr","line_number":4,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/extension.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"ARG_INTOUT","name":"ARG_INTOUT","value":"2","doc":null,"summary":null},{"id":"ARG_MATRIX","name":"ARG_MATRIX","value":"1","doc":null,"summary":null},{"id":"ARG_NORMAL","name":"ARG_NORMAL","value":"0","doc":null,"summary":null},{"id":"WORK_DETECT","name":"WORK_DETECT","value":"1","doc":null,"summary":null},{"id":"WORK_DETECT_SPECIAL","name":"WORK_DETECT_SPECIAL","value":"2","doc":null,"summary":null},{"id":"WORK_EMPTY","name":"WORK_EMPTY","value":"3","doc":null,"summary":null},{"id":"WORK_NONE","name":"WORK_NONE","value":"0","doc":null,"summary":null},{"id":"WORK_PARAM1","name":"WORK_PARAM1","value":"4","doc":null,"summary":null},{"id":"WORK_PARAM2","name":"WORK_PARAM2","value":"5","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/MatrixIter","path":"NumInternal/MatrixIter.html","kind":"struct","full_name":"NumInternal::MatrixIter(T)","name":"MatrixIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/matrix.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(tns:AnyArray(T))-class-method","html_id":"new(tns:AnyArray(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"tns","doc":null,"default_value":"","external_name":"tns","restriction":"AnyArray(T)"}],"args_string":"(tns : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L11","def":{"name":"new","args":[{"name":"tns","doc":null,"default_value":"","external_name":"tns","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = MatrixIter(T).allocate\n_.initialize(tns)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"axis:Int32-instance-method","html_id":"axis:Int32-instance-method","name":"axis","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L6","def":{"name":"axis","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@axis"}},{"id":"dim:Int32-instance-method","html_id":"dim:Int32-instance-method","name":"dim","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L7","def":{"name":"dim","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@dim"}},{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L23","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @idx == @dim\n  return stop\nend\n@ranges[axis] = @idx\n@idx = @idx + 1\ntns[@ranges]\n"}},{"id":"ranges:Array(Int32|Range(Int32,Int32))-instance-method","html_id":"ranges:Array(Int32|Range(Int32,Int32))-instance-method","name":"ranges","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32 | Range(Int32, Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L8","def":{"name":"ranges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32 | Range(Int32, Int32))","visibility":"Public","body":"@ranges"}},{"id":"tns:AnyArray(T)-instance-method","html_id":"tns:AnyArray(T)-instance-method","name":"tns","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : AnyArray(T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/matrix.cr#L5","def":{"name":"tns","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"AnyArray(T)","visibility":"Public","body":"@tns"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/NDFlatIter","path":"NumInternal/NDFlatIter.html","kind":"struct","full_name":"NumInternal::NDFlatIter(T)","name":"NDFlatIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/nd.cr","line_number":3,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T))-class-method","html_id":"new(arr:AnyArray(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"args_string":"(arr : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr#L11","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NDFlatIter(T).allocate\n_.initialize(arr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr#L25","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @done\n  return stop\nend\nret = @ptr\n@dim.step(to: 0, by: -1) do |i|\n  __temp_26 = i\n  @track[__temp_26] = @track[__temp_26] + 1\n  shape_i = @shape[i]\n  stride_i = @strides[i]\n  if @track[i] == shape_i\n    if i == 0\n      @done = true\n    end\n    @track[i] = 0\n    @ptr = @ptr - ((shape_i - 1) * stride_i)\n    next\n  end\n  @ptr = @ptr + stride_i\n  break\nend\nret\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/NDFlatIter2","path":"NumInternal/NDFlatIter2.html","kind":"struct","full_name":"NumInternal::NDFlatIter2(T, U)","name":"NDFlatIter2","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":160,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":"The primary N-dimensional iterator through any ndarrays.\nthis will always iterate in row-major order, regardless of the\nunderlying strides or memory layout of the array.","summary":"<p>The primary N-dimensional iterator through any ndarrays.</p>","class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L160","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NDFlatIter2(T, U).allocate\n_.initialize(a, b)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"The step of the iterator, walks through each step of an ndarray in\nrow major order","summary":"<p>The step of the iterator, walks through each step of an ndarray in row major order</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L160","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @done\n  return stop\nend\nret_a = @ptr_a\nret_b = @ptr_b\n@dim.step(to: 0, by: -1) do |k|\n  if @coord[k] < (@shape[k] - 1)\n    __temp_30 = k\n    @coord[__temp_30] = @coord[__temp_30] + 1\n    @ptr_a = @ptr_a + @strides_a[k]\n    @ptr_b = @ptr_b + @strides_b[k]\n    break\n  else\n    if k == 0\n      @done = true\n    end\n    @coord[k] = 0\n    @ptr_a = @ptr_a - @backstrides_a[k]\n    @ptr_b = @ptr_b - @backstrides_b[k]\n  end\nend\n{ret_a, ret_b}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/NDFlatIter3","path":"NumInternal/NDFlatIter3.html","kind":"struct","full_name":"NumInternal::NDFlatIter3(T, U, V)","name":"NDFlatIter3","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":161,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":"The primary N-dimensional iterator through any ndarrays.\nthis will always iterate in row-major order, regardless of the\nunderlying strides or memory layout of the array.","summary":"<p>The primary N-dimensional iterator through any ndarrays.</p>","class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L161","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NDFlatIter3(T, U, V).allocate\n_.initialize(a, b, c)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"The step of the iterator, walks through each step of an ndarray in\nrow major order","summary":"<p>The step of the iterator, walks through each step of an ndarray in row major order</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L161","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @done\n  return stop\nend\nret_a = @ptr_a\nret_b = @ptr_b\nret_c = @ptr_c\n@dim.step(to: 0, by: -1) do |k|\n  if @coord[k] < (@shape[k] - 1)\n    __temp_32 = k\n    @coord[__temp_32] = @coord[__temp_32] + 1\n    @ptr_a = @ptr_a + @strides_a[k]\n    @ptr_b = @ptr_b + @strides_b[k]\n    @ptr_c = @ptr_c + @strides_c[k]\n    break\n  else\n    if k == 0\n      @done = true\n    end\n    @coord[k] = 0\n    @ptr_a = @ptr_a - @backstrides_a[k]\n    @ptr_b = @ptr_b - @backstrides_b[k]\n    @ptr_c = @ptr_c - @backstrides_c[k]\n  end\nend\n{ret_a, ret_b, ret_c}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/NDFlatIter4","path":"NumInternal/NDFlatIter4.html","kind":"struct","full_name":"NumInternal::NDFlatIter4(T, U, V, W)","name":"NDFlatIter4","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/macro.cr","line_number":162,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":"The primary N-dimensional iterator through any ndarrays.\nthis will always iterate in row-major order, regardless of the\nunderlying strides or memory layout of the array.","summary":"<p>The primary N-dimensional iterator through any ndarrays.</p>","class_methods":[],"constructors":[{"id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))-class-method","html_id":"new(a:AnyArray(T),b:AnyArray(U),c:AnyArray(V),d:AnyArray(W))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"args_string":"(a : AnyArray(T), b : AnyArray(U), c : AnyArray(V), d : AnyArray(W))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L162","def":{"name":"new","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"AnyArray(T)"},{"name":"b","doc":null,"default_value":"","external_name":"b","restriction":"AnyArray(U)"},{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"AnyArray(V)"},{"name":"d","doc":null,"default_value":"","external_name":"d","restriction":"AnyArray(W)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = NDFlatIter4(T, U, V, W).allocate\n_.initialize(a, b, c, d)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"The step of the iterator, walks through each step of an ndarray in\nrow major order","summary":"<p>The step of the iterator, walks through each step of an ndarray in row major order</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/macro.cr#L162","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @done\n  return stop\nend\nret_a = @ptr_a\nret_b = @ptr_b\nret_c = @ptr_c\nret_d = @ptr_d\n@dim.step(to: 0, by: -1) do |k|\n  if @coord[k] < (@shape[k] - 1)\n    __temp_34 = k\n    @coord[__temp_34] = @coord[__temp_34] + 1\n    @ptr_a = @ptr_a + @strides_a[k]\n    @ptr_b = @ptr_b + @strides_b[k]\n    @ptr_c = @ptr_c + @strides_c[k]\n    @ptr_d = @ptr_d + @strides_d[k]\n    break\n  else\n    if k == 0\n      @done = true\n    end\n    @coord[k] = 0\n    @ptr_a = @ptr_a - @backstrides_a[k]\n    @ptr_b = @ptr_b - @backstrides_b[k]\n    @ptr_c = @ptr_c - @backstrides_c[k]\n    @ptr_d = @ptr_d - @backstrides_d[k]\n  end\nend\n{ret_a, ret_b, ret_c, ret_d}\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/NotImplementedError","path":"NumInternal/NotImplementedError.html","kind":"class","full_name":"NumInternal::NotImplementedError","name":"NotImplementedError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":25,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ShapeError","path":"NumInternal/ShapeError.html","kind":"class","full_name":"NumInternal::ShapeError","name":"ShapeError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":34,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/StorageBase","path":"NumInternal/StorageBase.html","kind":"struct","full_name":"NumInternal::StorageBase(T)","name":"StorageBase","abstract":true,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/storage.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/crystal-data/num.cr/NumInternal/ClStorage","kind":"struct","full_name":"NumInternal::ClStorage(T)","name":"ClStorage"},{"html_id":"github.com/crystal-data/num.cr/NumInternal/CpuStorage","kind":"struct","full_name":"NumInternal::CpuStorage(T)","name":"CpuStorage"}],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":"Abstract class defining a generic storage object.\nAll tensors have their data managed by an instance\nof a storange object","summary":"<p>Abstract class defining a generic storage object.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L27","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[{"id":"dtype-instance-method","html_id":"dtype-instance-method","name":"dtype","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L28","def":{"name":"dtype","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"free-instance-method","html_id":"free-instance-method","name":"free","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L29","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"offset-instance-method","html_id":"offset-instance-method","name":"offset","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L31","def":{"name":"offset","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"size-instance-method","html_id":"size-instance-method","name":"size","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L32","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"to_unsafe-instance-method","html_id":"to_unsafe-instance-method","name":"to_unsafe","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/storage.cr#L30","def":{"name":"to_unsafe","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/TypeError","path":"NumInternal/TypeError.html","kind":"class","full_name":"NumInternal::TypeError","name":"TypeError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":43,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/UnsafeAxisIter","path":"NumInternal/UnsafeAxisIter.html","kind":"struct","full_name":"NumInternal::UnsafeAxisIter(T)","name":"UnsafeAxisIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/axes.cr","line_number":53,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T),axis:Int32=-1,keepdims=false)-class-method","html_id":"new(arr:AnyArray(T),axis:Int32=-1,keepdims=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"args_string":"(arr : AnyArray(T), axis : Int32 = <span class=\"n\">-1</span>, keepdims = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr#L62","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"},{"name":"axis","doc":null,"default_value":"-1","external_name":"axis","restriction":"Int32"},{"name":"keepdims","doc":null,"default_value":"false","external_name":"keepdims","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UnsafeAxisIter(T).allocate\n_.initialize(arr, axis, keepdims)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/axes.cr#L85","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = @tmp\n@ptr = @ptr + @inc\n@tmp = Tensor.new(@ptr, @shape, @strides)\nret\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/UnsafeContigFlatIter","path":"NumInternal/UnsafeContigFlatIter.html","kind":"struct","full_name":"NumInternal::UnsafeContigFlatIter(T)","name":"UnsafeContigFlatIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/flat.cr","line_number":29,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T))-class-method","html_id":"new(arr:AnyArray(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"args_string":"(arr : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr#L36","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UnsafeContigFlatIter(T).allocate\n_.initialize(arr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/flat.cr#L43","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = @ptr\n@ptr = @ptr + @step\nret\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/UnsafeNDFlatIter","path":"NumInternal/UnsafeNDFlatIter.html","kind":"struct","full_name":"NumInternal::UnsafeNDFlatIter(T)","name":"UnsafeNDFlatIter","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/crystal-data/num.cr/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/crystal-data/num.cr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"iter/nd.cr","line_number":51,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/crystal-data/num.cr/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(arr:AnyArray(T))-class-method","html_id":"new(arr:AnyArray(T))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"args_string":"(arr : AnyArray(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr#L59","def":{"name":"new","args":[{"name":"arr","doc":null,"default_value":"","external_name":"arr","restriction":"AnyArray(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UnsafeNDFlatIter(T).allocate\n_.initialize(arr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/iter/nd.cr#L72","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = @ptr\n@dim.step(to: 0, by: -1) do |i|\n  __temp_28 = i\n  @track[__temp_28] = @track[__temp_28] + 1\n  shape_i = @shape[i]\n  stride_i = @strides[i]\n  if @track[i] == shape_i\n    @track[i] = 0\n    @ptr = @ptr - ((shape_i - 1) * stride_i)\n    next\n  end\n  @ptr = @ptr + stride_i\n  break\nend\nret\n"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/ValueError","path":"NumInternal/ValueError.html","kind":"class","full_name":"NumInternal::ValueError","name":"ValueError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":31,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/NumInternal/WriteError","path":"NumInternal/WriteError.html","kind":"class","full_name":"NumInternal::WriteError","name":"WriteError","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"base/exceptions.cr","line_number":40,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/base/exceptions.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/crystal-data/num.cr/NumInternal","kind":"module","full_name":"NumInternal","name":"NumInternal"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"github.com/crystal-data/num.cr/Tensor","path":"Tensor.html","kind":"class","full_name":"Tensor(T)","name":"Tensor","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/AnyArray","kind":"class","full_name":"AnyArray","name":"AnyArray"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/AnyArray","kind":"class","full_name":"AnyArray","name":"AnyArray"},{"html_id":"github.com/crystal-data/num.cr/NumInternal/AnyTensor","kind":"class","full_name":"NumInternal::AnyTensor","name":"AnyTensor"},{"html_id":"github.com/crystal-data/num.cr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"tensor/tensor.cr","line_number":31,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr"},{"filename":"tensor/creation.cr","line_number":27,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr"},{"filename":"tensor/extension.cr","line_number":16,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/extension.cr"},{"filename":"tensor/linalg.cr","line_number":5,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr"},{"filename":"tensor/manipulate.cr","line_number":24,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[{"id":"diag(a:Tensor(T),k:Int32=0)-class-method","html_id":"diag(a:Tensor(T),k:Int32=0)-class-method","name":"diag","doc":null,"summary":null,"abstract":false,"args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor(T)"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int32"}],"args_string":"(a : Tensor(T), k : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L147","def":{"name":"diag","args":[{"name":"a","doc":null,"default_value":"","external_name":"a","restriction":"Tensor(T)"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if a.ndims > 1\n  raise(\"Only 1 dimensional Tensors are supported\")\nend\niter = NumInternal::UnsafeNDFlatIter.new(a)\nTensor(T).new(a.shape[0], a.shape[0]) do |i, j|\n  i == (j - k) ? iter.next.value : T.new(0)\nend\n"}},{"id":"eye(m:Int,n:Int?=nil,k:Int=0)-class-method","html_id":"eye(m:Int,n:Int?=nil,k:Int=0)-class-method","name":"eye","doc":null,"summary":null,"abstract":false,"args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"nil","external_name":"n","restriction":"Int | ::Nil"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int"}],"args_string":"(m : Int, n : Int? = <span class=\"n\">nil</span>, k : Int = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L133","def":{"name":"eye","args":[{"name":"m","doc":null,"default_value":"","external_name":"m","restriction":"Int"},{"name":"n","doc":null,"default_value":"nil","external_name":"n","restriction":"Int | ::Nil"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n = n.nil? ? m : n.as(Int32)\nTensor.new(Int32.new(m), n) do |i, j|\n  i == (j - k) ? T.new(1) : T.new(0)\nend\n"}},{"id":"from_range(rng:Range(T,T))-class-method","html_id":"from_range(rng:Range(T,T))-class-method","name":"from_range","doc":null,"summary":null,"abstract":false,"args":[{"name":"rng","doc":null,"default_value":"","external_name":"rng","restriction":"Range(T, T)"}],"args_string":"(rng : Range(T, T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L128","def":{"name":"from_range","args":[{"name":"rng","doc":null,"default_value":"","external_name":"rng","restriction":"Range(T, T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"last = rng.excludes_end? ? rng.end : rng.end + (T.new(1))\nself.range(rng.begin, last, T.new(1))\n"}},{"id":"full(shape:Array(Int32),value:Number)-class-method","html_id":"full(shape:Array(Int32),value:Number)-class-method","name":"full","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"args_string":"(shape : Array(Int32), value : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L57","def":{"name":"full","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(shape, T.new(value))"}},{"id":"full_like(other:NumInternal::AnyTensor,value:Number)-class-method","html_id":"full_like(other:NumInternal::AnyTensor,value:Number)-class-method","name":"full_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"args_string":"(other : NumInternal::AnyTensor, value : Number)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L61","def":{"name":"full_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Number"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(other.shape, T.new(value))"}},{"id":"geometric_space(start,stop,num=50,endpoint=true)-class-method","html_id":"geometric_space(start,stop,num=50,endpoint=true)-class-method","name":"geometric_space","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""}],"args_string":"(start, stop, num = <span class=\"n\">50</span>, endpoint = <span class=\"n\">true</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L110","def":{"name":"geometric_space","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (start == 0) || (stop == 0)\n  raise(NumInternal::ValueError.new(\"Geometric sequence cannot include zero\"))\nend\nout_sign = 1.0\nif start < 0 && stop < 0\n  start, stop = -start, -stop\n  out_sign = -out_sign\nend\nlog_start = Math.log(start, 10.0)\nlog_stop = Math.log(stop, 10.0)\n(Tensor.logarithmic_space(log_start, log_stop, num: num, endpoint: endpoint, base: 10.0)) * out_sign\n"}},{"id":"identity(n:Int)-class-method","html_id":"identity(n:Int)-class-method","name":"identity","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"args_string":"(n : Int)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L140","def":{"name":"identity","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"n32 = Int32.new(n)\nTensor.new(n32, n32) do |i, j|\n  i == j ? T.new(1) : T.new(0)\nend\n"}},{"id":"linear_space(start:Number,stop:Number,num=50,endpoint=true)-class-method","html_id":"linear_space(start:Number,stop:Number,num=50,endpoint=true)-class-method","name":"linear_space","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Number"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"Number"},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""}],"args_string":"(start : Number, stop : Number, num = <span class=\"n\">50</span>, endpoint = <span class=\"n\">true</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L82","def":{"name":"linear_space","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Number"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"Number"},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if num > 0\nelse\n  raise(NumInternal::ValueError.new(\"Number of samples must be non-negative\"))\nend\ndiv = endpoint ? num - 1 : num\nstart = start * 1.0\nstop = stop * 1.0\ny = Tensor.range(Float64.new(num))\ndelta = stop - start\nif num > 1\n  step = delta / div\n  if step == 0\n    raise(NumInternal::ValueError.new(\"Cannot have a step of 0\"))\n  end\n  y = y * step\nelse\n  y = y * delta\nend\ny = y + start\nif endpoint && num > 1\n  y[y.shape[0] - 1] = stop\nend\ny\n"}},{"id":"logarithmic_space(start,stop,num=50,endpoint=true,base=10.0)-class-method","html_id":"logarithmic_space(start,stop,num=50,endpoint=true,base=10.0)-class-method","name":"logarithmic_space","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""},{"name":"base","doc":null,"default_value":"10.0","external_name":"base","restriction":""}],"args_string":"(start, stop, num = <span class=\"n\">50</span>, endpoint = <span class=\"n\">true</span>, base = <span class=\"n\">10.0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L105","def":{"name":"logarithmic_space","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":""},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":""},{"name":"num","doc":null,"default_value":"50","external_name":"num","restriction":""},{"name":"endpoint","doc":null,"default_value":"true","external_name":"endpoint","restriction":""},{"name":"base","doc":null,"default_value":"10.0","external_name":"base","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"y = Tensor.linear_space(start, stop, num: num, endpoint: endpoint)\nbase ** y\n"}},{"id":"ones(shape:Array(Int32))-class-method","html_id":"ones(shape:Array(Int32))-class-method","name":"ones","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L49","def":{"name":"ones","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(shape, T.new(1))"}},{"id":"ones_like(other:NumInternal::AnyTensor)-class-method","html_id":"ones_like(other:NumInternal::AnyTensor)-class-method","name":"ones_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"args_string":"(other : NumInternal::AnyTensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L53","def":{"name":"ones_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(other.shape, T.new(1))"}},{"id":"random(r:Range(U,U),_shape:Array(Int32))forallU-class-method","html_id":"random(r:Range(U,U),_shape:Array(Int32))forallU-class-method","name":"random","doc":"A flexible method to create `Tensor`'s of arbitrary shapes\nfilled with random values of arbitrary types.  Since\nRanges can contain any dtype, the type of tensor is\ninferred from the passed range, and a new `Tensor` is\nsampled using the provided shape.","summary":"<p>A flexible method to create <code><a href=\"Tensor.html\">Tensor</a></code>'s of arbitrary shapes filled with random values of arbitrary types.</p>","abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Range(U, U)"},{"name":"_shape","doc":null,"default_value":"","external_name":"_shape","restriction":"Array(Int32)"}],"args_string":"(r : Range(U, U), _shape : Array(Int32)) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L33","def":{"name":"random","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Range(U, U)"},{"name":"_shape","doc":null,"default_value":"","external_name":"_shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if _shape.size == 0\n  Tensor(U).new(_shape)\nelse\n  new(_shape) do |_|\n    Random.rand(r)\n  end\nend"}},{"id":"range(stop:T)-class-method","html_id":"range(stop:T)-class-method","name":"range","doc":null,"summary":null,"abstract":false,"args":[{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"}],"args_string":"(stop : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L74","def":{"name":"range","args":[{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.range(T.new(0), stop, T.new(1))"}},{"id":"range(start:T,stop:T)-class-method","html_id":"range(start:T,stop:T)-class-method","name":"range","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"T"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"}],"args_string":"(start : T, stop : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L78","def":{"name":"range","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"T"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor.range(start, stop, T.new(1))"}},{"id":"range(start:T,stop:T,step:T)-class-method","html_id":"range(start:T,stop:T,step:T)-class-method","name":"range","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"T"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":"T"}],"args_string":"(start : T, stop : T, step : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L65","def":{"name":"range","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"T"},{"name":"stop","doc":null,"default_value":"","external_name":"stop","restriction":"T"},{"name":"step","doc":null,"default_value":"","external_name":"step","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if start > stop && step > 0\n  raise(NumInternal::ValueError.new(\"Range must return at at least one value\"))\nend\nr = (stop - start)\nnum = (r / step).ceil.abs\nTensor.new([Int32.new(num)]) do |i|\n  T.new(start + (i * step))\nend\n"}},{"id":"tri(n:Int32,m:Int32?=nil,k:Int32=0)-class-method","html_id":"tri(n:Int32,m:Int32?=nil,k:Int32=0)-class-method","name":"tri","doc":null,"summary":null,"abstract":false,"args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"m","doc":null,"default_value":"nil","external_name":"m","restriction":"Int32 | ::Nil"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int32"}],"args_string":"(n : Int32, m : Int32? = <span class=\"n\">nil</span>, k : Int32 = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L169","def":{"name":"tri","args":[{"name":"n","doc":null,"default_value":"","external_name":"n","restriction":"Int32"},{"name":"m","doc":null,"default_value":"nil","external_name":"m","restriction":"Int32 | ::Nil"},{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(n, m.nil? ? n : m.as(Int32)) do |i, j|\n  i >= (j - k) ? T.new(1) : T.new(0)\nend"}},{"id":"vander(x:Tensor(T),n:Int32?=nil,increasing:Bool=false)-class-method","html_id":"vander(x:Tensor(T),n:Int32?=nil,increasing:Bool=false)-class-method","name":"vander","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Tensor(T)"},{"name":"n","doc":null,"default_value":"nil","external_name":"n","restriction":"Int32 | ::Nil"},{"name":"increasing","doc":null,"default_value":"false","external_name":"increasing","restriction":"Bool"}],"args_string":"(x : Tensor(T), n : Int32? = <span class=\"n\">nil</span>, increasing : Bool = <span class=\"n\">false</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L157","def":{"name":"vander","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Tensor(T)"},{"name":"n","doc":null,"default_value":"nil","external_name":"n","restriction":"Int32 | ::Nil"},{"name":"increasing","doc":null,"default_value":"false","external_name":"increasing","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if x.ndims > 1\n  raise(NumInternal::ShapeError.new(\"Vandermonde matrices must\\n        be initialized with a one-dimensional Tensor\"))\nend\nn = n.nil? ? x.size : n.as(Int32)\nTensor(T).new(x.size, n) do |i, j|\n  offset = increasing ? j : (n - j) - 1\n  x[i].value ** offset\nend\n"}},{"id":"zeros(shape:Array(Int32))-class-method","html_id":"zeros(shape:Array(Int32))-class-method","name":"zeros","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"args_string":"(shape : Array(Int32))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L41","def":{"name":"zeros","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(shape, T.new(0))"}},{"id":"zeros_like(other:NumInternal::AnyTensor)-class-method","html_id":"zeros_like(other:NumInternal::AnyTensor)-class-method","name":"zeros_like","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"args_string":"(other : NumInternal::AnyTensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/creation.cr#L45","def":{"name":"zeros_like","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"NumInternal::AnyTensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(T).new(other.shape, T.new(0))"}}],"constructors":[{"id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor,&block:Int32->T)-class-method","html_id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor,&amp;block:Int32-&gt;T)-class-method","name":"new","doc":"Yields an array from a provided shape and a block.  The block only\nprovides the absolute index, not an index dependent on the shape,\nso if a user wants to handle an arbitrary shape inside the block\nthey need to do that themselves.","summary":"<p>Yields an array from a provided shape and a block.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>, &block : Int32 -> T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L168","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32 -> T)"},"return_type":"","visibility":"Public","body":"size = shape.product\nptr = Pointer(T).malloc(size) do |i|\n  yield i\nend\nstrides = NumInternal.shape_to_strides(shape, order)\nnew(ptr, shape, strides)\n"}},{"id":"new(scalar:T)-class-method","html_id":"new(scalar:T)-class-method","name":"new","doc":"Crates a scalar tensor, that acts like a scalar while still being\na Tensor.  This was primarily added so that indexing operations\ncould return single elements without having a union return type.","summary":"<p>Crates a scalar tensor, that acts like a scalar while still being a Tensor.</p>","abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"T"}],"args_string":"(scalar : T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L155","def":{"name":"new","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tensor(T).allocate\n_.initialize(scalar)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),value:T,order:Num::OrderType=Num::RowMajor)-class-method","html_id":"new(shape:Array(Int32),value:T,order:Num::OrderType=Num::RowMajor)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), value : T, order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L125","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"T"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tensor(T).allocate\n_.initialize(shape, value, order)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor)-class-method","html_id":"new(shape:Array(Int32),order:Num::OrderType=Num::RowMajor)-class-method","name":"new","doc":"Initializes an ndarray from a provided shape and memory layout.\nFlags will be auto-computed","summary":"<p>Initializes an ndarray from a provided shape and memory layout.</p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"args_string":"(shape : Array(Int32), order : Num::OrderType = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">RowMajor</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L109","def":{"name":"new","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Array(Int32)"},{"name":"order","doc":null,"default_value":"Num::RowMajor","external_name":"order","restriction":"Num::OrderType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tensor(T).allocate\n_.initialize(shape, order)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(buffer:Pointer(T),shape,strides,flags=Num::ArrayFlags::All)-class-method","html_id":"new(buffer:Pointer(T),shape,strides,flags=Num::ArrayFlags::All)-class-method","name":"new","doc":"Initialization method for a generic buffer, shape and strides.\nThis method updates flags on the passed array, if the array\nis read only, its flags need to be updated later","summary":"<p>Initialization method for a generic buffer, shape and strides.</p>","abstract":false,"args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Pointer(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":""},{"name":"flags","doc":null,"default_value":"Num::ArrayFlags::All","external_name":"flags","restriction":""}],"args_string":"(buffer : Pointer(T), shape, strides, flags = <span class=\"t\">Num</span><span class=\"t\">::</span><span class=\"t\">ArrayFlags</span><span class=\"t\">::</span><span class=\"t\">All</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L144","def":{"name":"new","args":[{"name":"buffer","doc":null,"default_value":"","external_name":"buffer","restriction":"Pointer(T)"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""},{"name":"strides","doc":null,"default_value":"","external_name":"strides","restriction":""},{"name":"flags","doc":null,"default_value":"Num::ArrayFlags::All","external_name":"flags","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Tensor(T).allocate\n_.initialize(buffer, shape, strides, flags)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(nrows:Int32,ncols:Int32,&block:Int32,Int32->T)-class-method","html_id":"new(nrows:Int32,ncols:Int32,&amp;block:Int32,Int32-&gt;T)-class-method","name":"new","doc":"Yields an array from a provided number of rows and columns.\nThis can quickly create matrices, useful for several `Tensor` creattion\nmethods such as the underlying implementation of `eye`, and `diag`.\n\nThis method does provide *i* and *j* variables for the passed block,\nso no offset calculations need to be done by the user.","summary":"<p>Yields an array from a provided number of rows and columns.</p>","abstract":false,"args":[{"name":"nrows","doc":null,"default_value":"","external_name":"nrows","restriction":"Int32"},{"name":"ncols","doc":null,"default_value":"","external_name":"ncols","restriction":"Int32"}],"args_string":"(nrows : Int32, ncols : Int32, &block : Int32, Int32 -> T)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/array/array.cr#L183","def":{"name":"new","args":[{"name":"nrows","doc":null,"default_value":"","external_name":"nrows","restriction":"Int32"},{"name":"ncols","doc":null,"default_value":"","external_name":"ncols","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Int32, Int32 -> T)"},"return_type":"","visibility":"Public","body":"data = Pointer(T).malloc(nrows * ncols) do |idx|\n  i = idx // ncols\n  j = idx % ncols\n  yield i, j\nend\nif (nrows == 0) || (ncols == 0)\n  raise(NumInternal::ShapeError.new(\"Cannot initialize an empty matrix\"))\nend\nstrides = NumInternal.shape_to_strides([nrows, ncols], Num::RowMajor)\nnew(data, [nrows, ncols], strides)\n"}}],"instance_methods":[{"id":"!=(other)-instance-method","html_id":"!=(other)-instance-method","name":"!=","doc":"Returns `true` if this object is not equal to *other*.\n\nBy default this method is implemented as `!(self == other)`\nso there's no need to override this unless there's a more efficient\nway to do it.","summary":"<p>Returns <code>true</code> if this object is not equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L103","def":{"name":"!=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.not_equal(self, other)"}},{"id":"&(other)-instance-method","html_id":"&amp;(other)-instance-method","name":"&","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L87","def":{"name":"&","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.bitwise_and(self, other)"}},{"id":"*(other)-instance-method","html_id":"*(other)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L67","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other)-instance-method","html_id":"**(other)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L55","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other)-instance-method","html_id":"+(other)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L59","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other)-instance-method","html_id":"-(other)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L63","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other)-instance-method","html_id":"/(other)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L71","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other)-instance-method","html_id":"//(other)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L75","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other)-instance-method","html_id":"&lt;(other)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L107","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<<(other)-instance-method","html_id":"&lt;&lt;(other)-instance-method","name":"<<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L79","def":{"name":"<<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.left_shift(self, other)"}},{"id":"<=(other)-instance-method","html_id":"&lt;=(other)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L111","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other)-instance-method","html_id":"==(other)-instance-method","name":"==","doc":"Returns `false` (other can only be a `Value` here).","summary":"<p>Returns <code>false</code> (other can only be a <code>Value</code> here).</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L99","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other)-instance-method","html_id":"&gt;(other)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L115","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other)-instance-method","html_id":"&gt;=(other)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L119","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}},{"id":">>(other)-instance-method","html_id":"&gt;&gt;(other)-instance-method","name":">>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L83","def":{"name":">>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.right_shift(self, other)"}},{"id":"^(other)-instance-method","html_id":"^(other)-instance-method","name":"^","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L95","def":{"name":"^","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.bitwise_xor(self, other)"}},{"id":"basetype(t:U.class)forallU-instance-method","html_id":"basetype(t:U.class)forallU-instance-method","name":"basetype","doc":"Returns the basetype of an array with the ability to\noverride the generic type","summary":"<p>Returns the basetype of an array with the ability to override the generic type</p>","abstract":false,"args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"U.class"}],"args_string":"(t : <span class=\"t\">U</span>.<span class=\"k\">class</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L32","def":{"name":"basetype","args":[{"name":"t","doc":null,"default_value":"","external_name":"t","restriction":"U.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Tensor(U)"}},{"id":"bincount(min_count=0)-instance-method","html_id":"bincount(min_count=0)-instance-method","name":"bincount","doc":null,"summary":null,"abstract":false,"args":[{"name":"min_count","doc":null,"default_value":"0","external_name":"min_count","restriction":""}],"args_string":"(min_count = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L79","def":{"name":"bincount","args":[{"name":"min_count","doc":null,"default_value":"0","external_name":"min_count","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @ndims != 1\n  raise(NumInternal::ShapeError.new(\"Input must be 1-dimensional\"))\nend\nsz = Math.max(min_count, (Num.max(self)) + 1)\nret = Pointer(Int32).malloc(sz)\niter.each do |i|\n  val = i.value\n  if val < 0\n    raise(NumInternal::ValueError.new(\"All values must be positive\"))\n  end\n  __temp_43 = i.value\n  ret[__temp_43] = ret[__temp_43] + 1\nend\nTensor.new(ret, [sz], [1])\n"}},{"id":"bincount(weights:Tensor(U),min_count=0)forallU-instance-method","html_id":"bincount(weights:Tensor(U),min_count=0)forallU-instance-method","name":"bincount","doc":null,"summary":null,"abstract":false,"args":[{"name":"weights","doc":null,"default_value":"","external_name":"weights","restriction":"Tensor(U)"},{"name":"min_count","doc":null,"default_value":"0","external_name":"min_count","restriction":""}],"args_string":"(weights : Tensor(U), min_count = <span class=\"n\">0</span>) forall U","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L95","def":{"name":"bincount","args":[{"name":"weights","doc":null,"default_value":"","external_name":"weights","restriction":"Tensor(U)"},{"name":"min_count","doc":null,"default_value":"0","external_name":"min_count","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @ndims != 1\n  raise(NumInternal::ShapeError.new(\"Input must be 1-dimensional\"))\nend\nif @shape != weights.shape\n  raise(\"Weights do not match input\")\nend\nsz = Math.max(min_count, (Num.max(self)) + 1)\nret = Pointer(U).malloc(sz)\n(iter2(weights)).each do |i, j|\n  iv, jv = {i.value, j.value}\n  if iv < 0\n    raise(NumInternal::ValueError.new(\"All values must be positive\"))\n  end\n  __temp_45 = iv\n  ret[__temp_45] = ret[__temp_45] + jv\nend\nTensor.new(ret, [sz], [1])\n"}},{"id":"check_type-instance-method","html_id":"check_type-instance-method","name":"check_type","doc":"This should be overwritten by all base classes.\nDetermines if an array is initialized containing\na valid generic type","summary":"<p>This should be overwritten by all base classes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L36","def":{"name":"check_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{% if ((((((((((T == Float32) || (T == Float64)) || (T == Int16)) || (T == Int32)) || (T == Int8)) || (T == UInt16)) || (T == UInt32)) || (T == UInt64)) || (T == UInt8)) || (T == Bool)) || (T == Complex) %}{% else %}\n      {% raise(\"Bad dtype: #{T}. #{T} is not supported for Tensors\") %}\n    {% end %}"}},{"id":"cholesky(*,lower=true)-instance-method","html_id":"cholesky(*,lower=true)-instance-method","name":"cholesky","doc":"Cholesky decomposition.\n\nReturn the Cholesky decomposition, L * L.H, of the square matrix a, where\nL is lower-triangular and .H is the conjugate transpose operator (which\nis the ordinary transpose if a is real-valued). a must be Hermitian\n(symmetric if real-valued) and positive-definite. Only L is actually\nreturned.\n\n```crystal\nt = Tensor.from_array([[2, -1, 0], [-1, 2, -1], [0, -1, 2]]).astype(Float32)\nputs t.cholesky\n\n# Tensor([[ 1.414,    0.0,    0.0],\n#         [-0.707,  1.225,    0.0],\n#         [   0.0, -0.816,  1.155]])\n```","summary":"<p>Cholesky decomposition.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lower","doc":null,"default_value":"true","external_name":"lower","restriction":""}],"args_string":"(*, lower = <span class=\"n\">true</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L81","def":{"name":"cholesky","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lower","doc":null,"default_value":"true","external_name":"lower","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = dup(Num::ColMajor)\nret.cholesky!\nret\n"}},{"id":"cholesky!(*,lower=true)-instance-method","html_id":"cholesky!(*,lower=true)-instance-method","name":"cholesky!","doc":"Cholesky decomposition.\n\nReturn the Cholesky decomposition, L * L.H, of the square matrix a, where\nL is lower-triangular and .H is the conjugate transpose operator (which\nis the ordinary transpose if a is real-valued). a must be Hermitian\n(symmetric if real-valued) and positive-definite. Only L is actually\nreturned.\n\n```crystal\nt = Tensor.from_array([[2, -1, 0], [-1, 2, -1], [0, -1, 2]]).astype(Float32)\nputs t.cholesky\n\n# Tensor([[ 1.414,    0.0,    0.0],\n#         [-0.707,  1.225,    0.0],\n#         [   0.0, -0.816,  1.155]])\n```","summary":"<p>Cholesky decomposition.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lower","doc":null,"default_value":"true","external_name":"lower","restriction":""}],"args_string":"(*, lower = <span class=\"n\">true</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L58","def":{"name":"cholesky!","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"lower","doc":null,"default_value":"true","external_name":"lower","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\nchar = lower ? 'L' : 'U'\nlapack(potrf, char.ord.to_u8, shape[0], to_unsafe, shape[0])\nlower ? tril! : triu!\n"}},{"id":"det-instance-method","html_id":"det-instance-method","name":"det","doc":"Compute the determinant of an array.\n\n```crystal\nt = Tensor.from_array([[1, 2], [3, 4]]).astype(Float32)\nputs t.det # => -2.0\n```","summary":"<p>Compute the determinant of an array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L274","def":{"name":"det","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nm, n = a.shape\nipiv = Pointer(Int32).malloc(n)\nlapack(getrf, m, n, a.to_unsafe, n, ipiv)\nldet = Num.prod(a.diag_view)\ndetp = 1\nn.times do |j|\n  if (j + 1) != ipiv[j]\n    detp = -detp\n  end\nend\nldet * detp\n"}},{"id":"eig-instance-method","html_id":"eig-instance-method","name":"eig","doc":"Compute the eigenvalues and right eigenvectors of a square array.\n\n```crystal\nt = Tensor.from_array([[0, 1], [1, 1]]).astype(Float32)\nw, v = t.eig\nputs w\nputs v\n\n# Tensor([-0.618,  1.618])\n# Tensor([[-0.851,  0.526],\n#         [ 0.526,  0.851]])\n```","summary":"<p>Compute the eigenvalues and right eigenvectors of a square array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L193","def":{"name":"eig","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nn = a.shape[0]\nwr = Tensor(T).new([n])\nwl = wr.dup\nvl = Tensor(T).new([n, n], ArrayFlags::Fortran)\nvr = wr.dup\nlapack(geev, 'V'.ord.to_u8, 'V'.ord.to_u8, n, a.to_unsafe, n, wr.to_unsafe, wl.to_unsafe, vl.to_unsafe, n, vr.to_unsafe, n, worksize: 3 * n)\n{wr, vl}\n"}},{"id":"eigh-instance-method","html_id":"eigh-instance-method","name":"eigh","doc":"Compute the eigenvalues and right eigenvectors of a square array.\n\n```crystal\nt = Tensor.from_array([[0, 1], [1, 1]]).astype(Float32)\nw, v = t.eigh\nputs w\nputs v\n\n# Tensor([-0.618,  1.618])\n# Tensor([[-0.851,  0.526],\n#         [ 0.526,  0.851]])\n```","summary":"<p>Compute the eigenvalues and right eigenvectors of a square array.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L172","def":{"name":"eigh","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nn = a.shape[0]\nw = Tensor(T).new([n])\nlapack(syev, 'V'.ord.to_u8, 'L'.ord.to_u8, n, a.to_unsafe, n, w.to_unsafe, worksize: (3 * n) - 1)\n{w, a}\n"}},{"id":"eigvals-instance-method","html_id":"eigvals-instance-method","name":"eigvals","doc":"Compute the eigenvalues of a general matrix.\n\nMain difference between eigvals and eig: the eigenvectors aren’t\nreturned.\n\n```\nt = Tensor.from_array([[0, 1], [1, 1]]).astype(Float32)\nputs t.eigvals\n\n# Tensor([-0.618,  1.618])\n```","summary":"<p>Compute the eigenvalues of a general matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L237","def":{"name":"eigvals","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nn = a.shape[0]\nwr = Tensor(T).new([n])\nwl = wr.dup\nvl = Tensor(T).new([n, n])\nvr = wr.dup\nlapack(geev, 'N'.ord.to_u8, 'N'.ord.to_u8, n, a.to_unsafe, n, wr.to_unsafe, wl.to_unsafe, vl.to_unsafe, n, vr.to_unsafe, n, worksize: 3 * n)\nwr\n"}},{"id":"eigvalsh-instance-method","html_id":"eigvalsh-instance-method","name":"eigvalsh","doc":"Compute the eigenvalues of a general matrix.\n\nMain difference between eigvals and eig: the eigenvectors aren’t\nreturned.\n\n```\nt = Tensor.from_array([[0, 1], [1, 1]]).astype(Float32)\nputs t.eigvalsh\n\n# Tensor([-0.618,  1.618])\n```","summary":"<p>Compute the eigenvalues of a general matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L217","def":{"name":"eigvalsh","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nn = a.shape[0]\nw = Tensor(T).new([n])\nlapack(syev, 'N'.ord.to_u8, 'L'.ord.to_u8, n, a.to_unsafe, n, w.to_unsafe, worksize: (3 * n) - 1)\nw\n"}},{"id":"hessenberg-instance-method","html_id":"hessenberg-instance-method","name":"hessenberg","doc":"Compute Hessenberg form of a matrix.\n\nThe Hessenberg decomposition is:\n\n```\nA = Q H Q^H\n```\n\nwhere Q is unitary/orthogonal and H has only zero elements below the first sub-diagonal.","summary":"<p>Compute Hessenberg form of a matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L345","def":{"name":"hessenberg","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nif a.shape[0] < 2\n  return a\nend\nn = a.shape[0]\ns = of_real_type(n)\nilo = 0\nihi = 0\nlapack(gebal, 'B'.ord.to_u8, n, a.to_unsafe, n, ilo, ihi, s.to_unsafe)\ntau = Tensor(T).new([n])\nlapack(gehrd, n, ilo, ihi, a.buffer, n, tau.buffer)\nNum.triu(a, -1)\n"}},{"id":"inv-instance-method","html_id":"inv-instance-method","name":"inv","doc":"Compute the (multiplicative) inverse of a matrix.\n\nGiven a square matrix a, return the matrix ainv satisfying\ndot(a, ainv) = dot(ainv, a) = eye(a.shape[0])\n\n```crystal\nt = Tensor.from_array([[1, 2], [3, 4]]).astype(Float32)\nputs t.inv\n\n# Tensor([[-2.0,  1.0],\n#         [ 1.5, -0.5]])\n```","summary":"<p>Compute the (multiplicative) inverse of a matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L303","def":{"name":"inv","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nn = a.shape[0]\nipiv = Pointer(Int32).malloc(n)\nlapack(getrf, n, n, a.to_unsafe, n, ipiv)\nlapack(getri, n, a.to_unsafe, n, ipiv, worksize: n * n)\na\n"}},{"id":"matmul(other:Tensor(T))-instance-method","html_id":"matmul(other:Tensor(T))-instance-method","name":"matmul","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor(T)"}],"args_string":"(other : Tensor(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L363","def":{"name":"matmul","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_matrix(self)\nassert_matrix(other)\na = flags.contiguous? ? self : dup\nb = other.flags.contiguous? ? other : other.dup\nm = a.shape[0]\nn = b.shape[1]\nk = a.shape[1]\ndest = Tensor(T).new([m, n])\nno = LibCblas::CblasTranspose::CblasNoTrans\nblas(ge, mm, no, no, m, n, k, blas_const(1.0), a.buffer, a.shape[1], b.buffer, b.shape[1], blas_const(0.0), dest.buffer, dest.shape[1])\ndest\n"}},{"id":"norm(*,order=&#39;F&#39;)-instance-method","html_id":"norm(*,order=&amp;#39;F&amp;#39;)-instance-method","name":"norm","doc":"Matrix or vector norm.\n\nThis function is able to return one of eight different matrix norms,\nor one of an infinite number of vector norms (described below),\ndepending on the value of the ord parameter.\n\n```crystal\nt = Tensor.from_array([[0, 1], [1, 1], [1, 1], [2, 1]]).astype(Float32)\nputs t.norm # => 3.6055512\n```","summary":"<p>Matrix or vector norm.</p>","abstract":false,"args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"order","doc":null,"default_value":"'F'","external_name":"order","restriction":""}],"args_string":"(*, order = <span class=\"s\">&#39;F&#39;</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L260","def":{"name":"norm","args":[{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"order","doc":null,"default_value":"'F'","external_name":"order","restriction":""}],"double_splat":null,"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_matrix(self)\na = dup(Num::ColMajor)\nm = a.shape[0]\nworksize = order == 'I' ? m : 0\nlapack_util(lange, worksize, order.ord.to_u8, m, m, tensor(a.to_unsafe), m)\n"}},{"id":"opencl-instance-method","html_id":"opencl-instance-method","name":"opencl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L44","def":{"name":"opencl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @flags.contiguous?\n  writer = self\nelse\n  writer = dup(Num::RowMajor)\nend\ngpu = NumInternal::ClStorage(T).new(@size)\nCl.write(Num::ClContext.instance.queue, writer.to_unsafe, gpu.to_unsafe, UInt64.new(@size * (sizeof(T))))\nClTensor(T).new(gpu, @shape)\n"}},{"id":"qr-instance-method","html_id":"qr-instance-method","name":"qr","doc":"Compute the qr factorization of a matrix.\n\nFactor the matrix a as qr, where q is orthonormal and r is\nupper-triangular.\n\n```crystal\nt = Tensor.from_array([[0, 1], [1, 1], [1, 1], [2, 1]]).astype(Float32)\nq, r = t.qr\nputs q\nputs r\n\n# Tensor([[   0.0,  0.866],\n#         [-0.408,  0.289],\n#         [-0.408,  0.289],\n#         [-0.816, -0.289]])\n# Tensor([[-2.449, -1.633],\n#         [   0.0,  1.155],\n#         [   0.0,    0.0],\n#         [   0.0,    0.0]])\n```","summary":"<p>Compute the qr factorization of a matrix.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L114","def":{"name":"qr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_matrix(self)\nm, n = shape\nk = {m, n}.min\na = dup(Num::ColMajor)\ntau = (qr_setup(a, m, n, k))[0]\nr = Num.triu(a)\nlapack(orgqr, m, n, k, a.to_unsafe, m, tau.to_unsafe)\n{a, r}\n"}},{"id":"solve(x:Tensor(T))-instance-method","html_id":"solve(x:Tensor(T))-instance-method","name":"solve","doc":"Solve a linear matrix equation, or system of linear scalar equations.\n\nComputes the “exact” solution, x, of the well-determined, i.e., full rank,\nlinear matrix equation ax = b.\n\n```crystal\na = Tensor.from_array([[3, 1], [1, 2]]).astype(Float32)\nb = Tensor.from_array([9, 8]).astype(Float32)\nputs a.solve(b)\n\n# Tensor([ 2.0,  3.0])\n```","summary":"<p>Solve a linear matrix equation, or system of linear scalar equations.</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Tensor(T)"}],"args_string":"(x : Tensor(T))","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L325","def":{"name":"solve","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Tensor(T)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_square_matrix(self)\na = dup(Num::ColMajor)\nx = x.dup(Num::ColMajor)\nn = a.shape[0]\nm = x.ndims > 1 ? x.shape[1] : x.shape[0]\nipiv = Pointer(Int32).malloc(n)\nlapack(gesv, n, m, a.to_unsafe, n, ipiv, x.to_unsafe, m)\nx\n"}},{"id":"svd-instance-method","html_id":"svd-instance-method","name":"svd","doc":"Singular Value Decomposition.\n\nWhen a is a 2D array, it is factorized as u @ np.diag(s) @ vh = (u * s) @ vh,\nwhere u and vh are 2D unitary arrays and s is a 1D array of a’s singular\nvalues.\n\n```crystal\nt = Tensor.from_array([[0, 1], [1, 1], [1, 1], [2, 1]]).astype(Float32)\na, b, c = t.svd\nputs a\nputs b\nputs c\n\n# Tensor([[-0.204,  0.842, -0.331,  0.375],\n#         [-0.465,  0.185,   -0.2, -0.843],\n#         [-0.465,  0.185,  0.861,  0.092],\n#         [-0.726, -0.473, -0.331,  0.375]])\n# Tensor([ 3.02, 0.936])\n# Tensor([[-0.788, -0.615],\n#         [-0.615,  0.788]])\n```","summary":"<p>Singular Value Decomposition.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/linalg.cr#L146","def":{"name":"svd","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"assert_matrix(self)\na = dup(Num::ColMajor)\nm, n = a.shape\nmn = {m, n}.min\nmx = {m, n}.max\ns = Tensor(T).new([mn])\nu = Tensor(T).new([m, m])\nvt = Tensor(T).new([n, n])\nlapack(gesdd, 'A'.ord.to_u8, m, n, a.to_unsafe, m, s.to_unsafe, u.to_unsafe, m, vt.to_unsafe, n, worksize: [{((5 * mn) * mn) + (5 * mn), (((2 * mx) * mn) + ((2 * mn) * mn)) + mn}.max, 8 * mn])\n{u.transpose, s, vt.transpose}\n"}},{"id":"tril(k=0)-instance-method","html_id":"tril(k=0)-instance-method","name":"tril","doc":null,"summary":null,"abstract":false,"args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"args_string":"(k = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L73","def":{"name":"tril","args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = dup\nret.tril!\nret\n"}},{"id":"tril!(k=0)-instance-method","html_id":"tril!(k=0)-instance-method","name":"tril!","doc":null,"summary":null,"abstract":false,"args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"args_string":"(k = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L63","def":{"name":"tril!","args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ndims == 2\n  tril2d(self, k)\nelse\n  matrix_iter.each do |subm|\n    tril2d(subm, k)\n  end\nend"}},{"id":"triu(k=0)-instance-method","html_id":"triu(k=0)-instance-method","name":"triu","doc":null,"summary":null,"abstract":false,"args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"args_string":"(k = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L57","def":{"name":"triu","args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ret = dup\nret.triu!\nret\n"}},{"id":"triu!(k=0)-instance-method","html_id":"triu!(k=0)-instance-method","name":"triu!","doc":null,"summary":null,"abstract":false,"args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"args_string":"(k = <span class=\"n\">0</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/manipulate.cr#L47","def":{"name":"triu!","args":[{"name":"k","doc":null,"default_value":"0","external_name":"k","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ndims == 2\n  triu2d(self, k)\nelse\n  matrix_iter.each do |subm|\n    triu2d(subm, k)\n  end\nend"}},{"id":"|(other)-instance-method","html_id":"|(other)-instance-method","name":"|","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/tensor.cr#L91","def":{"name":"|","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.bitwise_or(self, other)"}}],"macros":[{"id":"blas(storage,name,*args)-macro","html_id":"blas(storage,name,*args)-macro","name":"blas","doc":null,"summary":null,"abstract":false,"args":[{"name":"storage","doc":null,"default_value":"","external_name":"storage","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(storage, name, *args)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/extension.cr#L351","def":{"name":"blas","args":[{"name":"storage","doc":null,"default_value":"","external_name":"storage","restriction":""},{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"block_arg":null,"visibility":"Public","body":"    \n{% if T == Float32\n  typ = (:s).id\nelse\n  if T == Float64\n    typ = (:d).id\n  else\n    if T == Complex\n      typ = (:z).id\n    end\n  end\nend %}\n\n    LibCblas.\n{{ typ }}\n{{ storage }}\n{{ name }}\n(LibCblas::ROW_MAJOR, \n{{ *args }}\n)\n  \n"}},{"id":"lapack(name,*args,worksize=nil)-macro","html_id":"lapack(name,*args,worksize=nil)-macro","name":"lapack","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"worksize","doc":null,"default_value":"nil","external_name":"worksize","restriction":""}],"args_string":"(name, *args, worksize = <span class=\"n\">nil</span>)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/extension.cr#L73","def":{"name":"lapack","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},{"name":"worksize","doc":null,"default_value":"nil","external_name":"worksize","restriction":""}],"double_splat":null,"splat_index":1,"block_arg":null,"visibility":"Public","body":"      \n{% lapack_args = {\"gbtrf\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"gebal\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_INTOUT, 6 => NumInternal::LapackHelper::ARG_INTOUT, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"gees\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_INTOUT, 8 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_MATRIX}, \"geev\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_MATRIX}, \"gehrd\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"gels\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"gelsd\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_INTOUT}, \"gelsy\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_INTOUT}, \"geqp3\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"geqrf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"gerqf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"gelqf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"geqlf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"gesdd\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX}, \"gesv\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"getrf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"getri\" => {2 => NumInternal::LapackHelper::ARG_MATRIX, 4 => NumInternal::LapackHelper::ARG_MATRIX}, \"getrs\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"gges\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_INTOUT, 11 => NumInternal::LapackHelper::ARG_MATRIX, 12 => NumInternal::LapackHelper::ARG_MATRIX, 13 => NumInternal::LapackHelper::ARG_MATRIX, 14 => NumInternal::LapackHelper::ARG_MATRIX, 16 => NumInternal::LapackHelper::ARG_MATRIX}, \"ggev\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_MATRIX, 11 => NumInternal::LapackHelper::ARG_MATRIX, 13 => NumInternal::LapackHelper::ARG_MATRIX}, \"heevr\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 12 => NumInternal::LapackHelper::ARG_INTOUT, 13 => NumInternal::LapackHelper::ARG_MATRIX, 14 => NumInternal::LapackHelper::ARG_MATRIX, 16 => NumInternal::LapackHelper::ARG_MATRIX}, \"hegvd\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX}, \"hesv\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"hetrf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"hetri\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"orghr\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"orgqr\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"orgrq\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"orglq\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"orgql\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"posv\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"potrf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX}, \"potri\" => {3 => NumInternal::LapackHelper::ARG_MATRIX}, \"potrs\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"syevr\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 12 => NumInternal::LapackHelper::ARG_INTOUT, 13 => NumInternal::LapackHelper::ARG_MATRIX, 14 => NumInternal::LapackHelper::ARG_MATRIX, 16 => NumInternal::LapackHelper::ARG_MATRIX}, \"sygvd\" => {5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX}, \"sysv\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX}, \"sytrf\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"sytri\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX}, \"trtri\" => {4 => NumInternal::LapackHelper::ARG_MATRIX}, \"trtrs\" => {6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX}, \"syev\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX}, \"gecon\" => {3 => NumInternal::LapackHelper::ARG_MATRIX}}\nlapack_args_complex = {\"gees\" => {3 => NumInternal::LapackHelper::ARG_MATRIX, 5 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_INTOUT, 8 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX}, \"geev\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 7 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX}, \"gges\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_INTOUT, 11 => NumInternal::LapackHelper::ARG_MATRIX, 12 => NumInternal::LapackHelper::ARG_MATRIX, 13 => NumInternal::LapackHelper::ARG_MATRIX, 15 => NumInternal::LapackHelper::ARG_MATRIX}, \"ggev\" => {4 => NumInternal::LapackHelper::ARG_MATRIX, 6 => NumInternal::LapackHelper::ARG_MATRIX, 8 => NumInternal::LapackHelper::ARG_MATRIX, 9 => NumInternal::LapackHelper::ARG_MATRIX, 10 => NumInternal::LapackHelper::ARG_MATRIX, 12 => NumInternal::LapackHelper::ARG_MATRIX}}\nlapack_worksize = {\"gees\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1, \"bwork\" => NumInternal::LapackHelper::WORK_EMPTY}, \"geev\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"gehrd\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gels\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gelsd\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_DETECT_SPECIAL, \"iwork\" => NumInternal::LapackHelper::WORK_DETECT_SPECIAL}, \"gelsy\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"geqp3\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"geqrf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gerqf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gelqf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"geqlf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gesdd\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1, \"iwork\" => NumInternal::LapackHelper::WORK_PARAM2}, \"getri\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"gges\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1, \"bwork\" => NumInternal::LapackHelper::WORK_EMPTY}, \"ggev\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"heevr\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_DETECT, \"iwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"hegvd\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_DETECT, \"iwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"hesv\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"hetrf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"hetri\" => {\"cwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"orghr\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"orgqr\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"orgrq\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"orglq\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"orgql\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"syevr\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"iwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"sygvd\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"iwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"sysv\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"sytrf\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT}, \"sytri\" => {\"cwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"syev\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}, \"gecon\" => {\"cwork\" => NumInternal::LapackHelper::WORK_DETECT, \"rwork\" => NumInternal::LapackHelper::WORK_PARAM1}}\n %}\n\n\n\n      \n{% if T == Float32\n  typ = (:s).id\nelse\n  if T == Float64\n    typ = (:d).id\n  else\n    if T == Complex\n      typ = (:z).id\n    end\n  end\nend %}\n\n      \n{% if T == Complex\n  func_args = lapack_args_complex[name.stringify] || lapack_args[name.stringify]\nelse\n  func_args = lapack_args[name.stringify]\nend %}\n\n      \n{% func_worksize = lapack_worksize[name.stringify] %}\n\n\n      \n{% if T == Complex\n  name = (name.stringify.gsub(/^(or)/, \"un\")).id\nend %}\n\n\n      \n{% for arg, index in args %}\n        {% argtype = func_args[index + 1] %}\n        {% if argtype == NumInternal::LapackHelper::ARG_MATRIX %}\n        {% else %}{% if argtype == NumInternal::LapackHelper::ARG_INTOUT %}\n          {{ arg }} = 0\n        {% else %}\n        %var{index} = {{ arg }}\n        {% end %}{% end %}\n      {% end %}\n\n\n      \n{% if func_worksize && ((func_worksize.values.includes?(NumInternal::LapackHelper::WORK_DETECT)) || (func_worksize.values.includes?(NumInternal::LapackHelper::WORK_DETECT_SPECIAL))) %}\n        #let's detect sizes\n        #1. init vars\n        {% if func_worksize[\"cwork\"] %}\n          %csize = -1\n          %cresult = T.new(0.0)\n        {% end %}\n        {% if func_worksize[\"rwork\"] %}\n          %rsize = -1\n          %rresult = of_real_type(0.0)\n        {% end %}\n        {% if func_worksize[\"iwork\"] %}\n          %isize = -1\n          %iresult = 0\n        {% end %}\n\n        # 2. do workspace query\n        %info = 0\n        LibLapack.{{ typ }}{{ name }}(\n          {% for arg, index in args %}\n          {% argtype = func_args[index + 1] %}\n          {% if argtype == NumInternal::LapackHelper::ARG_MATRIX %}\n            {{ arg }},\n          {% else %}{% if argtype == NumInternal::LapackHelper::ARG_INTOUT %}\n            pointerof({{ arg }}),\n          {% else %}\n           pointerof(%var{index}),\n          {% end %}{% end %}\n          {% end %}\n\n          {% if func_worksize %}\n            {% if func_worksize[\"cwork\"] %}\n              {% if T == Complex %} pointerof(%cresult).as(LibCblas::ComplexDouble*) {% else %}pointerof(%cresult) {% end %},\n               {% if func_worksize[\"cwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                 pointerof(%csize),\n               {% end %}\n            {% end %}\n            {% if (T == Complex) && func_worksize[\"rwork\"] %}\n              pointerof(%rresult),\n               {% if func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                 pointerof(%rsize),\n               {% end %}\n            {% end %}\n            {% if func_worksize[\"iwork\"] %}\n              pointerof(%iresult),\n               {% if func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                 pointerof(%isize),\n               {% end %}\n            {% end %}\n            {% if func_worksize[\"bwork\"] %}\n               nil,\n            {% end %}\n          {% end %}\n\n          pointerof(%info))\n         #3. set sizes\n         {% if func_worksize[\"cwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n           %csize = {% if T == Complex %} %cresult.real.to_i {% else %}%cresult.to_i {% end %}\n         {% end %}\n         {% if ((T == Complex) && (func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_DETECT)) || (func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_DETECT_SPECIAL) %}\n           %rsize = %rresult.to_i\n         {% end %}\n         {% if (func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_DETECT) || (func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_DETECT_SPECIAL) %}\n           %isize = %iresult\n         {% end %}\n      {% end %}\n\n\n\n      \n{% if func_worksize %}\n        %asize = 0\n        {% if func_worksize[\"cwork\"] %}\n          {% if func_worksize[\"cwork\"] == NumInternal::LapackHelper::WORK_PARAM1 %}\n            %csize = {{ worksize[0] }}\n          {% else %}{% if func_worksize[\"cwork\"] == NumInternal::LapackHelper::WORK_PARAM2 %}\n            %csize = {{ worksize[1] }}\n          {% end %}{% end %}\n          %asize += %csize*sizeof(T)\n        {% end %}\n\n        {% if (T == Complex) && func_worksize[\"rwork\"] %}\n          {% if func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_PARAM1 %}\n            %rsize = {{ worksize[0] }}\n          {% else %}{% if func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_PARAM2 %}\n            %rsize = {{ worksize[1] }}\n          {% end %}{% end %}\n          %asize += %rsize*{% if T == Complex %} sizeof(Float64) {% else %} sizeof(T) {% end %}\n        {% end %}\n\n        {% if func_worksize[\"iwork\"] %}\n          {% if func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_PARAM1 %}\n            %isize = {{ worksize[0] }}\n          {% else %}{% if func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_PARAM2 %}\n            %isize = {{ worksize[1] }}\n          {% end %}{% end %}\n          %asize += %isize*sizeof(Int32)\n        {% end %}\n\n        Num::WORK_POOL.reallocate(%asize)\n\n        {% if func_worksize[\"cwork\"] %}\n          %cbuf = alloc_type(%csize)\n        {% end %}\n\n        {% if (T == Complex) && func_worksize[\"rwork\"] %}\n          %rbuf = alloc_real_type(%rsize)\n        {% end %}\n\n        {% if func_worksize[\"iwork\"] %}\n          %ibuf = Num::WORK_POOL.get_i32(%isize)\n        {% end %}\n\n      {% end %}\n\n\n       \n%info\n = 0\n       LibLapack.\n{{ typ }}\n{{ name }}\n(\n         \n{% for arg, index in args %}\n         {% argtype = func_args[index + 1] %}\n         {% if argtype == NumInternal::LapackHelper::ARG_MATRIX %}\n           {{ arg }},\n         {% else %}{% if argtype == NumInternal::LapackHelper::ARG_INTOUT %}\n           pointerof({{ arg }}),\n         {% else %}\n          pointerof(%var{index}),\n         {% end %}{% end %}\n         {% end %}\n\n\n         \n{% if func_worksize %}\n           {% if func_worksize[\"cwork\"] %}\n              %cbuf,\n              {% if func_worksize[\"cwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                pointerof(%csize),\n              {% end %}\n           {% end %}\n           {% if (T == Complex) && func_worksize[\"rwork\"] %}\n              %rbuf,\n              {% if func_worksize[\"rwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                pointerof(%rsize),\n              {% end %}\n           {% end %}\n           {% if func_worksize[\"iwork\"] %}\n              %ibuf,\n              {% if func_worksize[\"iwork\"] == NumInternal::LapackHelper::WORK_DETECT %}\n                pointerof(%isize),\n              {% end %}\n           {% end %}\n           {% if func_worksize[\"bwork\"] %}\n              nil,\n           {% end %}\n         {% end %}\n\n\n         pointerof(\n%info\n))\n\n         \n{% if func_worksize %}\n           Num::WORK_POOL.release\n         {% end %}\n\n    raise \"LAPACK.\n{{ typ }}\n{{ name }}\n returned #{\n%info\n}\" if \n%info\n != 0\n  \n"}},{"id":"lapack_util(name,worksize,*args)-macro","html_id":"lapack_util(name,worksize,*args)-macro","name":"lapack_util","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"worksize","doc":null,"default_value":"","external_name":"worksize","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(name, worksize, *args)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/tensor/extension.cr#L43","def":{"name":"lapack_util","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":""},{"name":"worksize","doc":null,"default_value":"","external_name":"worksize","restriction":""},{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":null,"splat_index":2,"block_arg":null,"visibility":"Public","body":"    Num::WORK_POOL.reallocate(worksize*\n{% if T == Complex %} sizeof(Float64) {% else %} sizeof(T) {% end %}\n)\n    \n%buf\n = alloc_real_type(worksize)\n    \n{% if T == Float32\n  typ = (:s).id\nelse\n  if T == Float64\n    typ = (:d).id\n  else\n    if T == Complex\n      typ = (:z).id\n    end\n  end\nend %}\n\n\n    \n{% for arg, index in args %}\n      {% if !(arg.stringify =~ (/^tensor\\(.*\\)$/)) %}\n        %var{index} = {{ arg }}\n      {% end %}\n    {% end %}\n\n\n    \n%result\n = LibLapack.\n{{ typ }}\n{{ name }}\n(\n      \n{% for arg, index in args %}\n        {% if !(arg.stringify =~ (/^tensor\\(.*\\)$/)) %}\n          pointerof(%var{index}),\n        {% else %}\n          {{ (arg.stringify.gsub(/^tensor\\((.*)\\)$/, \"(\\\\1)\")).id }},\n        {% end %}\n      {% end %}\n\n      \n%buf\n)\n    Num::WORK_POOL.release\n    \n%result\n\n  \n"}}],"types":[]},{"html_id":"github.com/crystal-data/num.cr/UInt16","path":"UInt16.html","kind":"struct","full_name":"UInt16","name":"UInt16","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/UInt32","path":"UInt32.html","kind":"struct","full_name":"UInt32","name":"UInt32","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]},{"html_id":"github.com/crystal-data/num.cr/UInt8","path":"UInt8.html","kind":"struct","full_name":"UInt8","name":"UInt8","abstract":false,"superclass":{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},"ancestors":[{"html_id":"github.com/crystal-data/num.cr/Int","kind":"struct","full_name":"Int","name":"Int"},{"html_id":"github.com/crystal-data/num.cr/Number","kind":"struct","full_name":"Number","name":"Number"},{"html_id":"github.com/crystal-data/num.cr/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/crystal-data/num.cr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/crystal-data/num.cr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"extensions/number.cr","line_number":39,"url":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr"}],"repository_name":"github.com/crystal-data/num.cr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"%(other:Tensor)-instance-method","html_id":"%(other:Tensor)-instance-method","name":"%","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"%","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.modulo(self, other)"}},{"id":"*(other:Tensor)-instance-method","html_id":"*(other:Tensor)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.multiply(self, other)"}},{"id":"**(other:Tensor)-instance-method","html_id":"**(other:Tensor)-instance-method","name":"**","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"**","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.power(self, other)"}},{"id":"+(other:Tensor)-instance-method","html_id":"+(other:Tensor)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.add(self, other)"}},{"id":"-(other:Tensor)-instance-method","html_id":"-(other:Tensor)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.subtract(self, other)"}},{"id":"/(other:Tensor)-instance-method","html_id":"/(other:Tensor)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"/","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.divide(self, other)"}},{"id":"//(other:Tensor)-instance-method","html_id":"//(other:Tensor)-instance-method","name":"//","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"//","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.floordiv(self, other)"}},{"id":"<(other:Tensor)-instance-method","html_id":"&lt;(other:Tensor)-instance-method","name":"<","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less(self, other)"}},{"id":"<=(other:Tensor)-instance-method","html_id":"&lt;=(other:Tensor)-instance-method","name":"<=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"<=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.less_equal(self, other)"}},{"id":"==(other:Tensor)-instance-method","html_id":"==(other:Tensor)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.equal(self, other)"}},{"id":">(other:Tensor)-instance-method","html_id":"&gt;(other:Tensor)-instance-method","name":">","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater(self, other)"}},{"id":">=(other:Tensor)-instance-method","html_id":"&gt;=(other:Tensor)-instance-method","name":">=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"args_string":"(other : Tensor)","source_link":"https://github.com/crystal-data/num.cr/blob/fb6c2f1ce7f02fc5acdcd466483437a4d9ad8252/src/extensions/number.cr#L39","def":{"name":">=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Tensor"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Num.greater_equal(self, other)"}}],"macros":[],"types":[]}]}}